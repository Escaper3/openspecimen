<?xml version ="1.0"?>

<!--Ant Script for create Build for caTISSUE Core-->
<project name="caTissue Suite" default="compile">
	<import file="build-properties.xml"/>
	<!--define require dir and Properties for <if> </if> tag-->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar"/>
		</classpath>
	</taskdef>

	<!--<loadfile property="dist.revision" srcFile="./.svn/entries">
		<filterchain>
			<headfilter lines="1" skip="4"/>
		</filterchain>
	</loadfile>-->

	<!--define require dir and Properties -->
	<property name="base.dir" value="." />
	<property name="src.dir" value="${base.dir}/WEB-INF/src" />
	<property name="resources.dir" value="${base.dir}/WEB-INF/resources" />
	<property name="target.dir" value="${base.dir}/WEB-INF/classes" />
	<property name="lib.dir" value="${base.dir}/WEB-INF/lib" />
	<property name="applet.dir" value="${base.dir}/Applet" />
	<property name="dagviewapplet.dir" value="${applet.dir}/DagViewApplet" />
	<property name="hbm.dir" value="${src.dir}/edu/wustl/catissuecore/hbm" />
	<property name="generateforce" value="true" />
	<property name="junit.jar" value="${lib.dir}/junit-4.1.jar" />
	<property name="cobertura.dir" value="${target.dir}/reports/coverage" />
	<property name="report.dir" value="${base.dir}/WEB-INF" />
	<property name="catissue.applet.dir" value="${base.dir}/Applet/catissue" />
	<property name="test.src.dir" value="${base.dir}/WEB-INF/src/edu/wustl/catissuecore/bizlogic/test" />
	<property name="test.class.dir" value="${base.dir}/WEB-INF/classes/edu/wustl/catissuecore/bizlogic/test" />
	<!-- csm related properties -->
	<property name="temp.dir" value="${base.dir}/tempCatissuecore"/>
	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect"/>
	<property name="mysql.dialect.h3.string" value="edu.wustl.catissuecore.hibernate.dialect.MySqlCustomDialect"/>
	<property name="project.src.domain" value="${base.dir}/WEB-INF/src/edu/wustl/catissuecore/domain/"/>

	<!-- flex related properties -->
	<property name="FLEX_HOME" value="E:/Flex SDK 2"/>
	<property name="FLEX_APP_ROOT" value="flexclient"/>
	<property name="flex.dir" value="${base.dir}/WEB-INF/flex" />
	<!-- flex related properties finish -->
	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
          <classpath>
	    <pathelement location="${lib.dir}/aspectjtools-1.6.6.jar"/>
	  </classpath>
	</taskdef>
	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="xdoclet.classpath">
		<path refid="app.classpath" />
	</path>

	<path id="junit.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/lib/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />

		<path refid="app.classpath" />
	</path>



	<!-- struts test case related properties -->
	<property name="cat.cobertura.dir" value="${base.dir}" />
	<property name="cat.instrumented.dir" value="./instrument"/>
	<property name="cobertura.lib" value="./cobertura/lib"/>



	<!-- sub tasks -->
	<target name="init" description="initialize">
		<!-- Create the time stamp -->
		<tstamp />
		<delete includeemptydirs="true" dir="${target.dir}" failonerror="false">
		        </delete>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${target.dir}" />
		<!-- Create the temp directory for caCORE CSM war file-->
		<mkdir dir="${temp.dir}"/>
		<antcall target="check.java.version">
		</antcall>
	</target>

	<target name="Catissue_Cdms_Client_Integration" description="Creates a caTissue CDMS integration jar">
		<delete file="caTissueCdmsIntegration.jar" />

		<jar destfile="caTissueCdmsIntegration.jar">
			<fileset dir="${target.dir}" >
				<include name="**/ICatissueCdmsIntegrator.class"/>
				<include name="**/CatissueCdmsIntegrator.class"/>
				<include name="**/CatissueCdmsURLInformationObject.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="Label_BarCode_Generator_Client">
		<delete file="label_barcode_gen_client.jar" />

		<jar destfile="label_barcode_gen_client.jar">
			<fileset dir="${target.dir}" >
				<include name="**/LabelGenerator.class"/>
				<include name="**/LabelGeneratorFactory.class"/>
				<include name="**/BarcodeGenerator.class"/>
				<include name="**/BarcodeGeneratorFactory.class"/>
				<include name="**/LabelTokens.class"/>
				<include name="**/TokenFactory.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="Default_Label_BarCode_Generator"  depends ="Label_BarCode_Generator_Client,build_client_jar">
		<delete file="Default_label_barcode_gen.jar" />
		<jar destfile="Default_label_barcode_gen.jar">
			<!--  fileset dir="./catissuecore-properties" >
			<include  name="LabelGenerator.Properties" />
		</fileset -->
			<!-- fileset dir="." >
			<include name="label_barcode_gen_client.jar"/>
		</fileset -->

			<fileset dir="${target.dir}" >
				<include name="**/namegenerator/*"/>

				<exclude name="**/LabelGenerator.class"/>
				<exclude name="**/LabelGeneratorFactory.class"/>
				<exclude name="**/BarcodeGenerator.class"/>
				<exclude name="**/BarcodeGeneratorFactory.class"/>
				<exclude name="**/LabelTokens.class"/>
				<exclude name="**/TokenFactory.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="PrintService_Client">
		<delete file="printservice_client.jar" />

		<jar destfile="printservice_client.jar">
			<fileset dir="${target.dir}" >
				<include name="**/LabelPrinter.class"/>
				<include name="**/LabelPrinterFactory.class"/>
				<include name="**/PropertyHandler.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="PrintService_Module"  depends ="PrintService_Client,build_client_jar">
		<delete file="printservice_module.jar" />
		<jar destfile="printservice_module.jar">
			<fileset dir="${target.dir}" >
				<include name="**/printservicemodule/*"/>
				<exclude name="**/printservicemodule/PrintServiceImplementor.properties"/>
			</fileset>
			<!--<fileset dir="${target.dir}/edu/wustl/catissuecore/printservicemodule" >
						<include  name="PrintServiceImplementor.properties" />
			</fileset>-->
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete includeemptydirs="true">
			<fileset dir="${target.dir}">
				<include name="**/*" />
				<exclude name="CVS" />
			</fileset>
		</delete>
	</target>

	<!-- Compile all files, generated and hand-written -->
	<target name="compile" depends="init">
		<javac destdir="${target.dir}" includes="**/*.*" includeAntRuntime="false" debug="yes" target="1.6">
			<compilerarg line="-Xmaxerrs 10000" />
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
					<exclude name="dynamicextensions-legacy.jar"/>
				</fileset>
				<fileset dir="./lib">
					<include name="j2ee.jar" />
				</fileset>
				<pathelement location="${ant.home}\lib\ant.jar"/>
			</classpath>
			<classpath refid="cobertura.classpath" />
		</javac>
		<copy todir="${target.dir}" overwrite="true">
			<fileset dir="${src.dir}" >
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
				<include name="**/*.vm" />
			</fileset>
			<fileset dir="${resources.dir}">
				<include name="**/*.hbm.xml" />
                                <include name="errors/*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="aspect.compile" depends="init">
		<iajc destDir="${target.dir}" source="1.6" target="1.6" verbose="true" includes="**/*.*" showWeaveInfo="true">
			<sourceroots>
				<pathelement location="${src.dir}"/>
			</sourceroots>
                        <aspectpath>
				<pathelement location="${lib.dir}/spring-aspects-2.5.0.jar"/>
			</aspectpath>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
					<exclude name="dynamicextensions-legacy.jar"/>
				</fileset>
				<fileset dir="./lib">
					<include name="j2ee.jar" />
				</fileset>
				<pathelement location="${ant.home}/lib/ant.jar"/>
				<pathelement location="${lib.dir}/aspectjrt-1.5.0.jar"/>
			</classpath>
			<classpath refid="cobertura.classpath" />
		</iajc>
		<copy todir="${target.dir}" overwrite="true">
			<fileset dir="${src.dir}" >
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
				<include name="**/*.vm" />
			</fileset>
			<fileset dir="${resources.dir}">
				<include name="**/*.hbm.xml" />
                                <include name="errors/*.properties"/>
			</fileset>
		</copy>
	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_applet_jar" depends="compile">
		<delete>
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
				<exclude name="**/cab2bStandAlone.jar" />
				<exclude name="**/commonpackage.jar" />
				<exclude name="**/org-netbeans-graph.jar" />
				<exclude name="**/org-netbeans-graph-vmd.jar" />
				<exclude name="**/org-openide-util.jar" />
				<exclude name="**/DynamicExtensions.jar" />
				<include name="**/swingx-2006_10_08.jar" />
				<include name="**/struts.jar" />
				<include name="**/hibernate2.1.7c.jar" />
				<include name="**/odmg.jar"/>
				<exclude name="**/dagViewApplet.jar" />
			</fileset>
		</delete>

		<copy todir="${applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/QueryTree.class" />
				<include name="**/NodeSelectionListener.class" />
				<include name="**/StorageLocationViewListener.class" />
				<include name="**/TissueSiteTreeNodeListener.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/query">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/query">
				<include name="**/QueryTreeNodeMap.class" />
				<include name="**/TreeNodeData.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/storage">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/storage">
				<include name="**/GenerateTree.class" />
				<include name="**/StorageContainerGridObject.class" />
				<include name="**/StorageContainerTreeNode.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/tissuesite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/tissuesite">
				<include name="**/TissueSiteTreeNode.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/util/global">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/util/global">
				<include name="**/Constants.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/vo">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/vo">
				<include name="**/TreeNode.class" />
				<include name="**/TreeNodeFactory.class" />
			</fileset>
		</copy>

		<jar taskname="buildJar" jarfile="${applet.dir}/QueryTree.jar">
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- Create the Applet JAR Ends-->

	<!-- Creates the WAR (Web Application Archive) file of the application -->
	<target name="build_war" depends="init, aspect.compile,common_build_war,build_client_jar">

	</target>
	<!-- Create war file for installable zip file.Please us this target when creating installable zip.
		Note: database type is not replaced
	-->
	<target name="installable_build_war" depends="init, compile, common_build_war,build_client_jar">
	</target>

	<!-- build catissuecore war file which is common to above both targets -->
	<target name="common_build_war" depends ="Default_Label_BarCode_Generator,Catissue_Cdms_Client_Integration,PrintService_Module,create_war">
	</target>

	<target name="create_war">
		<delete file="catissuecore.war" />

		<copy todir="WEB-INF/lib" overwrite="true">
			<fileset dir="${base.dir}"  >
				<include name="Default_label_barcode_gen.jar" />
				<include name="label_barcode_gen_client.jar" />
				<include name="printservice_client.jar" />
				<include name="printservice_module.jar" />
				<include name="caTissueCdmsIntegration.jar" />
			</fileset>
		</copy>
		<delete file="caTissueCdmsIntegration.jar"/>
		<delete file="${base.dir}/MANIFEST.MF"/>
		<manifest file="${base.dir}/MANIFEST.MF">

			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Version" value="${application.name} ${application.version}"/>
			<attribute name="CSM-Version" value="${csm.version}"/>
			<attribute name="caCore-Version" value="${cacore.version}"/>
			<attribute name="Build-on" value="${TODAY}"/>
			<attribute name="SVN-URL" value="${dist.revision}" />

		</manifest>
		<replace dir="${base.dir}/WEB-INF/classes" propertyfile="caTissueInstall.properties">
			<include name ="log4j.properties"/>
			<replacefilter token="@@jbosshome@@" value="${jboss.server.url}"/>
		</replace>
		<antcall target="copydeletedjars" >
			<param name="deleteFromDir" value="${base.dir}/WEB-INF/lib"  />
		</antcall>
		<antcall target="copydeletedjars" >
			<param name="deleteFromDir" value="${temp.dir}/catissuecorecsm"/>
		</antcall>
		<replace dir="${base.dir}/WEB-INF/classes"  propertyfile="caTissueInstall.properties">
			<include name ="ApplicationResources.properties"/>
			<replacefilter token="@@application.environment@@" value="${application.environment}"/>
		</replace>
                <copy file="${base.dir}/www/dist/index.html" tofile="${base.dir}/www/dist/v20.jsp" failonerror="false"/>

		<war destfile="catissuecore.war" webxml="WEB-INF/web.xml"
			duplicate="preserve" manifest="${base.dir}/MANIFEST.MF" >

                        <fileset dir="${base.dir}/www/dist" erroronmissingdir="false">
                          <include name="**/**"/>
                        </fileset>

			<fileset dir="${base.dir}">
				<include name="ngweb/**"/>
				<include name="css/**" />
				<include name="images/**" />
				<include name="jss/**" />
				<include name="SQL/liquibase_xml/**" />
				<include name="deploytempCatissuecore/AdvanceQuery/dhtml/**"/>
				<include name="WEB-INF/**" />
				<include name="caTissue_Suite_User_Manual.pdf" />
				<include name="caTissue_Suite_User_Manual.doc" />
				<include name="caTissueSuite_v1_2_Technical_Guide.doc" />
				<include name="caTissueSuiteV11_UML.zip" />
				<include name="**/WEB-INF/classes/**/cdms/CdmsIntegratorImpl.class" />
				<include name="**/WEB-INF/classes/META-INF/aop.xml" />
				<exclude name="**/WEB-INF/classes/**/namegenerator/*"/>
				<exclude name="**/WEB-INF/classes/**/cdms/*"/>

				<exclude name="**/log4j.properties" />
				<exclude name="**/WEB-INF/src*/**" />
				<exclude name="**/WEB-INF/lib/*.zip" />
				<exclude name="**/WEB-INF/lib/ant-jmeter.jar" />
				<exclude name="**/WEB-INF/lib/junit-4.11.jar" />
				<exclude name="**/WEB-INF/lib/mockito-all-1.9.5.jar" />	
				<exclude name="**/WEB-INF/lib/cobertura.jar"/>
				<exclude name="**/WEB-INF/lib/junit*.jar" />
				<exclude name="**/*servlet.jar*" />
				
				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/CVS*" />
				<exclude name="**/WEB-INF/lib/jta.jar" />

				<exclude name="**/WEB-INF/lib/bonecp-0.7.1.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/dbunit-2.4.8.jar" />
				<exclude name="**/WEB-INF/lib/dom4j-1.6.1.jar" />
				<exclude name="**/WEB-INF/lib/guava-r08.jar" />
				<exclude name="**/WEB-INF/lib/h2-1.3.166.jar" />
				<exclude name="**/WEB-INF/lib/hibernate-commons-annotations-3.3.0.ga.jar" />
				<exclude name="**/WEB-INF/lib/hibernate-core-3.3.2.GA.jar" />
				<exclude name="**/WEB-INF/lib/hibernate-jpa-2.0-api-1.0.1.Final.jar" />
				<exclude name="**/WEB-INF/lib/hibernate-validator-4.2.0.Final.jar" />
				<exclude name="**/WEB-INF/lib/javassist-3.15.0-GA.jar" />
				<exclude name="**/WEB-INF/lib/jcl-over-slf4j-1.6.1.jar" />
				<exclude name="**/WEB-INF/lib/jta.jar" />
				<exclude name="**/WEB-INF/lib/servlet-api-2.4.jar" />
				<exclude name="**/WEB-INF/lib/slf4j-api-1.6.4.jar" />
				<exclude name="**/WEB-INF/lib/slf4j-log4j12-1.6.4.jar" />
				<exclude name="**/WEB-INF/lib/spring-aop-3.1.2.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/spring-data-commons-core-1.4.0.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/spring-data-jpa-1.2.0.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/spring-expression-3.1.2.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/spring-test-3.1.1.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/spring-test-3.2.1.RELEASE.jar" />
				<exclude name="**/WEB-INF/lib/usertype.core-3.0.0.CR3.jar" />
				<exclude name="**/WEB-INF/lib/usertype.spi-3.0.0.CR3.jar" />
				<exclude name="**/WEB-INF/lib/validation-api-1.0.0.GA.jar" />
				<exclude name="**/WEB-INF/lib/jdom-1.1.1.jar" />
				<exclude name="**/WEB-INF/lib/spring-test-dbunit-1.2.0-SNAPSHOT.jar" />
				
			</fileset>
			<!-- Excluding unwanted jars -->

		</war>

	</target>

	<target name="copydeletedjars">
		<echo>deleting unneccesary jars from ${deleteFromDir}</echo>
		<delete failonerror="false" >
			<fileset dir="${deleteFromDir}">
				<include name="backport-util-concurrent-3.0.jar" />
				<include name="c3p0-0.8.4.5.jar" />
				<include name="c3p0-0.8.5.2.jar" />
				<include name="castor-1.0.2.jar" />
				<include name="cglib-2.1.jar" />
				<include name="commons-collections-2.1.1.jar" />
				<include name="commons-collections-3.1.jar" />
				<include name="commons-discovery-0.2.jar" />
				<include name="commons-fileupload.jar" />
				<include name="commons-lang-2.1.jar" />
				<include name="commons-logging-1.0.4.jar" />
				<include name="freemarker.jar" />
				<include name="jakarta-oro.jar" />
				<include name="uml-1.3.jar" />
				<include name="wsdl4j-1.5.1.jar" />
				<include name="xalan-2.4.0.jar" />
				<include name="p6spy.jar" />
				<include name="sdkClient.jar" />
				<include name="uuid-key-generator.jar" />
				<include name="wsdl4j.jar" />
				<include name="j2ee.jar" />
				<include name="caGrid-1.0-caDSR-client.jar" />
				<include name="caGrid-1.0-caDSR-common.jar" />
				<include name="caGrid-1.0-caDSR-stubs.jar" />
				<include name="caGrid-1.0-core.jar" />
				<include name="caGrid-1.0-data-common.jar" />
				<include name="caGrid-1.0-data-stubs.jar" />
				<include name="caGrid-1.0-data-utils.jar" />
				<include name="caGrid-1.0-fqp-client.jar" />
				<include name="caGrid-1.0-fqp-common.jar" />
				<include name="caGrid-1.0-fqp-stubs.jar" />
				<include name="caGrid-1.0-metadata-common.jar" />
				<include name="caGrid-1.0-metadata-security.jar" />
				<include name="caGrid-1.0-sdkQuery.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-client.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-common.jar" />
				<include name="jboss-common-jdbc-wrapper.jar"/>
				<include name="mysql-connector-java-3.1.13-bin.jar"/>
				<!--<include name="ojdbc14.jar"/>-->
				<include name="boot.jar" />
				<include name="c3p0-0.9.0.jar" />
				<include name="experiment-client.jar" />
				<!--<include name="jboss-client.jar" />-->
				<include name="junit-4.1.jar" />
				<include name="mockobjects-core-0.09.jar" />
				<!--include name="mysql-connector-java-5.0.8-bin.jar" / -->
				<include name="openide-util.jar" />
				<include name="acrobat-core.jar" />
				<!-- removed to work printwebservice -->
			</fileset>

		</delete>
	</target>

	<target name="clean_temp_dir_csmwar" description="delete temp directory used for caCORE unpack">
		<!-- do delete ${temp.dir} -->
		<delete dir="${temp.dir}" />
		<delete file="${jboss.server.url}/deploy/catissuecorecsm.war" />
	</target>

	<!--Deploys the application war file at JBOSS server by coping it to deploy directory of application server-->
	<target name="deploy">
		<!--antcall target="clean" /-->
		<antcall target="compile" />
		<antcall target="create_war" />
		<!-- delete temp dir
			<antcall target="clean_temp_dir_csmwar" /
			-->

		<!--antcall target="cleanserver" /-->
		<!-- Not required to copy csm war file -->


		<sleep seconds="2" />
	</target>



	<!--
		Generates the Hibernate mapping (HBM) files which are used in mapping
		the domain objects to database schema of the application.
		This generates the HBM files from the XDoclet tags written in the domain object classes.
	-->
	<target name="generate_hbm" description="Generates Hibernate class descriptor files.">
		<!-- Define the hibernatedoclet task -->
		<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
			<classpath refid="xdoclet.classpath" />
		</taskdef>

		<!-- Execute the hibernatedoclet task -->
		<hibernatedoclet destdir="${src.dir}" excludedtags="@version,@author,@todo"
					     force="${generateforce}" mergedir="${src.dir}" verbose="false">
			<fileset dir="${src.dir}">
				<include name="**/domain/*.java" />
				<include name="**/cde/*.java" />
			</fileset>
			<hibernate version="2.0" />
		</hibernatedoclet>

		<!-- Upgrade grammar from Hibernate1 to Hibernate2 -->
		<replace dir="${src.dir}">
			<include name="**/domain/*.hbm.xml" />
			<include name="**/cde/*.hbm.xml" />
			<replacefilter token="readonly=" value="inverse=" />
			<replacefilter token="role=" value="name=" />
			<replacefilter token="hibernate-mapping.dtd" value="hibernate-mapping-2.0.dtd" />
		</replace>

		<copy todir="${hbm.dir}">
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain">
				<include name="*.hbm.xml" />
			</fileset>
			<fileset dir="${src.dir}/edu/wustl/common/cde">
				<include name="*.hbm.xml" />
			</fileset>
		</copy>

		<delete>
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain" includes="*.hbm.xml" />
			<fileset dir="${src.dir}/edu/wustl/common/cde" includes="*.hbm.xml" />
		</delete>
	</target>

	<target name="createJavaDoc">
		<javadoc destdir="${client.dir}/JavaDoc"
   			author="true"
   			version="true"
   			use="true"
   			windowtitle="JavaDoc">
			<fileset dir="${project.src.domain}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>


	<target name="create_zip" depends="createJavaDoc,installable_build_war">
		<property name="zip.dir" value="${base.dir}/OpenSpecimen_v${application.version}_Installable" />
		<property name="zip.file" value="${base.dir}/OpenSpecimen_v${application.version}_Installable.zip" />

		<delete file="${zip.file}" />
		<delete dir="${zip.dir}" />
		<mkdir dir="${zip.dir}" />

		<copy file="README.md" todir="${zip.dir}" overwrite="true" />

		<copy todir="${zip.dir}/modules/bulk_operations/lib" overwrite="true">
			<fileset file="${base.dir}/WEB-INF/lib/DynamicExtensions*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/castor-0.9.9.jar" />
			<fileset file="${temp.dir}/catissuecore.jar"/>
			<fileset file="${base.dir}/WEB-INF/lib/commons-logging.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-httpclient*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-codec*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/hibernate3.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/opencsv-1.8.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/struts.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-beanutils-1.8.3-1.0.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-digester3-3.0-1.0.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/xerces*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-digester*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-beanutils*.jar" />
		</copy>
		
		<copy todir="${zip.dir}" overwrite="true">
			<fileset dir="${base.dir}" includes="aq-forms/**"/>
			<fileset dir="${base.dir}" includes="aq-queries/**"/>
			<fileset dir="${base.dir}" includes="spe-forms/**"/>
		</copy>

		<copy todir="${zip.dir}/modules/caTissue/images" overwrite="true">
			<fileset file="${base.dir}/images/defauleLogo.png" />
		</copy>
		
		<copy todir="${zip.dir}/modules/caTissue/images" overwrite="true">
			<fileset file="${base.dir}/images/InstitutionLogo.gif" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/images/uIEnhancementImages" overwrite="true">
			<fileset file="${base.dir}/images/uIEnhancementImages/siteman_logo.gif" />
		</copy>
		<copy file="catissuecore.war" todir="${zip.dir}/modules/caTissue/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/caTissue/lib" overwrite="true">
			<fileset file="${base.dir}/lib/ant-contrib.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/mysql-connector-java-5.0.8-bin.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/ojdbc14.jar" />
			<fileset file="${base.dir}/lib/dom4j-1.6.jar" />
			<fileset file="${base.dir}/lib/j2ee.jar" />
			<fileset file="${base.dir}/lib/log4j.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/sqljdbc.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commonpackage*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/DAO*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/ParticipantManager*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/washu-commons*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/securityManager*.jar" />
			<fileset file="${base.dir}/lib/liquibase.jar" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/conf/catissuecore-properties" overwrite="true">
			<fileset dir="${base.dir}/catissuecore-properties" />
		</copy>
		
		<copy todir="${zip.dir}/modules/caTissue/conf/catissuecore-properties/ng-email-templates" overwrite="true">
			<fileset dir="${base.dir}/WEB-INF/resources/ng-email-templates"/>
		</copy>
		<copy file="caTissueInstall.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="build-properties.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="MANIFEST.MF" todir="${zip.dir}" overwrite="true" />
		<copy file="deploy_zip.xml" todir="${zip.dir}" overwrite="true" />
		<rename src="${zip.dir}/deploy_zip.xml" dest="${zip.dir}/build.xml"/>
		<copy file="performance.properties" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="properties-service.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="catissuecore-ds.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />

		<copy file="dynamicextensions.zip" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="${base.dir}/WEB-INF/lib/DynamicExtensions.jar"
			todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="DEDeploy_zip.xml" todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" />
		<rename src="${zip.dir}/modules/dynamic_extensions/conf/DEDeploy_zip.xml" dest="${zip.dir}/modules/dynamic_extensions/conf/DEDeploy.xml"/>

		<copy file="printservice_module.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="printservice_client.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="${base.dir}/WEB-INF/lib/PrintCatissueCore_Client.jar"
			todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />

		<copy todir="${zip.dir}/SQL" overwrite="true">
			<fileset dir="${base.dir}/SQL" >
				<exclude name="**/Permissible_values/*.ctl"/>
			</fileset>
		</copy>

		<zip destfile="${zip.file}" basedir="${zip.dir}" />
		<delete dir="${zip.dir}" />

	</target>


	<!-- =================================================================== -->
	<!-- Junit test case execution report                                    -->
	<!-- =================================================================== -->
	<target name="run_junit_testcases">
		<mkdir dir="${target.dir}/reports" />
		<mkdir dir="${target.dir}/reports/junit" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />

			<!--
					Specify the name of the coverage data file to use.
					The value specified below is the default.
 	     -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />


			<classpath>
				<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />
			</classpath>

			<classpath refid="junit.classpath" />

			<batchtest todir="${target.dir}/reports/junit">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>


	<target name="gen_report_junit_testcases">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="run_junit_testcases" />
		<mkdir dir="${report.dir}/reports/junit" />

		<junitreport todir="${report.dir}/reports/junit">
			<fileset dir="${target.dir}/reports/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/junit" />
		</junitreport>
	</target>


	<!-- =================================================================== -->
	<!-- Junit TestCases for Nightly Build  -->
	<!-- =================================================================== -->

	<target name="compile_junit_TestCases">
		<javac destdir="${test.src.dir}" includes="**/*TestCases.java" includeAntRuntime="false" target="1.5">
			<src path="${src.dir}"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>



	<!--  <property name="reportgenerator.input.jmeterfile" value="D:/Nightly_Build/XmlReport/CaTissueJMeterTests.jtl" />
		  <property name="reportgenerator.input.junitfile" value="D:/Nightly_Build/XmlReport/TESTS-TestSuites.xml" />
		  <property name="reportgenerator.output.file" value="D:/Nightly_Build/script/mail_setting.properties" />
	-->
	<property name="reportgenerator.input.junit_api_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_report.xml" />

	<property name="reportgenerator.input.junit_struts_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_struts_report.xml" />

	<target name="GenerateNightlyBuildReport" depends="compile">
		<copy file="./TestResult.htm" todir="${base.dir}/XmlReport"/>
		<java classname="NightlyBuildReportGenerator" fork="true">
			<arg value="${reportgenerator.input.junit_api_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_upgrade_file}" />
			<classpath>
				<pathelement location="./WEB-INF/classes"/>
			</classpath>

		</java>
	</target>

	<!-- =================================================================== -->
	<!-- Cobertura code coverage report                                      -->
	<!-- =================================================================== -->
	<path id="cobertura.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-tree-2.2.1.jar" />
		<path refid="app.classpath" />
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	<target name="instrument">
		<delete dir="./cobertura/instrumented" />
		<delete file="${jboss.home.dir}/bin/cobertura.ser" />
		<mkdir dir="./cobertura/instrumented" />
		<!--
	       Instrument the application classes, writing the
	       instrumented classes into ${build.instrumented.dir}.
	    -->
		<cobertura-instrument datafile="${jboss.home.dir}/bin/cobertura.ser"
			todir="./cobertura/instrumented">
			<!--
	         The following line causes instrument to ignore any
	         source line containing a reference to log4j, for the
	         purposes of coverage reporting.
	      -->
			<ignore regex="org.apache.log4j.*" />
			<classpath refid="cobertura.classpath" />
			<fileset dir="./WEB-INF/classes">
				<include name="**/*.class" />
			</fileset>

		</cobertura-instrument>
		<echo>Copying instrumented class files to classes folder</echo>
		<copy todir="./WEB-INF/classes">
			<fileset dir="./cobertura/instrumented">
				<include name="**/*.class" />
			</fileset>
		</copy>
	</target>

	<target name="build_war_cobertura" depends="init, compile, instrument,
		build_war_cobertura_post_compilation">
	</target>

	<target name="build_war_cobertura_post_compilation" depends="
		common_build_war,build_client_jar">
	</target>

	<target name="gen_report_cobertura">
		<cobertura-report datafile="./cobertura/cobertura.ser"
			srcdir="${src.dir}" destdir="./cobertura/reports/coverage" format="html" />
		<delete file="./cobertura/cobertura.ser" />
	</target>

	<!-- Create the Applet JAR Begins-->

	<target name="build_catissue_applet_jar" depends="build_catissue_applet_compile">
		<mkdir dir="${catissue.applet.dir}"/>
		<delete>
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</delete>
		<!-- Mandar : 30Oct06 : Image Folder -->
		<copy todir="${catissue.applet.dir}/images">
			<fileset dir="${base.dir}/images">
				<include name="**/*"/>
			</fileset>
		</copy>

		<copy todir="${catissue.applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/applet/**" />
				<include name="**/edu/wustl/catissuecore/util/global/Constants.class" />
				<include name="**/edu/wustl/common/util/global/Validator.class" />
				<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.class" />
			</fileset>
		</copy>
		<jar taskname="buildJar" jarfile="${applet.dir}/CaTissueApplet.jar">
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		<delete includeemptydirs="true">
			<fileset dir="${catissue.applet.dir}">
				<include name="**/*" />
				<exclude name="**/CVS*" />
			</fileset>
		</delete>
	</target>

	<!-- compilation using jdk1.3 -->
	<target name="build_catissue_applet_compile" depends="init">
		<javac destdir="${target.dir}" includeAntRuntime="false" fork="yes" executable="D:/jdk1.3/bin/javac" compiler="javac1.3">
			<src path="${src.dir}"/>
			<include name="**/edu/wustl/catissuecore/applet/**" />
			<include name="**/edu/wustl/catissuecore/util/global/Constants.java" />
			<include name="**/edu/wustl/common/util/global/Validator.java" />
			<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.java" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- build catissuecore client jar to content latest domain classes & put inside client lib folder-->
	<target name="build_client_jar">
		<jar taskname="buildClientJar" jarfile="${temp.dir}/catissuecore.jar">
			<fileset dir="${target.dir}">
				<include name="**/com/krishagni/catissueplus/bulkoperator/**"/>
				<include name="**/com/krishagni/catissueplus/core/biospecimen/domain/**"/>
				<include name="**/com/krishagni/catissueplus/core/biospecimen/events/**"/>
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/client/**"/>
				<include name="**/edu/wustl/catissuecore/bean/**"/>
				<include name="**/edu/wustl/catissuecore/namegenerator/**"/>
				<include name="**/edu/wustl/catissuecore/caties/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/cdms/integrator/**"/>
				<include name="**/krishagni/catissueplus/dto/**"/>
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>


	</target>

	<target name="sendMail"  description="Send mail">
		<mail ssl="off" user="${proxy.username}" password="${proxy.password}" mailhost="${proxy.host}" tolist="${proxy.to}" cclist="${proxy.cc}" subject="${proxy.subject}" from="${proxy.from}" >
			<message> "${proxy.message}"</message>
			<fileset dir="${proxy.dir1}" includes="*.*" >
			</fileset>
			<fileset dir="${proxy.dir2}" includes="${proxy.fileName}" >
			</fileset>
		</mail>
	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_dagViewApplet_jar" depends="compile">
		<delete dir="${dagviewapplet.dir}" />
		<mkdir dir="${dagviewapplet.dir}" />
		<copy todir="${applet.dir}" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="**/cab2bStandAlone.jar" />
				<include name="**/commonpackage.jar" />
				<include name="**/org-netbeans-graph.jar" />
				<include name="**/org-netbeans-graph-vmd.jar" />
				<include name="**/org-openide-util.jar" />
				<include name="**/DynamicExtensions.jar" />
				<include name="**/swingx-2006_10_08.jar" />
				<include name="**/struts.jar" />
				<include name="**/hibernate2.1.7c.jar" />
				<include name="**/odmg.jar"/>
				<include name="**/log4j.jar"/>
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/images">
			<fileset dir="${base.dir}/images/dagViewImages">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
				<include name="**/*.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui">
				<include name="**/BaseApplet.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
				<include name="**/BaseAppletModel.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
				<include name="**/AppletModelInterface.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet">
				<include name="**/AppletServerCommunicator.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
				<include name="**/GenerateHtmlForAddLimitsBizLogic.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/util">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/util">
				<include name="**/CommonAppletUtil.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/util/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/util/querysuite">
				<include name="**/QueryModuleUtil.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/dynamicUI.xml" />
			</fileset>
		</copy>
		<jar taskname="buildJar" jarfile="${applet.dir}/dagViewApplet.jar">
			<fileset dir="${dagviewapplet.dir}">
				<include name="**/**" />
			</fileset>
		</jar>
		<delete dir="${dagviewapplet.dir}" />
	</target>
	<!-- Create the Applet JAR Ends-->

	<target name="build_DomainObject_jar" depends="compile" description="To create jar which contains domain object along with its hbm file. This is required for Query Metedata loading.">
		<jar taskname="buildJar" jarfile="${base.dir}/catissueDomain.jar">
			<fileset dir="${target.dir}">
				<include name="**/*.hbm.xml" />
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/bean/**" />
			</fileset>
		</jar>
	</target>

	<target name="build_jar_for_clinportal">
		<mkdir dir="${base.dir}/caTissueCore_Jar/temp"/>
		<copy  todir="${base.dir}/caTissueCore_Jar/temp">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/action/**"/>
				<include name="**/edu/wustl/catissuecore/bizLogic/**"/>
			</fileset>
		</copy>

		<delete >
			<fileset dir="${base.dir}/caTissueCore_Jar/temp">
				<include name="**/edu/wustl/catissuecore/action/annotations/**"/>
			</fileset>
		</delete>

		<jar taskname="buildJar" jarfile="${base.dir}/caTissueCore_Jar/catissuecore.jar">
			<fileset dir="${base.dir}/caTissueCore_Jar/temp"/>
		</jar>
		<delete dir="${base.dir}/caTissueCore_Jar/temp"/>

	</target>

	<property name="filename" value="" />
	<property name="hookentity" value="" />
	<property name="condition" value="" />
	<property name="package" value="" />

	<target name="import_xmi">
		<java classname="edu.wustl.catissuecore.annotations.xmi.ImportXmi" fork="true">
			<arg value="${filename}"/>
			<arg value="${hookentity}"/>
			<arg value="${condition}"/>
			<arg value="${package}"/>
			<classpath>
				<pathelement location="${target.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>
	<target name="export_xmi" depends="compile" >
		<java classname="edu.wustl.catissuecore.annotations.xmi.XMIExporter" fork="true">
			<arg value="${groupname}"/>
			<arg value="${filename}"/>
			<arg value="${version}"/>
			<classpath>
				<pathelement location="${target.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>

	<!-- shippingtracking - start -->
	<target name="build_client_jar_for_st">
		<jar taskname="buildClientJar" jarfile="${temp.dir}/catissuecore.jar">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/client/**"/>
				<include name="**/edu/wustl/catissuecore/bean/**"/>
				<include name="**/edu/wustl/catissuecore/namegenerator/**"/>
				<include name="**/edu/wustl/catissuecore/caties/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/bizlogic/**"/>

				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- shippingtracking - end -->

	<target name="check.java.version"
	            description="checks if the version of java is the correct one">
		<echo>${java.version}</echo>
		<!-- if>
			<contains string="${java.version}" substring="${java.required.version}"/>
			<then>

			</then>
			<else>
				<fail message="Wrong Java version! [${java.version}] Required version: ${java.required.version}"/>
			</else>
		</if -->
	</target>

	<target name="compile_integration_tests">
		<if>
			<equals arg1="true" arg2="${skip.dev.compile}"/>
			<then>
				<echo message="skipping development code compilation, compiling test code."/>
			</then>
			<else>
				<antcall target="compile"/>
			</else>
		</if>

		<iajc source="1.6" verbose="true" destdir="${target.dir}" includes="**/*.java" target="1.6" showWeaveInfo="true">
			<!--src path="./WEB-INF/integration-test"/>
			<src path="./WEB-INF/src"/-->

			<sourceroots> 
				<pathelement location="./WEB-INF/integration-test"/> 
				<pathelement location="./WEB-INF/src"/>
			</sourceroots> 
			<aspectpath> 
				<pathelement location="${lib.dir}/spring-aspects-2.5.0.jar"/> 
			</aspectpath>
			
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="./WEB-INF/integration-test/lib">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="${lib.dir}/aspectjrt-1.5.0.jar"/>
			</classpath>
		</iajc>		
	</target>
	
	<target name="instrument_test_classes">
		<delete dir="./cobertura/instrumented" />
		<delete dir="./Reports" />
		<mkdir dir="./cobertura/instrumented" />
		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<cobertura-instrument datafile="${base.dir}/cobertura.ser" todir="./cobertura/instrumented">
			<!--
		             The following line causes instrument to ignore any
		             source line containing a reference to log4j, for the
		             purposes of coverage reporting.
		        -->
			<ignore regex="org.apache.log4j.*" />

			<fileset dir="./WEB-INF/classes">
                <include name="com/krishagni/**/*.class" />
				<exclude name="com/krishagni/**/controller/*.class" />
				<exclude name="com/krishagni/**/*Controller.class" />
				<exclude name="com/krishagni/**/**/*Test.class" />
			</fileset>
		</cobertura-instrument>

		<echo>Copying instrumented class files to classes folder</echo>

		<copy todir="${target.dir}">
			<fileset dir="./cobertura/instrumented">
				<include name="**/*.class" />
			</fileset>
		</copy>
	</target>

	<target name="run_integration_tests" depends="compile_integration_tests">
		<if>
			<equals arg1="${generate_coverage_report}" arg2="true" />
			<then>
				<antcall target="instrument_test_classes" />
			</then>
		</if>
		<copy todir="${target.dir}" overwrite="true">
			<fileset dir="${base.dir}/WEB-INF/integration-test">
				<include name="*.xml" />
				<include name="*.properties" />
			</fileset>
			<fileset dir="${base.dir}/WEB-INF">
				<include name="bo-context.xml" />
			</fileset>
		</copy>

		<copy todir="${target.dir}/com/krishagni/core/tests">
			<fileset dir="${base.dir}/WEB-INF/integration-test/database">
				<include name="**/*" />
			</fileset>
		</copy>

		<delete dir="${base.dir}/integration-test-results" failonerror="false" />
		<mkdir dir="${base.dir}/integration-test-results" />

		<delete dir="${base.dir}/application-test-files" failonerror="false" />
		<mkdir dir="${base.dir}/application-test-files" />

		<copy todir="${base.dir}/application-test-files">
			<fileset dir="${base.dir}/catissuecore-properties">
				<include name="caTissueCore_Properties.xml" />
			</fileset>
			<fileset dir="${base.dir}/WEB-INF/integration-test">
				<include name="log4j.properties" />
			</fileset>
		</copy>

		<replace dir="${base.dir}/application-test-files" propertyfile="${base.dir}/WEB-INF/integration-test/test.properties">
			<include name="caTissueCore_Properties.xml" />
			<include name="log4j.properties" />
			<replacefilter token="@@appserver.home.dir@@" property="appserver.home.dir" />
		</replace>

		<replace dir="${target.dir}" propertyfile="${base.dir}/WEB-INF/integration-test/test.properties">
			<include name="log4j.properties" />
			<include name="hibernate.test.cfg.xml" />
			<replacefilter token="@@appserver.home.dir@@" property="appserver.home.dir" />
			<replacefilter token="@@hibernate.dialect@@" property="hibernate.dialect" />
			<replacefilter token="@@db.driver@@" property="db.driver" />
			<replacefilter token="@@hibernate.show_sql@@" property="hibernate.show_sql" />
			<replacefilter token="@@hibernate.connection.url@@" property="hibernate.connection.url" />
			<replacefilter token="@@db.username@@" property="db.username" />
			<replacefilter token="@@db.password@@" property="db.password" />
			<replacefilter token="@@hibernate.hbm2ddl.auto@@" property="hibernate.hbm2ddl.auto" />
			<replacefilter token="@@hibernate.cache.provider_class@@" property="hibernate.cache.provider_class" />
			<replacefilter token="@@hibernate.cache.use_second_level_cache@@" property="hibernate.cache.use_second_level_cache" />
		</replace>
		
		<if>
			<equals arg1="${generate_coverage_report}" arg2="true" />
			<then>
				<junit fork="yes" printsummary="yes" haltonfailure="no" failureproperty="test.failed">
					<sysproperty key="net.sourceforge.cobertura.datafile" file="${base.dir}/cobertura.ser" />
					<sysproperty key="app.propertiesFile" value="${base.dir}/application-test-files/caTissueCore_Properties.xml" />
					<classpath location="./cobertura/instrumented" />
					<classpath>
						<pathelement path="${target.dir}" />
					</classpath>
					<classpath>
						<fileset dir="${base.dir}/WEB-INF/integration-test/lib">
							<include name="*.jar" />
						</fileset>
						<fileset dir="${base.dir}/WEB-INF/lib">
						    <include name="*.jar" />
						</fileset>
					</classpath>
					<formatter type="xml" />
					<batchtest todir="${base.dir}/integration-test-results">
						<fileset dir="${base.dir}/WEB-INF/integration-test">
						    <include name="com/**/*Test.java" />
						</fileset>
					</batchtest>
				</junit>
				<antcall target="generate_cobertura_report" />
			</then>
			<else>
				<junit fork="yes" printsummary="yes" haltonfailure="no" failureproperty="test.failed">
					<sysproperty key="net.sourceforge.cobertura.datafile" file="${base.dir}/cobertura.ser" />
					<sysproperty key="app.propertiesFile" value="${base.dir}/application-test-files/caTissueCore_Properties.xml" />
					<classpath>
						<pathelement path="${target.dir}" />
					</classpath>
					<classpath>
						<fileset dir="${base.dir}/WEB-INF/integration-test/lib">
							<include name="*.jar" />
						</fileset>
						<fileset dir="${base.dir}/WEB-INF/lib">
						    <include name="*.jar" />
						</fileset>
					</classpath>
					<formatter type="xml" />
					<batchtest todir="${base.dir}/integration-test-results">
						<fileset dir="${base.dir}/WEB-INF/integration-test">
							<include name="com/**/*Test.java" />
							<exclude name="com/**/CollectionProtocolRegistrationTest.java" />
							<exclude name="com/**/QueryFoldersTest.java" />
							<exclude name="com/**/SavedQueryTest.java" />
							<exclude name="com/**/SpecimenTest.java" />
							<exclude name="com/**/StorageContainerTest.java" />
						</fileset>
					</batchtest>
				</junit>
			</else> 
		</if>
		<delete dir="./cobertura/instrumented" />
		<fail message="Test failure detected, check test results." if="test.failed" />
	</target>


	<target name="generate_cobertura_report">
		<cobertura-report srcdir="./cobertura/cobertura.ser" destdir="${base.dir}/Reports/Coverage" format="html">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
		<cobertura-report srcdir="./cobertura/cobertura.ser" destdir="${base.dir}/Reports/Coverage" format="xml">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
		<delete file="${base.dir}/cobertura.ser" />
	</target>

	
	<!-- target>  </target-->

	<target name="compileTestCases" depends="compile">
	        <javac destdir="${target.dir}" includes="**/*Test.java" includeAntRuntime="false" target="1.6">
	            <src path="./WEB-INF/test"/>
	        	<src path="./WEB-INF/src"/>
	            <classpath>
	                <fileset dir="${lib.dir}">
	                    <include name="**/*.jar"/>
	                </fileset>
	            </classpath>
	        </javac>
	    </target>
	<target name="runTestCases" depends="instrument-classes">
		<mkdir dir="${base.dir}/Reports" />
			<mkdir dir="${base.dir}/Reports/TestCases" />
	        <mkdir dir="${base.dir}/Reports/TestCases/Html_reports" />

	        <junit printsummary="yes" fork="yes" haltonfailure="no">
	            <formatter type="xml" />
	        	
	        	<sysproperty key="net.sourceforge.cobertura.datafile" file="${base.dir}/cobertura.ser" />


	        	            <classpath>
	        	                <pathelement path="./cobertura/instrumented" />
	        	                <pathelement path="${target.dir}" />
	        	            </classpath>

	        	<classpath>
	        	                     <fileset dir="${lib.dir}">
	        	                        <include name="*.jar" />
	        	                    </fileset>
	        	                </classpath>
	            <classpath>
	                <pathelement path="${target.dir}" />
	            </classpath>

	            <classpath refid="junit.classpath" />

	            <batchtest todir="${base.dir}/Reports/TestCases">
	                <fileset dir="./WEB-INF/test">
	                    <include name="com/**/*Test.java" />
	                </fileset>
	            </batchtest>
	        </junit>
		
	<junitreport todir="${base.dir}/Reports/TestCases">
	            <fileset dir="${base.dir}/Reports/TestCases">
	                <include name="TEST-*.xml" />
	            </fileset>
	            <report todir="${base.dir}/Reports/TestCases/Html_reports" />
	        </junitreport>
	    </target>
	
	<path id="cover-test.classpath">
	      <fileset dir="${lib.dir}" includes="**/*.jar" />
	      <pathelement location="${cobertura.instrumented-classes.dir}" />
	      <pathelement location="${build.dir}" />
	  </path>
	
	<target name="gen_cobertura_report" depends="runTestCases">
		<cobertura-report srcdir="./cobertura/cobertura.ser" destdir="${base.dir}/Reports/Coverage" format="html">
		          <fileset dir="${src.dir}">
		              <include name="**/*.java" />
		          </fileset>
		      </cobertura-report>
		<cobertura-report srcdir="./cobertura/cobertura.ser" destdir="${base.dir}/Reports/Coverage" format="xml">
		                  <fileset dir="${src.dir}">
		                      <include name="**/*.java" />
		                  </fileset>
		              </cobertura-report>
		<delete file="${base.dir}/cobertura.ser"/>
	    </target>
	
	<target name="instrument-classes" depends="compileTestCases">
	        <delete dir="./cobertura/instrumented" />
	        <mkdir dir="./cobertura/instrumented" />
	        <!--
	           Instrument the application classes, writing the
	           instrumented classes into ${build.instrumented.dir}.
	        -->
	        <cobertura-instrument datafile="${base.dir}/cobertura.ser"
	            todir="./cobertura/instrumented">
	            <!--
	             The following line causes instrument to ignore any
	             source line containing a reference to log4j, for the
	             purposes of coverage reporting.
	          -->
	            <ignore regex="org.apache.log4j.*" />
	            
	            <fileset dir="./WEB-INF/classes">
	                <include name="com/krishagni/**/*.class" />
	            	<exclude name="com/krishagni/**/repository/*.class" />
	            	<exclude name="com/krishagni/**/repository/impl/*.class" />
	            	<exclude name="com/krishagni/**/controller/*.class" />
	            	<exclude name="com/krishagni/**/*Controller.class" />
	            	<exclude name="com/krishagni/**/*DAO*.class" />
	            	<exclude name="**/*Test.class"/>
	            </fileset>

	        </cobertura-instrument>
	        <echo>Copying instrumented class files to classes folder</echo>
	        <copy todir="./WEB-INF/classes">
	            <fileset dir="./cobertura/instrumented">
	                <include name="**/*.class" />
	            </fileset>
	        </copy>
	    </target>
</project>
