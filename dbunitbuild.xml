<project basedir="." name="caTissue_DBUnit" default="RunTestCasesFromClean" >

	<property name="db_unit.dir" value="${basedir}/caTissueSuite_dbunit" />
	<property name="db_src.dir" value="${db_unit.dir}/src" />
	<property file="${db_src.dir}/caTissueInstall.properties" />
	<property name="db_temp.dir" value="${db_unit.dir}/tmp" />
	<property name="db_lib.dir" value="${db_unit.dir}/lib" />
	<property name="base.dir" value="." />
	<property name="lib.dir" value="${base.dir}/WEB-INF/lib" />
	<import file="deploy.xml"/>
	<target name="init" depends = "clean">
		<delete dir="${db_unit.dir}/Build_Report"/>
		<mkdir dir="${db_temp.dir}"/>
		<mkdir dir="${db_temp.dir}/Nightly_Build_Report"/>
		<mkdir dir="${db_unit.dir}/Build_Report"/>
	</target>
	
	<target name="clean">
		<deltree dir="${db_temp.dir}"/>
		
	</target>
	
	<target name="catissue_compile">
		<delete dir="${db_temp.dir}/suite" />
		<mkdir dir="${db_temp.dir}/suite"/>
		<javac destdir="${db_temp.dir}/suite" srcdir="${base.dir}/WEB-INF/src" includes="**/*.java">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<jar destfile="${db_lib.dir}/catissue.jar">
			<fileset dir="${db_temp.dir}/suite">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${base.dir}/WEB-INF/src">
				<include name="**/*hbm.xml"/>
			</fileset>

		</jar>
		<delete dir="${db_temp.dir}/suite" />
	</target>	

	<target name="db_compile" depends="init">
		<javac destdir="${db_temp.dir}" srcdir="${db_src.dir}" includes="**/*">
			<classpath id="DbUnit_classpath2">
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
					
				<fileset dir="${db_lib.dir}">
					<include name="*.jar"/>
				</fileset>	
			</classpath>
		</javac>
		<copy todir="${db_temp.dir}">
			<fileset dir="${db_unit.dir}/src" >
				<include name ="*.xml"/>
				<include name = "*.properties"/>
			</fileset>
			<fileset dir="${base.dir}">
				<include name="TestDataSet.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name ="clean_db">
		<sql driver="${database.driver}" password="${database.password}" url="${database.jdbc.url}" userid="${database.username}">
			<classpath path="${lib.dir}/mysql*.jar" > 
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset> 
			</classpath>
		<transaction>drop database ${database.name}</transaction>
		<transaction>create database ${database.name}</transaction>
		</sql>
			
		<antcall target="deploy_db" />
	</target>
	<target name="RunTestCases" depends="catissue_compile, clean_db, initialize_data, RundbUnit" />
	<target name="RunTestCasesFromClean" depends="deploy_all, RunTestCases" />
	<target name="initialize_data" depends="configure_properties">
		<antcall target="runJUnit"  >
			<param name="classNames" value="**/CaTissueBaseDBUnitTestCase.java" />
		</antcall>
	</target>
	
	<target name="RundbUnit" depends="configure_properties" >
		<antcall target="runJUnit">
			<param name="classNames" value="**/UserDBTestcases.java" />
		</antcall>
		<antcall target="clean"></antcall>
	</target>
	
	<target name="configure_properties" >
		<copyfile dest="${db_src.dir}/caTissueDBUnit.properties" src="${db_src.dir}/T_caTissueDBUnit.properties"
		 forceoverwrite="true"/>		
		
		<antcall target="replaceDBParams">
		<param name="SourceFile" value="${db_src.dir}/caTissueDBUnit.properties" />
		</antcall>		
			<antcall target="generate_hibernate_cfg">
				<param name ="DestFile" value="test_hibernate.cfg.xml"/>
				<param name ="SrcFile" value="hibernate.cfg.xml"/>
			</antcall>
			
			<antcall target="replaceDBParams">
			<param name="SourceFile" value="${db_src.dir}/test_hibernate.cfg.xml" />
			</antcall>
			
			<antcall target="generate_hibernate_cfg">
					<param name ="DestFile" value="test_DEHibernate.cfg.xml"/>
					<param name ="SrcFile" value="DynamicExtensionsHibernate.cfg.xml"/>
			</antcall>
				
			<antcall target="replaceDBParams">
				<param name="SourceFile" value="${db_src.dir}/test_DEHibernate.cfg.xml" />
			</antcall>
			

	</target>
	
	
	<target name="runJUnit" depends="db_compile">
		<echo message="Please see the test report at ${db_unit.dir}/Build_Report" />
		<echo message="running test cases ${classNames}" />		
		<junit printsummary="yes" haltonfailure="yes">
			  <formatter type="xml"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>

				<fileset dir="${base.dir}/third_party_lib/WEB-INF/lib">
					<include name="*.jar"/>
				</fileset>
					
				<fileset dir="${db_lib.dir}">
					<include name="*.jar"/>
				</fileset>	
				<pathelement path="${db_temp.dir}"/>
			</classpath>
			<batchtest todir="${db_unit.dir}/Build_Report">
				<fileset dir="${db_src.dir}">
					<include name="${classNames}"/>
				</fileset>
			</batchtest>
		</junit>

	</target>

	<target name="replaceDBParams">

		<replace file="${SourceFile}">
		
			<replacefilter 
				token="@@gov.nih.nci.security.configFile@@" 
				value="file:///${jboss.server.url}/catissuecore-properties/ApplicationSecurityConfig.xml"/>
			<replacefilter 
				token="@@app.propertiesFile@@" 
				value="file:///${jboss.server.url}/catissuecore-properties/caTissueCore_Properties.xml"/>
			<replacefilter 
				token="@@DATABASE_USER@@" 
				value="${database.username}"/>
			<replacefilter 
				token="@@DATABASE_PASSWORD@@" 
				value="${database.password}"/>			
		</replace>
		
		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				
				<replace file="${SourceFile}">

				<replacefilter 
					token="@@URL@@" 
					value="jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
				<replacefilter 
					token="@@DRIVER@@" 
					value="com.mysql.jdbc.Driver"/>
				</replace>
			</then>
		</if>
		<if>
			<equals arg1="oracle" arg2="${database.type}" />
			<then>
				<replace file="${SourceFile}">

					<replacefilter 
						token="@@URL@@" 
						value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
					<replacefilter 
						token="${mysql.dialect.string}" 
						value="${oracle.dialect.string}"/>
					
					<replacefilter 
						token="@@DRIVER@@" 
						value="${oracle.driver.string}"/>
				</replace>
			</then>
		</if>
		
	</target>
	
	<target name="generate_hibernate_cfg">
		<echo message="configuring ${db_src.dir}/${DestFile} from ${SrcFile} "></echo>
		<delete file="${db_src.dir}/${DestFile}" />
		<delete file="${db_src.dir}/tmpMappings.cfg.xml" />
		<concat destfile="${db_src.dir}/${DestFile}" encoding="utf-8" >
			&lt;!DOCTYPE hibernate-configuration PUBLIC
			    "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
			    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"&gt;
			    
			&lt;hibernate-configuration&gt;
				
			    &lt;session-factory&gt;

			&lt;property name="show_sql"&gt;false&lt;/property&gt;
	   		&lt;property name="dialect"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;	
	        &lt;property name="connection.driver_class"&gt;@@DRIVER@@&lt;/property&gt;
		    &lt;property name="connection.url"&gt;@@URL@@&lt;/property&gt;
		    &lt;property name="connection.username"&gt;@@DATABASE_USER@@&lt;/property&gt;
		    &lt;property name="connection.password"&gt;@@DATABASE_PASSWORD@@&lt;/property&gt;   
			&lt;property name="hibernate.transaction.factory_class"&gt;org.hibernate.transaction.JDBCTransactionFactory&lt;/property&gt;
			&lt;property name="hibernate.cache.provider_class"&gt;org.hibernate.cache.EhCacheProvider&lt;/property&gt;
			&lt;property name="hibernate.jdbc.batch_size"&gt;0&lt;/property&gt;
			&lt;property name="hibernate.query.substitutions"&gt;true 1,false 0&lt;/property&gt;

		</concat>
		
		<concat destfile="${db_src.dir}/tmpMappings.cfg.xml" encoding="utf-8" >
			<filelist dir="${base.dir}/WEB-INF/src"  files="${SrcFile}" />
			<filterchain>
				<linecontains>
					<contains value="mapping resource" />
				</linecontains>
			</filterchain>
		</concat>
		
		<concat destfile="${db_src.dir}/${DestFile}" append="true" encoding="utf-8" >
			<filelist dir="${db_src.dir}"  files="tmpMappings.cfg.xml" />
		</concat>
		<concat destfile="${db_src.dir}/${DestFile}" append="true" encoding="utf-8" >
		    &lt;/session-factory&gt;
		    
		&lt;/hibernate-configuration&gt;
		</concat>
	
	</target>
</project>