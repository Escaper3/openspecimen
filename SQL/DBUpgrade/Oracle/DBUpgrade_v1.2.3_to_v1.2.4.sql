create table INTERCEPTOR_ERROR_OBJ (IDENTIFIER NUMBER(19,0) NOT NULL,ERROR_TIMESTAMP timestamp, OBJECT_TYPE varchar2(400),ERROR_CODE varchar2(200),OBJECT_ID NUMBER(19,0),RECOVERY_DONE number(1,0),EVENT_CODE NUMBER(19,0),NUMBER_OF_TRY integer,PROCESSOR_CLASS varchar2(400),PRIMARY KEY  (IDENTIFIER));
create table CATISSUE_SPECIMEN_MESSAGE_LOG (IDENTIFIER NUMBER(19,0) NOT NULL ,SPECIMEN_ID NUMBER(19,0),SENT_DATE timestamp,EVENT_TYPE varchar2(100));
create sequence CATISSUE_SPEC_CIDER_MSG_SEQ;

create table PARTICIPANT_MERGE_MESSAGES(
   IDENTIFIER number(19,0) not null ,
   MESSAGE_TYPE varchar(50),
   MESSAGE_DATE date,
   HL7_MESSAGE varchar(500),
   MESSAGE_STATUS varchar(50),
   primary key (IDENTIFIER)
);

alter table catissue_collection_protocol add IS_EMPI_ENABLE  number(1,0);

update catissue_collection_protocol set IS_EMPI_ENABLE ='0';

alter table CATISSUE_PARTICIPANT add EMPI_ID_STATUS varchar2(50);
--alter table catissue_participant add EMPI_ID varchar2(50);

CREATE SEQUENCE  MATCHING_JOB_DETAILS_SEQ NOCACHE;

CREATE TABLE MATCHED_PARTICIPANT_MAPPING
(
	   SEARCHED_PARTICIPANT_ID number(19,0) NOT NULL,
	   NO_OF_MATCHED_PARTICIPANTS number(19,0),
	   CREATION_DATE DATE,
       PRIMARY KEY (SEARCHED_PARTICIPANT_ID),
	   FOREIGN KEY (SEARCHED_PARTICIPANT_ID) REFERENCES CATISSUE_PARTICIPANT(IDENTIFIER)
);

CREATE TABLE EMPI_PARTICIPANT_USER_MAPPING(
	PARTICIPANT_ID number(19,0) NOT NULL,
	USER_ID number(19,0),
	FOREIGN KEY (USER_ID) REFERENCES CATISSUE_USER(IDENTIFIER),
	FOREIGN KEY (PARTICIPANT_ID) REFERENCES MATCHED_PARTICIPANT_MAPPING(SEARCHED_PARTICIPANT_ID)  on delete cascade
);

create table CATISSUE_MATCHED_PARTICIPANT (
   PARTICIPANT_ID number(19,0),
   EMPI_ID VARCHAR(255),
   LAST_NAME varchar(255),
   FIRST_NAME varchar(255),
   MIDDLE_NAME varchar(255),
   BIRTH_DATE date,
   GENDER varchar(20),
   SOCIAL_SECURITY_NUMBER varchar(50),
   ACTIVITY_STATUS varchar(50),
   DEATH_DATE date,
   VITAL_STATUS varchar(50),
   PARTICIPANT_MRN  VARCHAR(3000),
   PARTICIPANT_RACE  VARCHAR(1000),
   IS_FROM_EMPI VARCHAR(20),
   SEARCHED_PARTICIPANT_ID number(19,0),
   FOREIGN KEY (SEARCHED_PARTICIPANT_ID) REFERENCES MATCHED_PARTICIPANT_MAPPING(SEARCHED_PARTICIPANT_ID)  on delete cascade
);

ALTER TABLE CATISSUE_SITE ADD FACILITY_ID varchar2(50);

create table PARTICIPANT_EMPI_ID_MAPPING (
   PERMANENT_PARTICIPANT_ID varchar(255),
   TEMPARARY_PARTICIPANT_ID varchar(255),
   OLD_EMPI_ID varchar(255)
);

alter table participant_empi_id_mapping add TEMPMRNDATE timestamp;


alter table CATISSUE_PERMISSIBLE_VALUE add SORTORDER number(11,0);

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 1 where VALUE='White' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 2 where VALUE='Black or African American' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 3 where VALUE='American Indian or Alaska Native' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 4 where VALUE='Asian' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 5 where VALUE='Native Hawaiian or Other Pacific Islander' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 6 where VALUE='Not Reported' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 7 where VALUE='Other' and PUBLIC_ID='Race_PID';

update CATISSUE_PERMISSIBLE_VALUE set SORTORDER = 8 where VALUE='Unknown' and PUBLIC_ID='Race_PID';

alter table CATISSUE_MATCHED_PARTICIPANT add ORDER_NO NUMBER(19,0);

CREATE TABLE MATCHING_JOB_DETAILS
   (	IDENTIFIER NUMBER(38,0), 
	JOB_NAME VARCHAR2(255 BYTE), 
	JOB_STATUS VARCHAR2(50 BYTE), 
	TOTAL_RECORDS_COUNT NUMBER(20,0), 
	FAILED_RECORDS_COUNT NUMBER(20,0), 
	TIME_TAKEN NUMBER(20,0), 
	LOG_FILE BLOB, 
	JOB_STARTED_BY NUMBER(20,0), 
	START_TIME DATE, 
	CURRENT_RECORDS_PROCESSED NUMBER(20,0), 
	LOG_FILE_NAME VARCHAR2(1024 BYTE), 
	JOB_TYPE VARCHAR2(100 BYTE), 
	THRESHHOLD NUMBER(19,0),
	primary key (IDENTIFIER)
   ) ;

   
commit;