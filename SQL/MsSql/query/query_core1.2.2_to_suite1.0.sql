IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_PARAMETERIZED_QUERY') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CATEGORIAL_CLASS') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_INTRA_MODEL_ASSOCIATION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_CONSTRAINTS') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_PARAMETERIZED_CONDITION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_QUERY_ENTITY') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_CONDITION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_RULE') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_LOGICAL_CONNECTOR') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_EXPRESSION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_MODEL_ASSOCIATION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_CONDITION_VALUES') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_JOIN_GRAPH') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CATEGORIAL_ATTRIBUTE') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_OUTPUT_ATTRIBUTE') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_INTER_MODEL_ASSOCIATION') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_EXPRESSION_OPERAND') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_GRAPH_ENTRY') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CATEGORY') DROP TABLE COMMONS_GRAPH;
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QUERY_EXPRESSIONID') DROP TABLE COMMONS_GRAPH;


create table QUERY_PARAMETERIZED_QUERY (
   IDENTIFIER bigint not null,
   QUERY_NAME varchar(255) unique,
   DESCRIPTION text,
   primary key (IDENTIFIER)
);
create table CATEGORIAL_CLASS (
   ID bigint not null identity,
   DE_ENTITY_ID bigint,
   PATH_FROM_PARENT_ID bigint,
   PARENT_CATEGORIAL_CLASS_ID bigint,
   primary key (ID)
);
create table QUERY_INTRA_MODEL_ASSOCIATION (
   IDENTIFIER bigint not null,
   DE_ASSOCIATION_ID bigint not null,
   primary key (IDENTIFIER)
);
create table QUERY_CONSTRAINTS (
   IDENTIFIER bigint not null identity,
   QUERY_JOIN_GRAPH_ID bigint unique,
   primary key (IDENTIFIER)
);
create table QUERY_PARAMETERIZED_CONDITION (
   IDENTIFIER bigint not null,
   CONDITION_INDEX integer,
   CONDITION_NAME varchar(255),
   primary key (IDENTIFIER)
);
create table QUERY_QUERY_ENTITY (
   IDENTIFIER bigint not null identity,
   ENTITY_ID bigint not null,
   primary key (IDENTIFIER)
);
create table QUERY_CONDITION (
   IDENTIFIER bigint not null identity,
   ATTRIBUTE_ID bigint not null,
   RELATIONAL_OPERATOR varchar(255),
   QUERY_RULE_ID bigint,
   POSITION integer,
   primary key (IDENTIFIER)
);
create table QUERY_RULE (
   IDENTIFIER bigint not null,
   QUERY_EXPRESSION_ID bigint not null,
   primary key (IDENTIFIER)
);
create table QUERY (
   IDENTIFIER bigint not null identity,
   QUERY_CONSTRAINTS_ID bigint unique,
   primary key (IDENTIFIER)
);
create table QUERY_LOGICAL_CONNECTOR (
   IDENTIFIER bigint not null identity,
   LOGICAL_OPERATOR varchar(255),
   NESTING_NUMBER integer,
   QUERY_EXPRESSION_ID bigint,
   POSITION integer,
   primary key (IDENTIFIER)
);
create table QUERY_EXPRESSION (
   IDENTIFIER bigint not null identity,
   QUERY_EXPRESSIONID_ID bigint unique,
   QUERY_QUERY_ENTITY_ID bigint not null,
   IS_IN_VIEW bit,
   IS_VISIBLE bit,
   QUERY_CONSTRAINT_ID bigint,
   primary key (IDENTIFIER)
);
create table QUERY_MODEL_ASSOCIATION (
   IDENTIFIER bigint not null identity,
   primary key (IDENTIFIER)
);
create table QUERY_CONDITION_VALUES (
   QUERY_CONDITION_ID bigint not null,
   VALUE_LIST varchar(255),
   POSITION integer not null,
   primary key (QUERY_CONDITION_ID, POSITION)
);
create table QUERY_JOIN_GRAPH (
   IDENTIFIER bigint not null identity,
   primary key (IDENTIFIER)
);
create table CATEGORIAL_ATTRIBUTE (
   ID bigint not null identity,
   CATEGORIAL_CLASS_ID bigint,
   DE_CATEGORY_ATTRIBUTE_ID bigint,
   DE_SOURCE_CLASS_ATTRIBUTE_ID bigint,
   primary key (ID)
);
create table QUERY_OUTPUT_ATTRIBUTE (
   IDENTIFIER bigint not null identity,
   EXPRESSIONID_ID bigint,
   ATTRIBUTE_ID bigint not null,
   PARAMETERIZED_QUERY_ID bigint,
   POSITION integer,
   primary key (IDENTIFIER)
);
create table QUERY_INTER_MODEL_ASSOCIATION (
   IDENTIFIER bigint not null,
   SOURCE_SERVICE_URL text not null,
   TARGET_SERVICE_URL text not null,
   SOURCE_ATTRIBUTE_ID bigint not null,
   TARGET_ATTRIBUTE_ID bigint not null,
   primary key (IDENTIFIER)
);
create table QUERY_EXPRESSION_OPERAND (
   IDENTIFIER bigint not null identity,
   QUERY_EXPRESSION_ID bigint,
   POSITION integer,
   primary key (IDENTIFIER)
);
create table QUERY_GRAPH_ENTRY (
   IDENTIFIER bigint not null identity,
   QUERY_MODEL_ASSOCIATION_ID bigint,
   SOURCE_EXPRESSIONID_ID bigint,
   TARGET_EXPRESSIONID_ID bigint,
   QUERY_JOIN_GRAPH_ID bigint,
   primary key (IDENTIFIER)
);
create table CATEGORY (
   ID bigint not null identity,
   DE_ENTITY_ID bigint,
   PARENT_CATEGORY_ID bigint,
   ROOT_CATEGORIAL_CLASS_ID bigint unique,
   primary key (ID)
);
create table QUERY_EXPRESSIONID (
   IDENTIFIER bigint not null,
   SUB_EXPRESSION_ID integer not null,
   primary key (IDENTIFIER)
);
alter table QUERY_PARAMETERIZED_QUERY add constraint FKA272176BBC7298A9 foreign key (IDENTIFIER) references QUERY;
alter table CATEGORIAL_CLASS add constraint FK9651EF32D8D56A33 foreign key (PARENT_CATEGORIAL_CLASS_ID) references CATEGORIAL_CLASS (ID);
alter table QUERY_INTRA_MODEL_ASSOCIATION add constraint FKF1EDBDD3BC7298A9 foreign key (IDENTIFIER) references QUERY_MODEL_ASSOCIATION (IDENTIFIER);
alter table QUERY_CONSTRAINTS add constraint FKE364FCFFD3C625EA foreign key (QUERY_JOIN_GRAPH_ID) references QUERY_JOIN_GRAPH (IDENTIFIER);
alter table QUERY_PARAMETERIZED_CONDITION add constraint FK9BE75A3EBC7298A9 foreign key (IDENTIFIER) references QUERY_CONDITION (IDENTIFIER);
alter table QUERY_CONDITION add constraint FKACCE6246104CA7 foreign key (QUERY_RULE_ID) references QUERY_RULE (IDENTIFIER);
alter table QUERY_RULE add constraint FK14A6503365F8F4CB foreign key (QUERY_EXPRESSION_ID) references QUERY_EXPRESSION (IDENTIFIER);
alter table QUERY_RULE add constraint FK14A65033BC7298A9 foreign key (IDENTIFIER) references QUERY_EXPRESSION_OPERAND (IDENTIFIER);
alter table QUERY add constraint FK49D20A8251EDC5B foreign key (QUERY_CONSTRAINTS_ID) references QUERY_CONSTRAINTS (IDENTIFIER);
alter table QUERY_LOGICAL_CONNECTOR add constraint FKCF30478065F8F4CB foreign key (QUERY_EXPRESSION_ID) references QUERY_EXPRESSION (IDENTIFIER);
alter table QUERY_EXPRESSION add constraint FK1B473A8FCA571190 foreign key (QUERY_EXPRESSIONID_ID) references QUERY_EXPRESSIONID (IDENTIFIER);
alter table QUERY_EXPRESSION add constraint FK1B473A8F9E19EF66 foreign key (QUERY_CONSTRAINT_ID) references QUERY_CONSTRAINTS (IDENTIFIER);
alter table QUERY_EXPRESSION add constraint FK1B473A8F1CF7F689 foreign key (QUERY_QUERY_ENTITY_ID) references QUERY_QUERY_ENTITY (IDENTIFIER);
alter table QUERY_CONDITION_VALUES add constraint FK9997379DDA532516 foreign key (QUERY_CONDITION_ID) references QUERY_CONDITION (IDENTIFIER);
alter table CATEGORIAL_ATTRIBUTE add constraint FK31F77B56E8CBD948 foreign key (CATEGORIAL_CLASS_ID) references CATEGORIAL_CLASS (ID);
alter table QUERY_OUTPUT_ATTRIBUTE add constraint FK22C9DB75BF5EEB27 foreign key (EXPRESSIONID_ID) references QUERY_EXPRESSIONID (IDENTIFIER);
alter table QUERY_OUTPUT_ATTRIBUTE add constraint FK22C9DB75C4E818F8 foreign key (PARAMETERIZED_QUERY_ID) references QUERY_PARAMETERIZED_QUERY (IDENTIFIER);
alter table QUERY_INTER_MODEL_ASSOCIATION add constraint FKD70658D1BC7298A9 foreign key (IDENTIFIER) references QUERY_MODEL_ASSOCIATION (IDENTIFIER);
alter table QUERY_EXPRESSION_OPERAND add constraint FKA3B976F965F8F4CB foreign key (QUERY_EXPRESSION_ID) references QUERY_EXPRESSION (IDENTIFIER);
alter table QUERY_GRAPH_ENTRY add constraint FKF055E4EA955C60E6 foreign key (QUERY_MODEL_ASSOCIATION_ID) references QUERY_MODEL_ASSOCIATION (IDENTIFIER);
alter table QUERY_GRAPH_ENTRY add constraint FKF055E4EAD3C625EA foreign key (QUERY_JOIN_GRAPH_ID) references QUERY_JOIN_GRAPH (IDENTIFIER);
alter table QUERY_GRAPH_ENTRY add constraint FKF055E4EA7A5E6479 foreign key (TARGET_EXPRESSIONID_ID) references QUERY_EXPRESSIONID (IDENTIFIER);
alter table QUERY_GRAPH_ENTRY add constraint FKF055E4EAEE560703 foreign key (SOURCE_EXPRESSIONID_ID) references QUERY_EXPRESSIONID (IDENTIFIER);
alter table CATEGORY add constraint FK31A8ACFE2D0F63E7 foreign key (PARENT_CATEGORY_ID) references CATEGORY (ID);
alter table CATEGORY add constraint FK31A8ACFE211D9A6B foreign key (ROOT_CATEGORIAL_CLASS_ID) references CATEGORIAL_CLASS (ID);
alter table QUERY_EXPRESSIONID add constraint FK6662DBEABC7298A9 foreign key (IDENTIFIER) references QUERY_EXPRESSION_OPERAND;
