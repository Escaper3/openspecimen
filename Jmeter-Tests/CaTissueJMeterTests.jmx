<jmeterTestPlan version="1.2" properties="1.8">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Badboy Test Plan" enabled="true">
      <collectionProp name="TestPlan.thread_groups"/>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <longProp name="ThreadGroup.start_time">1195216988000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1195216988000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <collectionProp name="CookieManager.cookies"/>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="VIEWSTATE">VIEWSTATE</stringProp>
            <stringProp name="jsessionid">jsessionid</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1083307151">
              <stringProp name=""></stringProp>
              <stringProp name="9AF7D4145A73BF71B5B350AC16E96ACD">9AF7D4145A73BF71B5B350AC16E96ACD</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="TestElement.per_iteration">true</boolProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Change Password and Login" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login: Redirect Home" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login: Login with old password" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Login.do;jsessionid=${jsessionid}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">admin@admin.com</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">loginName</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">loginName</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Login123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Login123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login: Update Password" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/UpdatePassword.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">denied</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">access</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">denied</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                  <stringProp name="HTTPArgument.encoded_value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">pageOfChangePassword</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pageOf</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">pageOfChangePassword</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Login123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">oldPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Login123</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">newPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">newPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmNewPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">confirmNewPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login:Regorect Home Page" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Home.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login:Redirect Home Page" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login: Login Page" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Login.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">admin@admin.com</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">loginName</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">loginName</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Administrative Data Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Department" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department: Department page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department:  Add  Department " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dept</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dep3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1363616355">Department successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Institution" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution: Institution Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution: Add Institution" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">inst</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">xx</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1965068297">Institution successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add CRG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG: Cancer Research Group page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroup.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG: Add Cancer Research Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">crg</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1906811349">Cancer Research Group successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Site" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site: Site Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site: Add Site " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">s2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Repository</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Repository</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">street1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ss</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cybercity</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Delaware</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Delaware</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">33333</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">212122</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">212122</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">323232</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">323232</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1270632584">Site successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Storage Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type: Storage Type Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type: Add Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1419323152">Storage Type successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Storage Container" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Container:  StorageContainer Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Container: Storage Container Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">False</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Container: Add Storage Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainerAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">st1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">site11</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">False</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">--All--</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="423828019">Storage Container successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Specimen Array Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type: Specimen Array Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenArrayType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">21</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">21</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type: Add Specimen Array" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sat</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">spartype</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Frozen Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Frozen+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-677639594">Specimen Array Type successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Biohazard" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard:  Biohazard Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard: Add Biohazard " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Bh01</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">BioHaz1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Mutagen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Mutagen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-111862059">Biohazard successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ColProt</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ColProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sasas</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">wqwqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">qwqwq</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Protocol Events Details" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">newEvent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Protocol Events Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Save Protocol Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Save Specimen Requirements" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Indwelling Catheter</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Indwelling+Catheter</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acceptable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acceptable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ACD Vacutainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ACD+Vacutainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_storageLocation)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_storageLocation%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Virtual</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Generic Specimen Summary" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Submit Specimen Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.displayName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen_E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">userAction</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ADD</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Protocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">requestType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Protocol</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-467975463">Collection Protocol successfully created.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol: Distribution Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol: Add Distribution Protocol " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DisProt</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pd1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-04-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">eqeqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">eqeqw</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Cell Block</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Cell+Block</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Anterior floor of mouth</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Anterior+floor+of+mouth</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Metastatic</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Metastatic</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="471465307">Distribution Protocol successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Department" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Department: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Department: Search Department " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Department: Edit Department " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DepartmentEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedDept</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdatedDept</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="582118192">Department successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Institution" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Institution: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Institution: Search Institution Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Institution: Edit Institution " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/InstitutionEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedInst</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedInst11</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1061048118">Institution successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit CRG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit CRG: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit CRG: Search CancerResearchGroup" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit CRG: Edit Cancer Research Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedCRG</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdateCRG</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="338073192">Cancer Research Group successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Site" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Site: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Site: Search Site Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Site: Edit Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdatedSite1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Laboratory</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Laboratory</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sss</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ss</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ccc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">D.C.</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">211212</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">211212</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">121212</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">121212</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="7647835">Site successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Storage Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Type: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Type: Search Storage Type Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Type: Edit Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">neaUpdatedst</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1612659395">Storage Type successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Storage Container" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Container: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Container: Search Storage Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Container.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Container.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Storage Container: Edit Storage Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainerEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ST</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">UpdatedStorageContainer01</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">UpdatedStorageContainer01</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-839156730">Storage Container successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Biohazard" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Biohazard: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Biohazard: Search Biohazard Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Biohazard: Edit Biohazard " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/BiohazardEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedbh</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdatedbh1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Mutagen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Mutagen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">biohazards updated</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">biohazards+updated</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1374846808">Biohazard successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Distribution Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Distribution Protocol: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Distribution Protocol: Search Distribution Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Distribution Protocol: Edit Distribution Protocol " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateddp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdateddp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">udp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedpd1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dsds</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dsds</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-03-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">endDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">endDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ererwe</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Frozen Cell Pellet</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Frozen+Cell+Pellet</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Ampulla of Vater</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Ampulla+of+Vater</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Malignant, Invasive</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Malignant%2C+Invasive</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1232701106">Distribution Protocol successfully updated </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Biospecimen Data Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Participant" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Participant:Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Participant: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Participant: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Participant: Partcipant Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Participant.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Participant: Add Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ParticipantLookup.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">LName</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Naikwade1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fname</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Ganesh1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">B</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">B</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-1982</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-12-1985</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1985</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1985</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Female Gender</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">XX</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">XX</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Asian</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Asian</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Hispanic or Latino</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Hispanic+or+Latino</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pfname</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gan1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">None Defined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1133686692">Participant successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Participant Registration" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration: Blank Screen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration: Query Participant Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipant.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration: Partcipant Registration Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantLookup.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-05-1984</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-01-1998</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1998</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1998</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Male Gender</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Black or African American</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">g1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedPC5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">44</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-11-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">None Defined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1133686692">Participant successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add SCG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: Blank Screen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: Query Participant Search Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: Edit Participant Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenCollectionGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenCollectionGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-05-1984</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Male Gender</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Black or African American</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">g1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-11-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Edit Response</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG: Add Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Default</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="148749094">Specimen Collection Group successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Tissue Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="BAdd Tissue Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Query Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Search SpecimenCollectionGroup" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenCollectionGroup_2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Edit SpecimenCollectionGroup" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">createNewSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%28111111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">111111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">111111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">site01</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollProto_1_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecColgrp1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pending</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pending</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">14</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">14</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">submitAndAdd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Specimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfNewSpecimenCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Default</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollProto_1_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecColgrp1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">14</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollProto_1_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecColgrp1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">14</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">53</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="236310375">Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Tissue Specimen: Edit Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecColgrp2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecColgrp1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">label</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">label</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specBarcode1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specBarcode1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-18-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-18-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">available</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">available</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">on</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collected</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collected</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1762134490">Specimen successfully updated </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Cell Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Query Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Search Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenCollectionGroup_3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Edit Specimen Collection Group " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">createNewSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Pending</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pending</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">c2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">27</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">27</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">c1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">28</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">28</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">24</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">23</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">16</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">16</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">16</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">16</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">24</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">23</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">submitAndAdd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Add Cell Specimen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Cell Block</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Cell+Block</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cell count</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cell+count</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="236310375">Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Cell Specimen: Edit Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cellSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">label</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">label</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cellSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cellSpecimenBarcode</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cellSpecimenBarcode</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Cell Block</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Cell+Block</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cell count</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cell+count</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">available</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">available</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">on</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collected</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collected</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">38</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">38</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">37</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">37</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Molecular Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen:CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Query Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Search Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenCollectionGroup_3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Edit Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">createNewSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pending</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pending</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">27</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">27</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">28</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">28</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">submitAndAdd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Molecular Specimen: Add Molecular Specimen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Molecular</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Molecular</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DNA</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DNA</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">µg</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%B5g</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">concentration</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="236310375">Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Fluid Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Query Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Search Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenCollectionGroup_3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Edit Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">createNewSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pending</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pending</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">submitAndAdd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Add Fluid Specimen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">show</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">24</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">24</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">23</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="236310375">Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Fluid Specimen: Edit Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">fluidSpec</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">label</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">label</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">fluidSpec</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">fluidSpecBarcode</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">fluidSpecBarcode</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">ml</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">available</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">available</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">on</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">20.0</stringProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Collected</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collected</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">show</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">13</stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">13</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">show</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">show</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">c1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">c2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">17</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Derived Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Create Specimen " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Derived Specimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isLabelBarcodeOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isLabelBarcodeOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-19-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-19-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Derived Specimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isLabelBarcodeOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isLabelBarcodeOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-19-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-19-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">pos1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pos1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">pos2</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pos2</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Add Derived Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/AddSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isQuickEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isQuickEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">eventParameters</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">eventParameters</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-19-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-19-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">UpdatedStorageContainer01</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">UpdatedStorageContainer01</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pos1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pos1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pos2</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pos2</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1264312935">Specimen successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Derived Specimen: Tissue Specimen Review Event Parameters Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/TissueSpecimenReviewEventParameters.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfTissueSpecimenReviewParameters</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfTissueSpecimenReviewParameters</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Create Alliquots" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: Aliquots Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Aliquots.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfAliquot</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: Create Aliquots " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateAliquots.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCreateAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCreateAliquot</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonClicked</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonClicked</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">submit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimenID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">spCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">spCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Create Alliquots: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateAliquots.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCreateAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCreateAliquot</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">create</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonClicked</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonClicked</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">create</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specLable1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specLable1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">operation</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">operation</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">initialAvailableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">initialAvailableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">26.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">26.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-15-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A1_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A1_StorageContainer_id_fromMap%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(radio_1)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28radio_1%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:1_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A1_StorageContainer_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:1_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A1_positionDimensionOne%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:1_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A1_positionDimensionTwo%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:2_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A2_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A2_StorageContainer_id_fromMap%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(radio_2)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28radio_2%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:2_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A2_StorageContainer_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:2_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A2_positionDimensionOne%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:2_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A2_positionDimensionTwo%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:3_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A3_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A3_StorageContainer_id_fromMap%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(radio_3)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28radio_3%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:3_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A3_StorageContainer_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:3_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A3_positionDimensionOne%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:3_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A3_positionDimensionTwo%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:4_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A4_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A4_StorageContainer_id_fromMap%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(radio_4)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28radio_4%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:4_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A4_StorageContainer_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:4_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A4_positionDimensionOne%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(Specimen:4_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28Specimen%3A4_positionDimensionTwo%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenID</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">spCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">spCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">printAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">printAliquot</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-819614477">have been created successfully.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Cell Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: Query Specimen Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfNewSpecimenCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Edit Cell Specimen: Edit Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CellSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">label</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">label</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CellSpecimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SrllBarcode</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SrllBarcode</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Cell Block</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Cell+Block</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">available</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">available</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">on</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collected</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collected</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_name%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">externalIdentifierValue%28ExternalIdentifier%3A1_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">hide</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_persisted%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_type%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">biohazardValue%28Biohazard%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A0_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">29</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForSpecimenValues%28ConsentBean%3A1_specimenLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">New</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lineage</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">New</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1266817607">Specimen successfully updated for CellSpecimen.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ColProt1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ColProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sasas</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">wqwqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">qwqwq</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Protocol Events Details" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">newEvent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Protocol Events Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Save Protocol Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Save Specimen Requirements" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Indwelling Catheter</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Indwelling+Catheter</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acceptable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acceptable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ACD Vacutainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ACD+Vacutainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_storageLocation)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_storageLocation%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Virtual</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Generic Specimen Summary" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Submit Specimen Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.displayName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen_E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">userAction</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ADD</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Protocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">requestType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Protocol</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-467975463">Collection Protocol successfully created.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Objects" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Department" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do;jsessionid=${jsessionid}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Search Department" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Department.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Department.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedDept</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedDept</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Institution" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Institution" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Institution.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Institution.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedInst</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedInst</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search CRG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search CRG" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CancerResearchGroup.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateCRG</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updateCRG</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Site" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Search Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Storage Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ContainerType.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ContainerType.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedST</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Storage Container" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Storage Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">StorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Container.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Container.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">UpdatedStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">UpdatedStorageContainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Specimen Array Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenArrayType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Search Specimen Array Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenArrayType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ContainerType.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ContainerType.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sat</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">sat</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Biohazard" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Biohazard" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Biohazard.NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Biohazard.NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedbh</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedbh</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Collection Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenProtocol.TITLE.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenProtocol.TITLE.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Col</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Col</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Distribution Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Distribution Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenProtocol.TITLE.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecimenProtocol.TITLE.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateddp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updateddp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Participant" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Participant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objectshttp: Search Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Participant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Participant.LAST_NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Participant.LAST_NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">LName</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">L</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Search Collection Protocol Registration" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Retrieve Query Action" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects:Simple Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtReg</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Select --</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Search Domain Objects: Search CPR" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">17</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtReg</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Participant.LAST_NAME.varchar</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Participant.LAST_NAME.varchar</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Starts With</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">And</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Negative Tests" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Duplicate Name Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Department Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with duplicate name: Department page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with duplicate name: Add  Department" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedDept</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dep3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1047729582">Submission failed since a Department with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Institution Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with duplicate name: Institution Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with duplicate name: Add Institution" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedInst</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">xx</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1073312724">Submission failed since a Institution with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate CRG Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with duplicate name: Cancer Research Group page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroup.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with duplicate name: Add Cancer Research Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedCRG</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-230854578">Submission failed since a Cancer Research Group with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Site Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with duplicate name: Site page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with duplicate name: Add Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">s2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Repository</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Repository</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">street1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ss</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cybercity</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Delaware</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Delaware</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">33333</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">212122</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">212122</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">323232</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">323232</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-391259293">Submission failed since a Site with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Storage Type Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type with duplicate name: Storage Type page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type with duplicate name: Add Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedST</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dd</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1578895819">Submission failed since a Container Type with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Specimen Array Type Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type with duplicate name: Specimen Array page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenArrayType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">21</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">21</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type with duplicate name: Add Specimen Array " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sat</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">spartype</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Frozen Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Frozen+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1578895819">Submission failed since a Container Type with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Biohazard Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with duplicate name: Biohazard page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with duplicate name: Add Biohazard" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedbh</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">BioHaz1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Mutagen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Mutagen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1131048946">Submission failed since a Biohazard with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Collection Protocol Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ColProt</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ColProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sasas</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">wqwqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">qwqwq</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Protocol Events Details" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">newEvent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Protocol Events Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Save Protocol Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">user val</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">user+val</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acinar cell tumor</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acinar+cell+tumor</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Operative</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Operative</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Save Specimen Requirements" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ml</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Indwelling Catheter</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Indwelling+Catheter</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Acceptable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Acceptable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ACD Vacutainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ACD+Vacutainer</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_storageLocation)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_storageLocation%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Virtual</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">deriveSpecimenValue%28DeriveSpecimenBean%3A1_quantity%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Generic Specimen Summary" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Submit Specimen Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen_E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ADD</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Protocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Protocol</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-517167999">Submission failed since a Specimen Protocol with the same TITLE already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with duplicate name: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Distribution Protocol Object" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with duplicate name:Distribution Protocol page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with duplicate name: Add Distribution Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateddp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">udp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pd1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-04-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">eqeqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">eqeqw</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Cell Block</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Cell+Block</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Anterior floor of mouth</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Anterior+floor+of+mouth</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Metastatic</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Metastatic</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">30</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-517167999">Submission failed since a Specimen Protocol with the same TITLE already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate SCG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate name: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate name: CpAndParticipants View Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate names:Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate name: Query Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate name: Participant Edit " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenCollectionGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenCollectionGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-05-1984</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Male Gender</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Black or African American</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">g1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-11-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Edit Response</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with duplicate name: Add Specimen Collection Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Default</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="584103625">Submission failed since a Specimen Collection Group with the same NAME already exists</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Field Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Institution with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with Empty Name:Institution " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with Empty Name: Add Institution " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Department with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with Empty Name: Department Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with Empty Name:Add Department " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add CRG with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with Empty Name:Cancer Reasearch Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroup.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with Empty Name: Add Cancer Reasearch Group" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add User with Empty fields" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Email id" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty mail id: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty mail id :Add User " enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">fname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">fname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">South Carolina</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">South+Carolina</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2121212</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2121212</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2121212</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2121212</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1211006747">Email Address is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty First Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty First Name: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty First Name: Add User " enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2121231</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2121231</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-434933904">First Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Last Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Last Name: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Last Name: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">fname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">fname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="783806144">City is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty City name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty City : User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty City : Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">fname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">fname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="783806144">City is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty State Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty State: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty State: Add User " enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">fname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">fname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123132</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123132</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="295603366">State is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Zip code" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Zip code: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Zip code: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">user@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">user@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">lname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">lname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">fname</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">fname</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">21312323</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">21312323</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">23123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">23123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1754887041">Zip Code is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Phone Number" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Phone Number: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Phone Number: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">l</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">l</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">f</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">f</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">South Carolina</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">South+Carolina</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1990584240">Phone Number is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Institution" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname=" Add User with Empty Institution: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname=" Add User with Empty Institution: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">l</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">l</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">f</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">f</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">13213123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">13213123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12312333</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12312333</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1863154867">Institution is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Department" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Department: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty Department: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">l</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">l</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">f</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">f</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">South Carolina</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">South+Carolina</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12312312</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12312312</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">231231221</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">231231221</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">undefined</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-475963865">Department is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty CRG" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty CRG: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty CRG: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">l</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">l</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">f</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">f</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">California</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1231312</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1231312</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1231233</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1231233</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">undefined</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Administrator</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Administrator</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1894960145">Cancer Research Group is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty User Role" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty User Role: User Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/User.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add User with Empty User Role: Add User" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/UserAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">csmUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfUserAdmin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfUserAdmin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">u@a.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">confirmEmailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">u@a.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">l</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">l</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">f</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">f</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">s</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">South Carolina</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">South+Carolina</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">3123123</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">3123123</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1231233</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1231233</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayinstitutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">inst</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">institutionId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaydepartmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dept</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">departmentId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">crg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">crg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cancerResearchGroupId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayrole</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">undefined</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">role</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">role</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">undefined</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="215662275">Role is invalid.</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Site with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with Empty Name: Site Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with Empty Name: Site Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isOnChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isOnChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with Empty Name: Add Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">s</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">s</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">California</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12345</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">312312</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">312312</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">123123</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">123123</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Storage Type  with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type  with Empty Name: Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfStorageType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Storage Type  with Empty Name:Add Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">d2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">d2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Specimen Array Type with Empty Name" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type with Empty Name: Specimen Array Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenArrayType</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">21</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">21</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Specimen Array Type with Empty Name: Add Specimen Array Type " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fixed Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1104420832">Name is required</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Biohazard with Empty Fields" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Biohazard with Empty Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with Empty Name: Biohazard" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">8</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with Empty Name: Add Biohazard" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Carcinogen</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Carcinogen</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">commments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">commments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1104420832">Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Biohazard with Empty Type" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with Empty Type: Biohazard" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">8</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Biohazard with Empty Type: Add Biohazard" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Biohazard</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Biohazard</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1260874914">Please select the valid Type from the list</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with Empty Fields" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Title " enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Title: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Title:Add Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">protocolCoordinatorIds</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">protocolCoordinatorIds</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">adasd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">adasd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-14-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-14-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1298036717">Title is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Short Title" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Short Title: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Short Title: Add Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">CollProt1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">CollProt1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">gggg</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">gggg</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdasd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdasd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1637577001">Short Title is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Start Date" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Start Date: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Start Date:Add Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">CollProt11</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">CollProt11</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdasd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdasd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dadsfd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dadsfd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1935978657">Start Date is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Principle Investigator " enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Principle Investigator: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Principle Investigator:Add Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">CollProt1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">CollProt1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">sdad</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">sdad</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asda</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asda</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2073903775">Please select the valid Principal Investigator from the list</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Class" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Define Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">CollProt1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">CollProt1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asda</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asda</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdasd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdasd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class :Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Protocol Events Details" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">newEvent</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Save Protocol Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1.0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">User VAlue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">User+VAlue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Show Protocol Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:SaveSpecimen Requirements" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">defineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">className</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Virtual</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Virtual</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">quantity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="599674637">Class is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Class:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with empty Storage Location" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Define Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">ColProt1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">ColProt1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdas</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdas</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Protocol Events Details" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">newEvent</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Save Protocol Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1.0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">User Val</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">User+Val</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Save Specimen Requirements" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">defineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">className</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">quantity</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">gm</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">unit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1869649606">Storage location for specimen is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with empty Storage Location:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol with Negative Initial Quantity" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity: Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity: Define Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">ColProt1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">ColProt1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pc1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdja</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdja</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdajsd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdajsd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">c1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Protocol Events Details" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">newEvent</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Save Protocol Events" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1.0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">studyCalendarEventPoint</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1.0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">User Val</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionPointLabel</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">User+Val</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:SaveSpecimen Requirements" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenRequirement</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenRequirement</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">defineEvents</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfDeriveSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">className</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">className</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSite</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">tissueSide</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pathologicalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Virtual</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Virtual</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">quantity</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">gm</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">unit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">unit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">gm</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Admin, Admin</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">storageLocationForAliquotSpecimen</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1972807332">Initial Quantity is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Collection Protocol with Negative Initial Quantity:Show Collection Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">specimenEventsPage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">E1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">key</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with Empty Fields" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Title" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Title: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Title:Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dp</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dp</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">sasa</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">sasa</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-14-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-14-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Abdomen, NOS</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Abdomen%2C+NOS</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Malignant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1298036717">Title is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Principle Investigator" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Principle Investigator: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Principle Investigator:Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">DistProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">DistProt</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dp1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dp1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdas</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdas</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asda</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asda</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Abdomen, NOS</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Abdomen%2C+NOS</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Malignant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2073903775">Please select the valid Principal Investigator from the list</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Short Title" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Short Title: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Short Title: Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">DisProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">ddf</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">ddf</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">sdfs</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">sdfs</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Abdomen, NOS</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Abdomen%2C+NOS</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Malignant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1637577001">Short Title is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Start Date" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Start Date: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Start Date: Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">DisProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dp</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dp</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asdas</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asdas</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">acasad</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">acasad</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Abdomen, NOS</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Abdomen%2C+NOS</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Malignant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1935978657">Start Date is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Tissue Site" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Tissue Site: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Tissue Site: Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">DisProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dp1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dp1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">sada</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">sada</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">asd</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">asd</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Malignant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2145692292">Please select the valid Tissue Site from the list</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol with empty Pathological Status" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Pathological Status: Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Distribution Protocol with empty Pathological Status: Add Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">DisProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">DisProt</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dp</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dp</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">qwe</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">qwe</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-15-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-15-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">qwe</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">qwe</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fixed Tissue</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fixed+Tissue</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Abdomen, NOS</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Abdomen%2C+NOS</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="255761241">Please select the valid Pathological Status from the list.</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Perticipant with empty fields" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Perticipant with empty Medical Record Number" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Medical Record Number: BioSpecimen Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dummy</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">dummy</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Medical Record Number: Cp And Participant Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Medical Record Number: Blank Screen" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Medical Record Number: Participant Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Participant.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfParticipant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clearConsentSession</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clearConsentSession</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Medical Record Number: Add Participant" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ParticipantLookup.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cpId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">null</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">participantId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">cpId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">radioValue</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">null</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">success</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">forwardTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">valueCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfParticipant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Lname1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Lname1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fname1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fname1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">m</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">middleName</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">m</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-16-1993</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">birthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-16-1993</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1993</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calyearbirthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calyearbirthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1993</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">vitalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Male Gender</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">gender</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">genotype</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">American Indian or Alaska Native</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">raceTypes</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">American+Indian+or+Alaska+Native</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">ethnicity</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-- Select --</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-16-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Consent</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">None Defined</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="783610297">Either Site or Medical Record Number is missing in Medical Identifier</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Perticipant with empty Site" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Site: BioSpecimen Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dummy</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">dummy</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Site: Cp And Participant Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Site:  Blank Screen" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Site: Participant Page" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Participant.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfParticipant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">clearConsentSession</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">clearConsentSession</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Perticipant with empty Site:Add Participant" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/ParticipantLookup.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">cpId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">null</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">participantId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">cpId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">radioValue</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">null</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">success</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">forwardTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">valueCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfParticipant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Lname1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">lastName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Lname1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fname1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">firstName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fname1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">m1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">middleName</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">m1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-09-1993</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">birthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-09-1993</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1993</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calyearbirthDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calyearbirthDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1993</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">vitalStatus</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Male Gender</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">gender</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">genotype</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">American Indian or Alaska Native</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">raceTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">American+Indian+or+Alaska+Native</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Unknown</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">ethnicity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fname1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Fname1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-- Select --</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">11-16-2007</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Consent</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">None Defined</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="783610297">Either Site or Medical Record Number is missing in Medical Identifier</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Misc" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disable Participant with specimens" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled  Activity Status Tests: Retrieve Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled Activity Status Tests: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled Activity Status Tests: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-- Select --</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled Activity Status Tests: Search  Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant.LAST_NAME.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant.LAST_NAME.varchar</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">N1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled Activity Status Tests: Search Edit Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearchEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disabled Activity Status Tests: Edit Participant Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageBioSpecimen.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageBioSpecimen.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">N1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">G1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-05-1984</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Male Gender</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Specified</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Black or African American</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">g1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pc</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1111</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-11-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Edit Response</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="797508486">Unable to disable Participant : Before disabling it,dispose all the associated Specimens.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dispose Specimen having sub specimens" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens: BioSpecimen Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dummy</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dummy</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens: Cp And Participants Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens: Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimen: Events Page " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens:Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens: Events Search " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEventsSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">specLable1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disposal</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disposal</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimen: Disposal Event Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParameters.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDisposalEventParameters</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDisposalEventParameters</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen having sub specimens:  Add Disposal Event Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParametersAdd.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">disposal</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">disposal</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageBioSpecimen.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageBioSpecimen.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">userId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11-16-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">20</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">20</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">20</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">reason</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">comments</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1418263777">Can not disable specimen. Specimen contains sub-specimen.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dispose Specimens not having sub specimens" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens: BioSpecimen Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dummy</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dummy</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens: Cp And Participants Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens: Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimen:  Events Page " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens:Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens: Events Search " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEventsSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disposal</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disposal</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="842136300">Specimen with given Specimen Label does not exist.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">6</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimen: Disposal Event Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParameters.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDisposalEventParameters</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDisposalEventParameters</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen not having sub specimens:  Add Disposal Event Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParametersAdd.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">disposal</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">disposal</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageBioSpecimen.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageBioSpecimen.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">userId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11-16-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">16</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">16</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ddd</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">reason</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ddd</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ddd</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">comments</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ddd</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-384626859">&lt;li&gt;&lt;font color=&quot;red&quot;&gt;Specimen is already marked as closed.&lt;/font&gt;&lt;/li&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">6</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dispose Specimen and Create Aliquots" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Biospecimen Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dummy</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dummy</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots: CpAndParticipants view Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots: Events Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Events Search Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEventsSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disposal</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenEventParameter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disposal</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Disposal Events Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParameters.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDisposalEventParameters</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDisposalEventParameters</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots: Add Disposal Events Parameters" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DisposalEventParametersAdd.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">userId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11-16-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdateOfEvent</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">16</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">16</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInHours</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">displaytimeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">timeInMinutes</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Closed</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Closed</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">sasasa</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">reason</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">reason</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">sasasa</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">asassa</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">comments</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">asassa</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-384626859">&lt;li&gt;&lt;font color=&quot;red&quot;&gt;Specimen is already marked as closed.&lt;/font&gt;&lt;/li&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">6</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Events Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QuickEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots:  Aliquots Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/Aliquots.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfAliquot</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfAliquot</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dispose Specimen and Create Aliquots: Create  Aliquots" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/CreateAliquots.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCreateAliquot</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCreateAliquot</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">add</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">submit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">buttonClicked</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">buttonClicked</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">submit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenLabel</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">noOfAliquots</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">noOfAliquots</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">quantityPerAliquot</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">specimenID</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenID</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">spCollectionGroupId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">spCollectionGroupId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">nextForwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1527196546">Specimen is already marked as closed.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add SCG with Closed site" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close Site" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site: Query Interface" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site:Simple Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">5</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Site.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Site.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site: Close  Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newUpdatedSite1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Laboratory</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Laboratory</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sss</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ss</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ccc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">cc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">California</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">California</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">211212</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">211212</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">121212</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">121212</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Closed</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="7647835">Site successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add SCG" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site: BioSpecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site:Show Cp And Participants" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed site: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed Site: Participant Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQueryEdit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed Site: Edit Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenCollectionGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenCollectionGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-05-1984</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Male Gender</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Black or African American</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">g1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-11-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Edit Response</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add SCG with Closed Site: Add SCG " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Default</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ApplyNone</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(1111)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1%281111%29</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">No+Action</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N1%2C+G1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1111</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updatedSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">updatedSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecCollGrp1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">SpecCollGrp</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comment</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A0_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_participantResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponseID%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentResponseForScgValues%28ConsentBean%3A1_specimenCollectionGroupLevelResponse%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Admin%2C+Admin</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">18</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">16</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1270432235">Site is already marked as closed</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Participant Registration with closed CP" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close CP" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Query Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Simple Search" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CollectionProtocol.IDENTIFIER.bigint</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">CollectionProtocol.IDENTIFIER.bigint</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP:Define Events." enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ColProt</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ColProt</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">sasas</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">sasas</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10-12-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">10-12-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">endDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">endDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">wqwqw</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">wqwqw</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Closed</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Closed</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">qwqwq</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">qwqwq</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_consentTierID%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">c2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">c2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Protocol Events Details" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">newEvent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Define Events" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Generic Specimen Summary" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP:Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Close Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6269d45377f9d86ccf1206c8b205294d</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">6269d45377f9d86ccf1206c8b205294d</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.displayName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Specimen_E1_S0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.className</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSite</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Applicable</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSide</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pre-Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.quantity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">25.0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">eventId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">UPDATE</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">userAction</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">UPDATE</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Protocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">requestType</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Protocol</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-965797018">Collection Protocol successfully updated.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Show Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ViewSummary</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Participant Reg" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Biospecimen Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummy</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">dummy</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: CpAndParticipants view Page" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Blank Screen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: Query Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipant.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">refresh</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Participant Registration with closed CP: CP Query Participant Lookup" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantLookup.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">ForwardTo</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfParticipantCPQuery</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">N2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">m</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">m</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-09-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-09-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unspecified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unspecified</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">American Indian or Alaska Native</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">American+Indian+or+Alaska+Native</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Unknown</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">G2</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2222</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2222</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11-16-2007</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">11-16-2007</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Enter Response</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Enter+Response</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-47764976">Collection Protocol is already marked as closed.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close Storage Container" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Storage Container: Object: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">StorageContainer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Storage Container: Search Storage Container" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">StorageContainer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">7</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfStorageContainer</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">StorageContainer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">StorageContainer</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Container.NAME.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Container.NAME.varchar</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Storage Container :Edit Storage Container" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/StorageContainerEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">containerId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">containerId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ST</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">typeName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">typeName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ST</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">site</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">siteName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">siteName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">site</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">positionInParentContainer</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">positionInParentContainer</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">siteForParentContainer</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">siteForParentContainer</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">typeId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">typeId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">checkedButton</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">siteId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">siteId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UpdatedStorageContainer01</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">containerName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">containerName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">UpdatedStorageContainer01</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">barcode</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">barcode</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15.0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">defaultTemperature</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">defaultTemperature</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Closed</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionIds</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionIds</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Specimen</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimenOrArrayType</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Specimen</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">holdsStorageTypeIds</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">holdsStorageTypeIds</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">holdsSpecimenClassTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">oneDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">twoDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-839156730">Storage Container successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close Distribution protocol" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Distribution protocol: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Distribution protocol: Search Distribution Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Distribution protocol:Edit Distribution Protocol " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">updateddp</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">title</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">newUpdateddp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">udp</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">updatedpd1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dsds</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">irbID</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dsds</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-03-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">endDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">endDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ererwe</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Closed</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Cell</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Frozen Cell Pellet</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Frozen+Cell+Pellet</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Ampulla of Vater</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Ampulla+of+Vater</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Malignant, Invasive</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Malignant%2C+Invasive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-791519442">Distribution Protocol successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close Participant" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: Biospecimen Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dummy</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dummy</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: CpAndParticipants view Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: Search Participant Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close Participant: Close Participant" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LName</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LName</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FName</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">FName</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">m</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">m</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-12-1982</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-12-1982</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Female Gender</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Female+Gender</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">XX</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Asian</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Asian</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Reported</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Not+Reported</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Closed</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Closed</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pfname</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pfname</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-- Select --</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11-02-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">11-02-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">None Defined</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1898295855">Participant successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Close CPR" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Retrieve Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-- Select --</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Search  Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg.PROTOCOL_PARTICIPANT_ID.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg.PROTOCOL_PARTICIPANT_ID.varchar</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Search Edit  Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearchEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Close CPR: Edit Participant " enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">N1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">G1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-05-1984</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Male Gender</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Specified</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Black or African American</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Closed</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Closed</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">g1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pc</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1111</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-11-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Edit Response</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1898295855">Participant successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disable Distribution Protocol" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Distribution Protocol: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Distribution Protocol: Search Distribution Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">DistributionProtocol.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Distribution Protocol: Diasable Distribution Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageAdministrativeData.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageAdministrativeData.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">updateddp</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">title</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">updateddp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">udp</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">udp</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dsds</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">irbID</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dsds</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-03-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-03-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">endDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">endDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ererwe</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ererwe</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_id)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Cell</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenClass)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenClass%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Cell</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Frozen Cell Pellet</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_specimenType)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_specimenType%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Frozen+Cell+Pellet</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Ampulla of Vater</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_tissueSite)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_tissueSite%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Ampulla+of+Vater</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Malignant, Invasive</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_pathologyStatus)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_pathologyStatus%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Malignant%2C+Invasive</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SpecimenRequirement:1_quantity_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SpecimenRequirement%3A1_quantity_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disable Participant not having specimens" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Biospecimen Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ManageBioSpecimen.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">dummy</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">dummy</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">dummy</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummy</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens: CpAndParticipants view Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Search Participant" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">12</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Disable Participant" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageBioSpecimen.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageBioSpecimen.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">LName</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">LName</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Fname</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Fname</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">m</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">B</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-12-1982</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-12-1982</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Female Gender</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Female+Gender</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">XX</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">XX</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Asian</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Asian</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Hispanic or Latino</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Hispanic+or+Latino</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pfname</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pfname</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-- Select --</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">11-02-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">11-02-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">None Defined</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">None+Defined</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens: CpAndParticipants view Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCpQueryResults</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable Participant not having specimens:  Blank Screen" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disable CPR" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Retrieve Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/RetrieveQueryAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Query Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SimpleConditionsNode:1_Condition_DataElement_table</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">SimpleConditionsNode%3A1_Condition_DataElement_table</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-- Select --</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">--+Select+--</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Search  Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">17</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">17</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSimpleQueryInterface</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfSimpleQueryInterface</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtReg.PROTOCOL_PARTICIPANT_ID.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtReg.PROTOCOL_PARTICIPANT_ID.varchar</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">And</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">And</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Search Edit Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearchEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Participant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Participant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CPR: Edit Participant Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">-1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">participantId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">cpId</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">success</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageBioSpecimen.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageBioSpecimen.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfParticipant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">socialSecurityNumberPartC</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">N1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">lastName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">N1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">G1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">firstName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">G1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">middleName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-05-1984</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-05-1984</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Male Gender</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">gender</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Male+Gender</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Specified</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">genotype</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Not+Specified</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Black or African American</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Black+or+African+American</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Unknown</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Unknown</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_Site_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">g1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_medicalRecordNumber%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">g1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28ParticipantMedicalIdentifier%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pc</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_shortTitle%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pc</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_CollectionProtocol_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1111</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_protocolParticipantIdentifier%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1111</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-11-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_registrationDate%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-11-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_activityStatus%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Active</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Consent</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Edit Response</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_isConsentAvailable%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Edit+Response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">collectionProtocolRegistrationValue%28CollectionProtocolRegistration%3A1_id%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1411199400">Unable to disable Participant : Before disabling it,dispose all the associated Specimens</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Disable CP not having Specimens" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Query Interface" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Search Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">9</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCollectionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CollectionProtocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CollectionProtocol</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecimenProtocol.TITLE.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">SpecimenProtocol.TITLE.varchar</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Starts+With</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">showCalendar%28SimpleConditionsNode%3A1_showCalendar%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ColProt1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ColProt1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Define Events" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDefineEvents</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">/ManageAdministrativeData.do</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%2FManageAdministrativeData.do</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">principalInvestigatorId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ColProt1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">title</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">title</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ColProt1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pc1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">shortTitle</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pc1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">qqq</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">irbID</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">irbID</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">qqq</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10-15-2007</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">startDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">10-15-2007</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">calmoisstartDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">endDate</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">endDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentWaived</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentWaived</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">enrollment</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">wqwqw</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">descriptionURL</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">wqwqw</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Disabled</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Disabled</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">qwqwq</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">unsignedConsentURLName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">qwqwq</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentTierCounter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentTierCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_consentTierID%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">c3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A0_statement%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">c3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentValue(ConsentBean:1_consentTierID)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_consentTierID%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">c1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">consentValue%28ConsentBean%3A1_statement%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">c1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Show Collection Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Protocol Events Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">add</stringProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">newEvent</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">newEvent</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Show Collection Protocol Page" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">specimenEventsPage</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Protocol Events Details" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ProtocolEventsDetails.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">edit</stringProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">defineEvents</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">defineEvents</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">E1</stringProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">key</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">user valclass_E1</stringProp>
                    <stringProp name="Argument.name">nodeId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">nodeId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">user+valclass_E1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.name">operationType</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operationType</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">null</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Show Collection Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">specimenEventsPage</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Define Events" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">dummyId</stringProp>
                    <stringProp name="Argument.name">Event_Id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">ViewSummary</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Show Collection Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Generic Specimen Summary" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">dummyId</stringProp>
                    <stringProp name="Argument.name">Event_Id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">Event_Id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">dummyId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Show Collection Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">specimenEventsPage</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">specimenEventsPage</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value">ViewSummary</stringProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">ViewSummary</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Disable CP not having Specimens: Submit Specimen Collection Protocol" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">7c8dac5b599de279e8f7748a657052c8</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">org.apache.struts.taglib.html.TOKEN</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">7c8dac5b599de279e8f7748a657052c8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">E1_S0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">selectedSpecimenId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">E1_S0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.uniqueIdentifier</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">E1_S0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.displayName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Specimen_E1_S0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Fluid</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].className</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.className</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Fluid</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].type</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.type</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Amniotic+Fluid</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Adrenal gland, NOS</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSite</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Adrenal+gland%2C+NOS</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Applicable</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.tissueSide</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Not+Applicable</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Pre-Malignant</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.pathologicalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Pre-Malignant</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Auto</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].storageContainerForSpecimen</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.storageContainerForSpecimen</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Auto</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">15.0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">specimen%5B0%5D.quantity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">15.0</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">E1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">eventId</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">eventId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">E1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">UPDATE</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userAction</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">userAction</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">UPDATE</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Collection Protocol</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">requestType</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">requestType</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Collection+Protocol</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Logout" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout: Logout Page" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Home.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout: Logout Page" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Logout.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout: Redirect Home" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">600</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
