<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
	<class
		name="com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration"
		table="CATISSUE_COLL_PROT_REG" lazy="true">

		<id name="id" column="IDENTIFIER">
			<generator class="native">
				<param name="sequence">CATISSUE_COLL_PROT_REG_SEQ</param>
			</generator>
		</id>

		<property name="consentSignatureDate" type="java.util.Date"
			column="CONSENT_SIGN_DATE" />

		<property name="signedConsentDocumentURL" type="string"
			column="CONSENT_DOC_URL" />

		<property name="protocolParticipantIdentifier" type="string"
			column="PROTOCOL_PARTICIPANT_ID" />

		<property name="barcode" type="string" column="BARCODE" />

		<property name="registrationDate" type="date" column="REGISTRATION_DATE" />

		<property name="activityStatus" type="string" column="ACTIVITY_STATUS" />

		<many-to-one name="consentWitness" class="com.krishagni.catissueplus.core.administrative.domain.User"
			column="CONSENT_WITNESS" />

		<many-to-one name="participant"
			class="com.krishagni.catissueplus.core.biospecimen.domain.Participant"
			cascade="save-update" column="PARTICIPANT_ID" />

		<many-to-one name="collectionProtocol"
			class="edu.wustl.catissuecore.domain.CollectionProtocol" column="COLLECTION_PROTOCOL_ID" />



		<set name="consentResponseCollection" table="CATISSUE_CONSENT_TIER_RESPONSE"
			inverse="true" cascade="save-update">
			<key column="COLL_PROT_REG_ID" />
			<one-to-many
				class="com.krishagni.catissueplus.core.biospecimen.domain.ConsentTierResponse" />
		</set>



		<set name="scgCollection" table="CATISSUE_SPECIMEN_COLL_GROUP"
			cascade="save-update">
			<key column="COLLECTION_PROTOCOL_REG_ID" />

			<one-to-many
				class="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenCollectionGroup" />
		</set>
		
		<sql-query name="getParticipantsForAdminByCpId">
	    	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	<return-scalar column="firstName" type="string" />
	    	<return-scalar column="lastName" type="string" />
	    	
			select cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId, p.first_name as firstName, p.last_name as lastName
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			where cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
        </sql-query>
        
        <sql-query name="getParticipantsForAdminByCpIdAndSeachTerm">
	    	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	<return-scalar column="firstName" type="string" />
	    	<return-scalar column="lastName" type="string" />
	    	
			select cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId, p.first_name as firstName, p.last_name as lastName
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			where cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
			and (
            lower(p.first_Name) like :searchTerm or
            lower(p.last_Name) like :searchTerm or
            lower(cpr.protocol_Participant_Id) like :searchTerm
            )
        </sql-query>
        
	    <sql-query name="getParticipantsByCpId">
	    	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	
			select distinct cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			left join catissue_part_medical_id pmi on pmi.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			left join catissue_site_users su on su.site_id = pmi.site_id 
			where (pmi.site_id is null or su.user_id = :userId) and cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
        </sql-query>
        
        <sql-query name="getPhiParticipantsByCpId">
        	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	<return-scalar column="firstName" type="string" />
	    	<return-scalar column="lastName" type="string" />
	    	
            select distinct cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId, p.first_name as firstName, p.last_name as lastName
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			left join catissue_part_medical_id pmi on pmi.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			left join catissue_site_users su on su.site_id = pmi.site_id 
			where (pmi.site_id is null or su.user_id = :userId) and cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
        </sql-query>

        <sql-query name="getParticipantsByCpIdAndSearchTerm">
        	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	
        	select distinct cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			left join catissue_part_medical_id pmi on pmi.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			left join catissue_site_users su on su.site_id = pmi.site_id 
			where (pmi.site_id is null or su.user_id = :userId) and cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
            and (
            lower(cpr.protocol_Participant_Id) like :searchTerm
            )
        </sql-query>
        
        <sql-query name="getPhiParticipantsByCpIdAndSearchTerm">
        	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	<return-scalar column="firstName" type="string" />
	    	<return-scalar column="lastName" type="string" />
	    	
            select distinct cpr.identifier cprId, p.identifier as pId, cpr.protocol_participant_id as ppId, p.first_name as firstName, p.last_name as lastName
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			left join catissue_part_medical_id pmi on pmi.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			left join catissue_site_users su on su.site_id = pmi.site_id 
			where (pmi.site_id is null or su.user_id = :userId) and cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled'
            and (
            lower(p.first_Name) like :searchTerm or
            lower(p.last_Name) like :searchTerm or
            lower(cpr.protocol_Participant_Id) like :searchTerm
            )
        </sql-query>
        
        <sql-query name="getParticipantByCPAndParticipantId">
        	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />

            select
            cpr.id as cprId, participant.id as pId, cpr.protocolParticipantIdentifier as ppId 
            from
            CollectionProtocolRegistration cpr
            inner join
            cpr.participant participant
            inner join cpr.collectionProtocol cp
            where
            cp.id = :cpId
            and 
            participant.id = :participantId
            and
            cpr.activityStatus != 'Disabled' and participant.activityStatus != 'Disabled'
        </sql-query>
        <sql-query name="getPhiParticipantByCPAndParticipantId">
        	<return-scalar column="cprId" type="long" />
	    	<return-scalar column="pId" type="long" />
	    	<return-scalar column="ppId" type="string" />
	    	<return-scalar column="firstName" type="string" />
	    	<return-scalar column="lastName" type="string" />
	    	
        	select distinct cpr.identifier as cprId, p.identifier as pId, cpr.protocol_participant_id as ppId, p.first_name as firstName, p.last_name as lastName
			 from catissue_participant p inner join catissue_coll_prot_reg cpr on cpr.participant_id = p.identifier
			inner join catissue_collection_protocol cp on cp.identifier=cpr.collection_protocol_id
			cp.identifier = :cpId and cpr.activity_status != 'Disabled'
			and p.activity_status != 'Disabled' participant.id = :participantId
        </sql-query>

		<query name="getCollectionGroupsByCprId">
			select scg.id,scg.name,scg.collectionStatus,
			scg.receivedTimestamp,
			scg.collectionProtocolEvent.id,scg.collectionProtocolEvent.studyCalendarEventPoint,
			scg.collectionProtocolEvent.collectionPointLabel,
			scg.collectionProtocolRegistration.registrationDate from
			SpecimenCollectionGroup as scg where
			scg.collectionProtocolRegistration.id = :cprId and scg.activityStatus
			!= 'Disabled' order by
			scg.collectionProtocolEvent.studyCalendarEventPoint
		</query>

		<query name="getCprIdByBarcode">
			select cpr.id from CollectionProtocolRegistration
			cpr where
			cpr.barcode=:barcode
		</query>

		<query name="getCprIdByPpid">
			select cpr.id from CollectionProtocolRegistration
			cpr where
			cpr.collectionProtocol.id=:cpId and
			cpr.protocolParticipantIdentifier=:ppid
		</query>

		<query name="getCprByPpid">
			from
			com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration
			cpr where cpr.collectionProtocol.id=:cpId and
			cpr.protocolParticipantIdentifier=:ppid
		</query>
		
		<query name="getRegistrationByParticipantId">
			from
			com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration
			cpr where cpr.participant.id=:participantId and
			cpr.activityStatus='Active'
		</query>
		
		<query name="getSubRegistrationByParticipantAndCPId">
			from
			com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration
			cpr where cpr.participant.id=:participantId and cpr.collectionProtocol.parentCollectionProtocol.id=:cpId and
			cpr.activityStatus='Active'
		</query>

	</class>
</hibernate-mapping>

