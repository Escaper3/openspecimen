<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">

	<class
		name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenCollectionGroup"
		table="CATISSUE_SPECIMEN_COLL_GROUP" lazy="true">
		<id name="id" column="IDENTIFIER" type="long">
			<generator class="native">
				<param name="sequence">CATISSUE_SPECIMEN_COLL_GRP_SEQ</param>
			</generator>
		</id>
		<property name="clinicalDiagnosis" type="string" column="CLINICAL_DIAGNOSIS" />

		<property name="clinicalStatus" type="string" column="CLINICAL_STATUS" />

		<property name="activityStatus" type="string" column="ACTIVITY_STATUS" />

		<property name="name" type="string" column="NAME" />

		<property name="barcode" type="string" column="BARCODE" />

		<property name="collectionStatus" type="string" column="COLLECTION_STATUS" />
		
		<property name="identifiedReport" lazy="true" column="IDENTIFIED_REPORT" />
		
		<property name="deIdentifiedReport" lazy="true" column="DEIDENTIFIED_REPORT" />

		<!-- <property name="encounterTimestamp" type="timestamp"
			column="ENCOUNTER_TIMESTAMP" /> -->

		<property name="comment" type="string" column="COMMENTS" />

		<property name="surgicalPathologyNumber" type="string"
			column="SURGICAL_PATHOLOGY_NUMBER" />

		<property name="collectionTimestamp" type="timestamp"
			column="COLLECTION_TIMESTAMP" />

		<property name="collectionComments" type="string"
			column="COLLECTION_COMMENTS" />

		<property name="collectionProcedure" type="string"
			column="COLLECTION_PROCEDURE" />

		<property name="collectionContainer" type="string"
			column="COLLECTION_CONTAINER" />

		<many-to-one name="collector" class="com.krishagni.catissueplus.core.administrative.domain.User"
			column="COLLECTOR_ID" />

		<property name="receivedQuality" type="string" column="RECEIVED_QUALITY" />

		<property name="receivedTimestamp" type="timestamp" column="RECEIVED_TIMESTAMP" />

		<property name="receivedComments" type="string" column="RECEIVED_COMMENTS" />

		<many-to-one name="receiver" class="com.krishagni.catissueplus.core.administrative.domain.User"
			column="RECEIVER_ID" />

		<many-to-one name="collectionProtocolRegistration"
			class="com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolRegistration"
			column="COLLECTION_PROTOCOL_REG_ID" />

		<many-to-one name="collectionProtocolEvent"
			class="com.krishagni.catissueplus.core.biospecimen.domain.CollectionProtocolEvent" column="COLLECTION_PROTOCOL_EVENT_ID" />

		<many-to-one name="collectionSite" class="com.krishagni.catissueplus.core.administrative.domain.Site"
			column="SITE_ID" />

		<set name="specimenCollection" table="CATISSUE_SPECIMEN" inverse="true"
			cascade="save-update">
			<key column="SPECIMEN_COLLECTION_GROUP_ID"></key>
			<one-to-many
				class="com.krishagni.catissueplus.core.biospecimen.domain.Specimen" />
		</set>

                <sql-query name="getVisitsSummaryByCprId">
                  <return-scalar column="id" type="long"/>
                  <return-scalar column="event_id" type="long"/>
                  <return-scalar column="name" type="string"/>
                  <return-scalar column="label" type="string"/>
                  <return-scalar column="calendar_point" type="int"/>
                  <return-scalar column="status" type="string"/>
                  <return-scalar column="visit_date" type="timestamp"/>
                  <return-scalar column="reg_date" type="timestamp"/>
 
                  select   
                    scg.identifier as id, cpe.identifier as event_id, scg.name as name, 
                    cpe.collection_point_label as label, cpe.study_calendar_event_point as calendar_point,
                    scg.collection_status as status, scg.collection_timestamp as visit_date, cpr.registration_date as reg_date 
                  from   
                    catissue_coll_prot_reg cpr
                    inner join catissue_coll_prot_event cpe on cpe.collection_protocol_id = cpr.collection_protocol_id
                    left join catissue_specimen_coll_group scg 
                      on scg.collection_protocol_event_id = cpe.identifier and scg.collection_protocol_reg_id = cpr.identifier
                  where
                    cpr.identifier = :cprId
                </sql-query>

                <sql-query name="getVisitsCollectionStatus">
                  <return-scalar column="id" type="long"/>
                  <return-scalar column="event_id" type="long"/>
                  <return-scalar column="anticipated" type="int"/>
                  <return-scalar column="collected" type="int"/>
                  <return-scalar column="uncollected" type="int"/>
 
                  select
                    scg.identifier as id, cpe.identifier as event_id,
                    count(sp_rq.identifier) as anticipated,
                    count(case when s.collection_status = 'Collected' then s.identifier else null end) as collected,
                    count(case when s.collection_status = 'Not Collected' then s.identifier else null end) as uncollected
                  from
                    catissue_coll_prot_event cpe
                    inner join catissue_cp_req_specimen sp_rq on sp_rq.collection_protocol_event_id = cpe.identifier
                    left join catissue_specimen_coll_group scg 
                      on scg.collection_protocol_event_id = cpe.identifier and scg.collection_protocol_reg_id = :cprId
                    left join catissue_specimen s on s.specimen_collection_group_id = scg.identifier and s.req_specimen_id = sp_rq.identifier
                  where
                    cpe.identifier in (:eventIds)
                  group by
                    scg.identifier, cpe.identifier
                </sql-query>

                <sql-query name="getVisitsUnplannedSpecimenCount">
                  <return-scalar column="id" type="long"/>
                  <return-scalar column="event_id" type="long"/>
                  <return-scalar column="unplanned" type="int"/>
 
                  select 
                    scg.identifier as id, cpe.identifier as event_id,
                    count(s.identifier) as unplanned 
                  from 
                    catissue_coll_prot_event cpe 
                    inner join catissue_specimen_coll_group scg on scg.collection_protocol_event_id = cpe.identifier
                    inner join catissue_specimen s on s.specimen_collection_group_id = scg.identifier
                  where 
                    cpe.identifier in (:eventIds) and 
                    scg.collection_protocol_reg_id = :cprId and 
                    s.req_specimen_id is null
                  group by 
                    scg.identifier, cpe.identifier
                </sql-query>
	</class>
</hibernate-mapping>
