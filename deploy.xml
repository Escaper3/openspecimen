<?xml version ="1.0"?>
<!--Ant Script for create Build for caTissue Suite-->

<project name="caTissue Suite v1.1 Installation" default="deploy_app">

	<!--define require dir and Properties -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar" />
		</classpath>
	</taskdef>
	
	<property environment="env" />	
	<import file="build-properties.xml"/>
	
	<property name="base.dir" value="." />
	<property name="temp.dir" value="./deploytempCatissuecore" />
	<property name="csm.dir" value="${temp.dir}/tempcsm" />
	<property name="lib.dir" value="${base.dir}/lib" />
	<property name="mysql.sql.dir" value="${base.dir}/SQL/MySql" />
	<property name="dbupgrade.sql.dir" value="${base.dir}/SQL/DBUpgrade" />
	<property name="oracle.sql.dir" value="${base.dir}/SQL/Oracle" />
	<property name="common.sql.dir" value="${base.dir}/SQL/Common" />
	<property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect" />

	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.h3.string" value="org.hibernate.dialect.MySQLDialect" />

	<property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver" />
	<property name="mysql.driver.string" value="org.gjt.mm.mysql.Driver" />

	<property name="mysql.lib" value="mysql-connector-java-5.0.8-bin.jar" />
	<property name="oracle.lib" value="oracleDriver.jar" />
	
	<property name="catissue.struts.config.file" value="struts-config.xml" />
	<property name="catissue.hibernate.config.file" value="hibernate.cfg.xml" />
	<property name="catissue.tiles.def.file" value="tiles-defs.xml" />
	
	<property name="oracle_home" value="${env.ORACLE_HOME}"/>
	<property name="oracle_home.bin" value="${oracle_home}\bin" />
	<property name="sqlldr" value="${oracle_home.bin}\sqlldr.exe" />
	<property name="path" value="${env.Path}" />
	<!-- Check for required properties -->
	<target name="assert">
		<if>
			<equals arg1="" arg2="${jboss.home.dir}" />
			<then>
				<fail message="The property 'jboss.home.dir' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.server.name}" />
			<then>
				<fail message="The property 'jboss.server.name' can not be empty" />
			</then>
		</if>

		<if>
			<or>
				<equals arg1="mysql" arg2="${database.type}" />
				<equals arg1="oracle" arg2="${database.type}" />
			</or>
			<then />
			<else>
				<fail message="The value of property 'database.type' must be mysql or oracle" />
			</else>
		</if>
		
		<!-- Validation for ORACLE_HOME and path-->
		<if>
		<equals arg1="oracle" arg2="${database.type}" />
			<then>				
				<available file="${oracle_home}" type="dir" property="IsOracleHomeBlank" />
				<if>
					<not>
					<equals arg1="true" arg2="${IsOracleHomeBlank}" />
					</not>	
					<then>
						<fail message="ORACLE_HOME is not set on your server. For windows set oracle_home as environment variable or in linux set in .bash_profile file." />
					</then>
				</if>
				
				<condition property="isOracleBinDirSetInPath">
				<contains string="${path}" substring="${oracle_home.bin}" casesensitive="true" />
				</condition>
				<if>	
					<equals arg1="true" arg2="${isOracleBinDirSetInPath}" />
					<then>
						<echo>Oracle bin present in path... </echo>
					</then>
					<else>
						<fail message="ORACLE_HOME is not set in path,please set it" />
					</else>	
				</if>
				<available file="${sqlldr}" property="issqlldrPresentInBin"/>		
				<if>	
					<equals arg1="true" arg2="${issqlldrPresentInBin}" />			
					<then>
						<echo>${sqlldr} file exists. </echo>
					</then>								
					<else>
						<fail message="${sqlldr} file is not present." />
					</else>
				</if>
			</then>
		</if>				
		<if>
			<equals arg1="" arg2="${database.host}" />
			<then>
				<fail message="The property 'database.host' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.port}" />
			<then>
				<fail message="The property 'database.port' can not be empty. Default port for MySQL:3306 and for Oracle: 1521" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.name}" />
			<then>
				<fail message="The property 'database.name' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${database.username}" />
			<then>
				<fail message="The property 'database.username' can not be empty" />
			</then>
		</if>
		<!-- Mandar 17May06 check for first user -->
		<if>
			<equals arg1="" arg2="${first.admin.department}" />
			<then>
				<fail message="The property 'first.admin.department' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${first.admin.institution}" />
			<then>
				<fail message="The property 'first.admin.institution' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${first.admin.cancerresearchgroup}" />
			<then>
				<fail message="The property 'first.admin.cancerresearchgroup' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${first.admin.emailAddress}" />
			<then>
				<fail message="The property 'first.admin.emailAddress' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${first.admin.password}" />
			<then>
				<fail message="The property 'first.admin.password' can not be empty" />
			</then>
		</if>
		<antcall target="validate_database_connection" />
		<if>
			<equals arg1="" arg2="${email.administrative.emailAddress}" />
			<then>
				<echo>email.adminstartive.emailaddress can be left blank.</echo>
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${email.sendEmailFrom.emailAddress}" />
			<then>
				<echo>email.sendEmailFrom.emailAddress can be left blank.</echo>
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${email.mailServer}" />
			<then>
				<echo>email.mailServer can be left blank.</echo>
			</then>
		</if>
	</target>

	<!--Target for validation of connection parameters-->
	<target name="validate_database_connection">
		<!-- validation for database connection -->
		<trycatch>
        	<try>
					<if>
						<equals arg1="mysql" arg2="${database.type}" />
						<then>							
							<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
									<transaction>select 1;</transaction>
									<transaction>commit;</transaction>
									<classpath>
									  <fileset dir="${lib.dir}">
									 	<include name="*.jar" />
									  </fileset>
									</classpath>
							</sql>							
						</then>					
						<elseif >					
							<equals arg1="oracle" arg2="${database.type}" />					
							<then>				
								<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
									<transaction>select sysdate from dual;</transaction>
									<transaction>commit;</transaction>
										<classpath>
											<fileset dir="${lib.dir}">
												<include name="*.jar" />
											</fileset>
										</classpath>
								</sql>					
							</then>					
						</elseif>
				</if>
		</try>
		<catch>
			<fail message="Connection fails.Please check the database configuration parameters like database.host,database.port,database.name etc.  " />
		</catch>
	</trycatch> 
	</target>

	<!--Extrct WAR and copy Configuration files to temp directory-->
	<target name="init">
		<echo message="Initializing installation..." />

		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore" />
		<unwar src="${base.dir}/dynamicExtensions.war" dest="${temp.dir}/dynamicExtensions" />
		<unwar src="${base.dir}/caTissuePrintWebService.war" dest="${temp.dir}/caTissuePrintWebService" />
		<unjar src="${temp.dir}/catissuecore/WEB-INF/lib/DynamicExtensions.jar" dest="${temp.dir}/dynamicExtensionsjar" />
		<copy  todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true">
			<fileset dir="${base.dir}">
				<include name="log4j.properties"/>
			</fileset>
		</copy>
		
		<antcall target="configure_log4j" />
		

		<!-- <unwar src="${base.dir}/catissuecorecsm.war" dest="${temp.dir}/tempcsm"/> -->
		<copy todir="${temp.dir}/catissuecore-properties" overwrite="true">
			<fileset dir="${base.dir}/catissuecore-properties" />
		</copy>
		<copy file="${base.dir}/caTIES_conf/SectionHeaderConfig.txt" todir="${temp.dir}/catissuecore-properties" overwrite="true" />
		<copy file="catissuecore-ds.xml" todir="${temp.dir}" overwrite="true" />

		<copy file="${temp.dir}/catissuecore/WEB-INF/classes/DAOConfig.xml" todir="${temp.dir}" />
		<!--Kapil V 1.0.1 Changes-->
		<copy file="login-config.xml" todir="${temp.dir}" overwrite="true" />
		<copy file="properties-service.xml" todir="${temp.dir}" overwrite="true" />
	</target>
	
	<target name="configure_log4j">
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties"> 
			<include name ="log4j.properties"/>
			<replacefilter token="@@jbosshome@@" value="${jboss.server.url}"/>
		</replace>
	</target>

	<!--Modify Configuration such as Session Timeout, Admin details and JBoss server port-->
	<target name="configure_war">
		<echo message="Modifying caTissueCore Configuration File..." />

		<replace file="${temp.dir}/catissuecore/WEB-INF/web.xml">
			<replacefilter token="&lt;session-timeout>30&lt;/session-timeout>" value="&lt;session-timeout>${session.timeout}&lt;/session-timeout>" />
		</replace>

		<!--<replace file="${temp.dir}/catissuecore/WEB-INF/classes/remoteService.xml"> 
			<replacefilter token="@@server.port@@" value="${jboss.server.port}"/>
		</replace>-->
	
	</target>


	<!--Modify Adopter's Institution images, URL of Institution website and Contact Us, Privacy Notice, Disclaimer, Accessibility Text Files-->
	<target name="adopter_configuration">
		<echo message="Updating Site Images" />
		<copy todir="${temp.dir}/catissuecore/images" overwrite="true">
			<fileset dir="${base.dir}/images" />
		</copy>
	</target>

	<!--Modify Configuration For MySQL-->
	<target name="mysql_config">
		<echo message="Modifying caTISSUECore MySQL specific Configuration File..." />

		<replace dir="${temp.dir}/catissuecore-properties" propertyfile="caTissueInstall.properties">
			<include name="upt.hibernate.cfg.xml" />
			<include name="catissuecore.hibernate.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${mysql.dialect.string}" />
		</replace>
		<!-- added for csm orm1.cfg.xml file-->
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
			<include name="orm1.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}" />
		</replace>

		<replace dir="${temp.dir}" propertyfile="caTissueInstall.properties">
			<include name="catissuecore-ds.xml" />
			<include name="login-config.xml" />
			<replacefilter token="@@databaseurl@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@pasword@@" value="${database.password}" />
			<replacefilter token="@@databasedriver@@" value="${mysql.driver.string}" />
		</replace>

		<!-- change ${csm.dir} to {catissuecore} because using one war only -->
		<!-- Configuring CSM hibernate property File-->
		<!--
		<replace dir="${temp.dir}/catissuecore/WEB-INF" propertyfile="caTissueInstall.properties"> 
			<include name="classes/hibernate.properties"/>
			<include name="conf/hibernate.properties"/>
			<replacefilter 
				token="hibernate.dialect org.hibernate.dialect.MySQLDialect" 
			  	value="hibernate.dialect ${mysql.dialect.h3.string}"/>
			<replacefilter 
				token="hibernate.connection.driver_class com.mysql.jdbc.Driver" 
			  	value="hibernate.connection.driver_class ${mysql.driver.string}"/>
			
			<replacefilter 
				token="hibernate.connection.url jdbc:mysql://ps0154:3306/catissuecore_mysql" 
			  	value="hibernate.connection.url jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
			<replacefilter 
				token="hibernate.connection.username catissue_core" 
			  	value="hibernate.connection.username ${database.username}"/>
			<replacefilter 
				token="hibernate.connection.password catissue_core" 
			  	value="hibernate.connection.password ${database.password}"/>
		</replace>
		-->
		<replace file="${temp.dir}/catissuecore/WEB-INF/classes/hibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
		</replace>
		<replace file="${temp.dir}/catissuecore/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensions/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensionsjar/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
		</replace>
	
	</target>

	<!--Modify Configuration For Oracle-->
	<target name="oracle_config">
		<echo message="Modifying caTISSUECore Oracle specific Configuration File..." />
		<replace dir="${temp.dir}/catissuecore-properties" propertyfile="caTissueInstall.properties">
			<include name="upt.hibernate.cfg.xml" />
			<include name="catissuecore.hibernate.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${oracle.dialect.string}" />
		</replace>

		<!-- added for csm orm1.cfg.xml file-->
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
			<include name="orm1.cfg.xml" />
			<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}" />
		</replace>

		<!-- Configuring Data Source File-->
		<replace dir="${temp.dir}" propertyfile="caTissueInstall.properties">
			<include name="catissuecore-ds.xml" />
			<include name="login-config.xml" />
			<replacefilter token="@@databaseurl@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@pasword@@" value="${database.password}" />
			<replacefilter token="@@databasedriver@@" value="${oracle.driver.string}" />
		</replace>

		<!-- change ${csm.dir} to {catissuecore} because using one war only -->
		<!-- Configuring CSM hibernate property File-->
		<!--
		<replace dir="${temp.dir}/catissuecore/WEB-INF" propertyfile="caTissueInstall.properties"> 
			<include name="classes/hibernate.properties"/>
			<include name="conf/hibernate.properties"/>
			<replacefilter 
				token="hibernate.dialect org.hibernate.dialect.MySQLDialect" 
			  	value="hibernate.dialect ${oracle.dialect.h3.string}"/>
			<replacefilter 
				token="hibernate.connection.driver_class com.mysql.jdbc.Driver" 
			  	value="hibernate.connection.driver_class ${oracle.driver.string}"/>
			
			<replacefilter 
				token="hibernate.connection.url jdbc:mysql://ps0154:3306/catissuecore_mysql" 
			  	value="hibernate.connection.url jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
			<replacefilter 
				token="hibernate.connection.username catissue_core" 
			  	value="hibernate.connection.username ${database.username}"/>
			<replacefilter 
				token="hibernate.connection.password catissue_core" 
			  	value="hibernate.connection.password ${database.password}"/>
		</replace>
		-->
		<replace file="${temp.dir}/catissuecore/WEB-INF/classes/hibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
		</replace>
		
		<replace file="${temp.dir}/catissuecore/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensions/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
		
		<replace file="${temp.dir}/dynamicExtensionsjar/DynamicExtensionsHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
			<replacefilter token="&lt;!-- My sql settings -->" value="&lt;!-- My sql settings " />
			<replacefilter token="&lt;!-- My sql settings end -->" value="My sql settings end -->" />
		</replace>
	

	</target>
	<!--Server clean-up-->
	
	<target name="clean_server" description="deletes the WAR file and cache from server ">
		<delete file="${jboss.server.url}/deploy/catissuecore.war" />
		<delete file="${jboss.server.url}/deploy/dynamicExtensions.war" />
		<delete file="${jboss.server.url}/deploy/caTissuePrintWebService.war" />
		<delete file="${jboss.server.url}/deploy/pathologySCG.war" />
		<delete file="${jboss.server.url}/deploy/pathologySpecimen.war" />
		<delete file="${jboss.server.url}/deploy/CA.war" />
		<delete file="${jboss.server.url}/deploy/deintegration.war" />
		<mkdir dir="${jboss.server.url}/work"/>
		<mkdir dir="${jboss.server.url}/tmp"/>
		<delete includeemptydirs="true">
			<fileset dir="${jboss.server.url}/work">
				<include name="**/*" />
			</fileset>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${jboss.server.url}/tmp">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<!--Buid New WAR File-->
	<target name="build_war">
		<echo message="Creating New Web Application Archieve File..." />
		<delete file="${temp.dir}/catissuecore.war" />
		<delete file="${temp.dir}/dynamicExtensions.war" />
		<delete file="${temp.dir}/caTissuePrintWebService.war" />
		<delete file="${temp.dir}/dynamicExtensions.jar" />
		

		<!-- delete file="${base.dir}/MANIFEST.MF"/>
		
		<manifest file="${base.dir}/MANIFEST.MF"> 	
	        <attribute name="Built-By" value="${user.name}"/>
	     	<attribute name="Version" value="${application.name} ${application.version}"/>
	     	<attribute name="CSM-Version" value="${csm.version}"/>
	     	<attribute name="caCore-Version" value="${cacore.version}"/>
	     	<attribute name="Build-on" value="${TODAY}"/>
	    </manifest -->	
		<jar destfile="${temp.dir}/dynamicExtensions.jar" basedir="${temp.dir}/dynamicExtensionsjar" />
				
		<copy file="${temp.dir}/dynamicExtensions.jar" todir="${temp.dir}/catissuecore/WEB-INF/lib" overwrite="true" />
		<copy file="${temp.dir}/dynamicExtensions.jar" todir="${temp.dir}/catissuecore/Applet" overwrite="true" />
		<copy file="${temp.dir}/dynamicExtensions.jar" todir="${temp.dir}/catissuecore/WEB-INF/Applet" overwrite="true" />
		
		<!-- antcall target="copydeletedjars"/ -->
		<war destfile="${temp.dir}/catissuecore.war" 
			webxml="${temp.dir}/catissuecore/WEB-INF/web.xml" manifest="${base.dir}/MANIFEST.MF">
			<fileset dir="${temp.dir}/catissuecore">
				<exclude name="**/*build*" />
				<exclude name="**/*WEB-INF*" />
				<exclude name="**/*servlet.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/WEB-INF/lib/log4j-1.2.9.jar*" />
				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/.*" />
				<exclude name="**/*.sql" />
				<exclude name="**/CVS*" />
				<exclude name="**/jta.jar" />			
			</fileset>
		</war>

		<copy file="${temp.dir}/catissuecore/WEB-INF/classes/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/dynamicExtensions/WEB-INF/classes" overwrite="true" />

		<war destfile="${temp.dir}/dynamicExtensions.war" webxml="${temp.dir}/dynamicExtensions/WEB-INF/web.xml">
			<fileset dir="${temp.dir}/dynamicExtensions">
				<include name="**/**/**.*" />
			</fileset>
		</war>
		
		
			
		<war destfile="${temp.dir}/caTissuePrintWebService.war" webxml="${temp.dir}/caTissuePrintWebService/WEB-INF/web.xml">
					<fileset dir="${temp.dir}/caTissuePrintWebService">
						<include name="**/**/**.*" />
					</fileset>
		</war>

		<!-- change because using one war only -->
		<!--
		<delete file="${temp.dir}/catissuecorecsm.war"/>
		<war destfile="${temp.dir}/catissuecorecsm.war" webxml="${csm.dir}/WEB-INF/web.xml">
			<fileset dir="${csm.dir}"/>
		</war>
		-->
	</target>

	
	<target name="copydeletedjars">
	<delete >  

		<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
			<include name="backport-util-concurrent-3.0.jar" /> 
			<include name="c3p0-0.8.4.5.jar" />
			<include name="c3p0-0.8.5.2.jar" /> 
			<include name="castor-1.0.2.jar" /> 
			<include name="cglib-2.1.jar" /> 
			<include name="commons-collections-2.1.1.jar" />
			<include name="commons-collections-3.1.jar" /> 
			<include name="commons-discovery-0.2.jar" /> 
			<include name="commons-fileupload.jar" /> 
			<include name="commons-lang-2.1.jar" /> 
			<include name="commons-logging-1.0.4.jar" /> 
			<include name="dom4*.jar" /> 
			<include name="ehcache-1.1.jar" />
			<include name="ehcache-1.2.2.jar" /> 
			<include name="freemarker.jar" /> 
			<include name="jakarta-oro.jar" /> 
			<include name="uml-1.3.jar" /> 
			<include name="wsdl4j-1.5.1.jar" /> 
			<include name="xalan-2.4.0.jar" /> 
			<include name="p6spy.jar" /> 
			<include name="sdkClient.jar" /> 
			<include name="uuid-key-generator.jar" /> 
			<include name="wsdl4j.jar" /> 
			<include name="j2ee.jar" /> 
			<include name="caGrid-1.0-caDSR-client.jar" /> 
			<include name="caGrid-1.0-caDSR-common.jar" /> 
			<include name="caGrid-1.0-caDSR-stubs.jar" /> 
			<include name="caGrid-1.0-core.jar" /> 
			<include name="caGrid-1.0-data-common.jar" /> 
			<include name="caGrid-1.0-data-stubs.jar" /> 
			<include name="caGrid-1.0-data-utils.jar" /> 
			<include name="caGrid-1.0-fqp-client.jar" /> 
			<include name="caGrid-1.0-fqp-common.jar" /> 
			<include name="caGrid-1.0-fqp-stubs.jar" /> 
			<include name="caGrid-1.0-metadata-common.jar" /> 
			<include name="caGrid-1.0-metadata-security.jar" /> 
			<include name="caGrid-1.0-sdkQuery.jar" /> 
			<include name="caGrid-1.0-ServiceSecurityProvider-client.jar" /> 
			<include name="caGrid-1.0-ServiceSecurityProvider-common.jar" /> 
			<include name="jboss-common-jdbc-wrapper.jar"/>
			<include name="mysql-connector-java-3.1.13-bin.jar"/>
			<include name="ojdbc14.jar"/>
			<include name="boot.jar" /> 
			<include name="c3p0-0.9.0.jar" /> 
			<include name="catissuecore-client.jar" /> 
			<include name="experiment-client.jar" /> 
			<include name="jboss-client.jar" /> 
			<include name="junit-3.8.1.jar" /> 
			<include name="mockobjects-core-0.09.jar" /> 
			<include name="mysql-connector-java-5.0.8-bin.jar" /> 
			<include name="openide-util.jar" /> 
			<include name="acrobat-core.jar" />
		</fileset>		

	</delete>
</target>
	<!--Copy WAR and Configuration Files to JBOSS Directory-->
	<target name="copy_files">
		<echo message="Copying caTISSUECore Application Components..." />

		<copy todir="${jboss.server.url}/catissuecore-properties" overwrite="true">
			<fileset dir="${temp.dir}/catissuecore-properties">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${jboss.server.url}/deploy" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="catissuecore.war" />
				<include name="catissuecore-ds.xml" />
				<include name="catissuecorecsm.war" />
				<include name="dynamicExtensions.war" />
				<include name="caTissuePrintWebService.war" />
			</fileset>
		</copy>
		<replace dir="${jboss.server.url}/catissuecore-properties">
			<include name="ApplicationSecurityConfig.xml" />
			<replacefilter token="@@hibernate-config-file@@" value="${jboss.server.url}/catissuecore-properties/catissuecore.hibernate.cfg.xml" />
		</replace>
		<copy todir="${jboss.server.url}/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="${mysql.lib}" />
				<!-- include name="${oracle.lib}" / -->
			</fileset>
		</copy>
		<copy todir="${jboss.home.dir}/bin" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="DAOConfig.xml" />
			</fileset>
		</copy>
		<delete file="${jboss.server.url}/lib/oracledriver.jar" />
	</target>
	
	<!--Target call for both fresh deployment and database creation-->
	<target name="deploy_all">
		<antcall target="deploy_app" />
		<antcall target="deploy_db" />
		<antcall target="server_security" />
	</target>
	
	<!--Target for checking server security -->
		<target name="server_security">
			<copy file="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/web.xml"
						tofile="${temp.dir}/web.xml" >
			</copy>
				<concat destfile="${temp.dir}/web1.xml" > 
					<filelist dir="${temp.dir}" files="web.xml"/>
						<filterchain>
							<headfilter lines="83"/>
						</filterchain>
				</concat>
				<concat destfile="${temp.dir}/web2.xml" > 
					<filelist dir="${temp.dir}" files="web.xml"/>
						<filterchain>
							<headfilter lines="27" skip="83"/>
								<tokenfilter>
								 	<replacestring from="-->" to=""/>
								</tokenfilter>
								<tokenfilter>
								 	<replacestring from="console." to="console.-->"/>
								</tokenfilter> 		 		 	
						</filterchain>
			     </concat>
				 <concat destfile="${temp.dir}/web1.xml" append="true"> 
					 <filelist dir="${temp.dir}" files="web2.xml"/>
				 </concat>
			<copy file="${temp.dir}/web1.xml" tofile="${temp.dir}/web.xml" overwrite="true"/>
			<copy file="${temp.dir}/web.xml" 
						tofile="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/web.xml" overwrite="true"/>
					
			<copy file="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/jboss-web.xml"
						tofile="${temp.dir}/jboss-web.xml" >
			</copy>
				<concat destfile="${temp.dir}/web3.xml" > 
					<filelist dir="${temp.dir}" files="jboss-web.xml"/>
						<filterchain>
							<headfilter lines="7" />
								<tokenfilter>
									<replacestring from="-->" to=""/>
								</tokenfilter>
								<tokenfilter>
									<replacestring from="users." to="users.-->"/>
								</tokenfilter> 		 		 	
						</filterchain>
				</concat>
			<copy file="${temp.dir}/web3.xml" tofile="${temp.dir}/jboss-web.xml" overwrite="true"/>
			<copy file="${temp.dir}/jboss-web.xml" 
						tofile="${jboss.home.dir}/server/default/deploy/jmx-console.war/WEB-INF/jboss-web.xml" overwrite="true"/>			
		</target>
	
		<!--Target for fresh deployment of caTissue application-->
	<target name="deploy_app">
		<antcall target="clean_server" />
		<antcall target="assert" />
		<delete dir="${temp.dir}" />
		<antcall target="init" />
		<antcall target="configure_war" />
		<antcall target="adopter_configuration" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="mysql_config" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="oracle_config" />
					
				</then>
			</elseif>
		</if>
		<!-- configure titli.properties -->
		<!-- <antcall target="configure_titli" /> -->
		
		<!-- Integrate shippingtracking application, if shippingtracking.zip present in root -->
		<antcall target="st_integrate_app" />
		
		<antcall target="build_war" />
		<antcall target="copy_files" />
		<replace file="${basedir}/caTissueSuite_Client/conf/remoteService.xml">
           <replacefilter token="@@HOST@@" value="${jboss.server.host}" />
           <replacefilter token="@@PORT@@" value="${jboss.server.port}" />
        </replace>
		<antcall target="send_mail" />
		<antcall target="config_jboss_files" />
		
		<antcall target="CopyCAModelWars"/>	
		<delete dir="${temp.dir}" />				
	</target>
	
	<target name="CopyCAModelWars">
		<!--
		<antcall target="modifyDEWars">
			<param name="warName" value="CA"/>
		</antcall>
		<antcall target="modifyDEWars">
			<param name="warName" value="pathologySCG"/>
		</antcall>
		<antcall target="modifyDEWars">
			<param name="warName" value="pathologySpecimen"/>
		</antcall>

		<antcall target="modifyDEWars">
			<param name="warName" value="deintegration"/>
		</antcall>
		-->
	</target>
	
	<target name="modifyDEWars">
		<echo>Modifying ${warName}.war....</echo>
			<unwar src="${basedir}/${warName}.war" dest="${temp.dir}/${warName}" />
			<copy file="${basedir}/DE_conf/hibernate.properties" todir="${temp.dir}/${warName}/WEB-INF/classes" overwrite="true" />
			<if>
				<equals arg1="mysql" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/${warName}/WEB-INF/classes">
						<include name="hibernate.properties" />
						<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}" />
						<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver" />
						<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
					</replace>
				</then>

				<elseif>
					<equals arg1="oracle" arg2="${database.type}" />
					<then>
						<replace dir="${temp.dir}/${warName}/WEB-INF/classes">
							<include name="hibernate.properties" />
							<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}" />
							<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}" />
							<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
						</replace>
					</then>
				</elseif>
			</if>
			<replace dir="${temp.dir}/${warName}/WEB-INF/classes">
				<include name="hibernate.properties" />
				<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}" />
				<replacefilter token="${token.database.password}" value="${database.password}" />

			</replace>

			<war destfile="${temp.dir}/${warName}.war" webxml="${temp.dir}/${warName}/WEB-INF/web.xml">
				<fileset dir="${temp.dir}/${warName}">
					<include name="**/**/**.*" />
				</fileset>
			</war>
		<echo>Copying ${warName}.war....</echo>
		    <copy todir="${jboss.server.url}/deploy" file="${temp.dir}/${warName}.war" overwrite="true" />
			<delete file="${temp.dir}/${warName}.war" />
			<delete includeemptydirs="true">
				<fileset dir="${temp.dir}/${warName}">
					<include name="**/*" />
				</fileset>
			</delete>
		
		
			<delete dir="${temp.dir}/${warName}" />
		</target>
	
	<!--Target for deployment with jboss config-->
	<target name="config_jboss_files">
		<copy todir="${jboss.server.url}/conf" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="login-config.xml" />
			</fileset>
		</copy>

		<replace dir="${temp.dir}">
			<include name="properties-service.xml" />
			<replacefilter token="@@app-security-file@@" value="${jboss.server.url}/catissuecore-properties/ApplicationSecurityConfig.xml" />
			<replacefilter token="@@app-properties-file@@" value="${jboss.server.url}/catissuecore-properties/caTissueCore_Properties.xml" />
			<replacefilter token="@@app-dynamicuixml-file@@" value="${jboss.server.url}/catissuecore-properties/dynamicUI.xml" />
		</replace>


		<copy todir="${jboss.server.url}/deploy" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="properties-service.xml" />
			</fileset>
		</copy>
		<delete file="${jboss.server.url}/lib/hibernate2.jar" />
	</target>
	
	<!--Target for Database Creation-->
	<target name="deploy_db">		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="deploy_db_mysql" />
				
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="deploy_db_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<antcall target="firstUser" />	
		<!-- shippingtracking db -->
		<antcall target="st_deploy_db" />
		
	</target>
	
	<!--MySQL Database Creation -->
	<target name="deploy_db_mysql">
		<echo message="Initializing MySQL Database for caTissue Suite v1.1 Application..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${mysql.sql.dir}/catissuecore.sql" />
			<transaction src="${mysql.sql.dir}/InitDB_CreateTable.sql" />
			<transaction src="${common.sql.dir}/initDB_Insert_Common.sql" />
			<transaction src="${common.sql.dir}/AlterTable.sql" />
			<transaction src="${common.sql.dir}/CDE_DummyData_Common.sql" />
			<transaction src="${mysql.sql.dir}/csm_catissuecore.sql" />
			<transaction src="${common.sql.dir}/insert_default_data.sql" />
			<transaction src="${common.sql.dir}/indexes.sql" />
			<transaction src="${mysql.sql.dir}/dynamicextension.sql" />
			<transaction src="${mysql.sql.dir}/query/metadata_schema_script.sql" /> 
			<transaction src="${mysql.sql.dir}/query/query_schema_script.sql" />
			<transaction src="${mysql.sql.dir}/query/caB2B Table Generation Script.sql" />
			<!-- <transaction src="${mysql.sql.dir}/query/csm.sql" /> -->
			<transaction src="${dbupgrade.sql.dir}/MySql/CAModel.sql"/>

			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<antcall target="CAModel_import_data" />
		<antcall target="temp_update_metadata_for_clob_support_mysql" />
		<antcall target="upgrade_db_demodel_mysql" />
		<antcall target="update_metadata_for_model_changes" />
	</target>
	
	<target name="temp_update_metadata_for_clob_support_mysql">
		<echo message="Upgrading MySQL Database for supporting query on clob type attributes..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${mysql.sql.dir}/query/temp_update_metadata.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<target name="temp_update_metadata_for_clob_support_oracle">
		<echo message="Upgrading Oracle Database for supporting query on clob type attributes..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/temp_update_metadata.sql" />
			<transaction>commit;</transaction>
			<classpath>
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
			</classpath>
		</sql>
		</target>
	
	<!--Oracle Database Creation -->
	<target name="deploy_db_oracle">
		<echo message="Initializing Oracle Database for caTissue Suite v1.1 Application..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/catissuecore.sql" />
			<transaction src="${oracle.sql.dir}/InitDB_CreateTable.sql" />
			<transaction src="${common.sql.dir}/initDB_Insert_Common.sql" />
			<transaction src="${oracle.sql.dir}/AlterTable.sql" />
			<transaction src="${common.sql.dir}/CDE_DummyData_Common.sql" />
			<transaction src="${oracle.sql.dir}/CSM_Create_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/insert_default_data.sql" />
			<transaction src="${common.sql.dir}/indexes.sql" />
			<transaction src="${oracle.sql.dir}/dynamicextension.sql" />
			<transaction src="${oracle.sql.dir}/query/caB2B Table Generation Script.sql" />
			<transaction src="${oracle.sql.dir}/query/metadata_schema_script.sql" /> 
			<transaction src="${oracle.sql.dir}/query/query_schema_script.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>

		<antcall target="insertQueryMetadata" />   

		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle" delimiter="/" delimitertype="row">
			<transaction src="${oracle.sql.dir}/CSM_Trigger_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/DBUtility.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/CSM_InsertData_Oracle.sql" />
			<transaction src="${oracle.sql.dir}/CSM_AddConstraints_Oracle.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<antcall target="temp_update_metadata_for_clob_support_oracle" />
		<antcall target="upgrade_db_demodel_oracle" />
		<antcall target="update_metadata_for_model_changes" />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/dropDESequence.SQL" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<transaction src="${oracle.sql.dir}/query/resetDESequence.SQL" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>	
	
	</target>

	<target name="insertQueryMetadata">
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction  src="${dbupgrade.sql.dir}/Oracle/CAModel.sql"/>
			<transaction src="${oracle.sql.dir}/query/DisableConstraints.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>	
		
		<delete includeemptydirs="true">
			<fileset dir="${dbupgrade.sql.dir}/Oracle/CAModelCTLs">
				<include name="**/*" />
			</fileset>
		</delete>
		
		<antcall target="CAModel_import_data" />
		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">	
			<transaction src="${oracle.sql.dir}/query/enableCons.sql" />
			<transaction src="${oracle.sql.dir}/query/UpdateTable.sql" />
			<!-- <transaction src="${oracle.sql.dir}/query/csm_oracle.sql" /> -->
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction>
			DROP SEQUENCE DE_ATTR_REC_SEQ ;                              
			DROP SEQUENCE DE_COLL_ATTR_REC_VALUES_SEQ ;        
			DROP SEQUENCE DE_FILE_ATTR_REC_VALUES_SEQ ;        
			DROP SEQUENCE DE_OBJECT_ATTR_REC_VALUES_SEQ ;      
			DROP SEQUENCE DYEXTN_ABSTRACT_METADATA_SEQ ;        
			DROP SEQUENCE DYEXTN_ASSO_DISPLAY_ATTR_SEQ ;       
			DROP SEQUENCE DYEXTN_ATTRIBUTE_TYPE_INFO_SEQ ;     
			DROP SEQUENCE DYEXTN_CONTAINER_SEQ ;               
			DROP SEQUENCE DYEXTN_CONTROL_SEQ ;                 
			DROP SEQUENCE DYEXTN_DATABASE_PROPERTIES_SEQ ;     
			DROP SEQUENCE DYEXTN_DATA_ELEMENT_SEQ ;            
			DROP SEQUENCE DYEXTN_ENTITY_MAP_CONDN_SEQ ;        
			DROP SEQUENCE DYEXTN_ENTITY_MAP_SEQ ;              
			DROP SEQUENCE DYEXTN_ENTITY_RECORD_SEQ ;           
			DROP SEQUENCE DYEXTN_FILE_EXTN_SEQ ;               
			DROP SEQUENCE DYEXTN_FORM_CONTEXT_SEQ ;            
			DROP SEQUENCE DYEXTN_PERMISSIBLEVAL_SEQ ;          
			DROP SEQUENCE DYEXTN_ROLE_SEQ ;                    
			DROP SEQUENCE DYEXTN_RULE_PARAMETER_SEQ ;          
			DROP SEQUENCE DYEXTN_RULE_SEQ ;                                   
			DROP SEQUENCE DYEXTN_SEMANTIC_PROPERTY_SEQ ;        
			DROP SEQUENCE DYEXTN_TAGGED_VALUE_SEQ ;            
			DROP SEQUENCE DYEXTN_VALUE_DOMAIN_SEQ ;            
			DROP SEQUENCE DYEXTN_VIEW_SEQ ;
			</transaction>
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${oracle.sql.dir}/query/createDESequence.SQL" />
		</sql>
	</target>

	<!--Target for Database Upgrade from 1.2 to suite-->
	<target name="upgrade_all" depends="upgrade_app, upgrade_db">
	</target>
	
	<target name="upgrade_app" depends="deploy_app">
	</target>
	
	<target name="upgrade_db">
		<antcall target="upgrade_from_Suite1.0_to_1.1" />
		<antcall target="update_metadata_for_model_changes" />
	</target>
	
	<target name="upgrade_db_from_core_1.2.2_to_suite_1.0_mysql">
	
		<echo message="Upgrading MySQL Database from 1.2.2 to 1.0 ..." />
			<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
							
				<transaction src="${dbupgrade.sql.dir}/MySql/DBUpgrade_1.2_to_CatissueSuite.sql" />
				<transaction src="${dbupgrade.sql.dir}/MySql/SCG_DB_changes.sql" />
				<transaction src="${mysql.sql.dir}/dynamicextension.sql" />
				<transaction src="${mysql.sql.dir}/query/query_schema_script.sql" />
				<transaction src="${mysql.sql.dir}/query/caB2B Table Generation Script.sql" />
				<transaction  src="${dbupgrade.sql.dir}/MySql/CAModel.sql"/>
				<transaction>commit;</transaction>
				<classpath>
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
				</classpath>
			</sql>
	
	</target>
	
	<target name="upgrade_db_from_core_1.2.2_to_suite_1.0_oracle">
	
		<echo message="Upgrading Oracle Database from 1.2.2 to 1.0 ..." />
			<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
				<transaction src="${dbupgrade.sql.dir}/Oracle/DBUpgrade_1.2_to_CatissueSuite.sql" />
				<transaction src="${dbupgrade.sql.dir}/Oracle/SCG_DB_changes.sql" />
				<transaction src="${oracle.sql.dir}/dynamicextension.sql" />
				<transaction src="${oracle.sql.dir}/query/query_schema_script.sql" />
				<transaction src="${oracle.sql.dir}/query/caB2B Table Generation Script.sql" />
				<transaction  src="${dbupgrade.sql.dir}/Oracle/CAModel.sql"/>
				
				<transaction>commit;</transaction>
				<classpath>
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
				</classpath>
			</sql>
	
	</target>
	
	
	<target name="upgrade_db_from_core_1.2.2_to_suite_1.0">
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_from_core_1.2.2_to_suite_1.0_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="upgrade_db_from_core_1.2.2_to_suite_1.0_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>
	
	<target name="upgrade_db_from_core_1.2.2_to_suite_1.1">
		
		<antcall target="upgrade_db_from_core_1.2.2_to_suite_1.0" />
		<antcall target="upgrade_db" />
	
	</target>
	

	<target name="upgrade_from_Suite1.0_to_1.1">
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_mysql_from_Suite1.0_to_1.1" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="upgrade_oracle_from_Suite1.0_to_1.1" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>
		
	
	<!--MySQL Database Upgradation -->
	<target name="upgrade_mysql_from_Suite1.0_to_1.1">
		<echo message="Upgrading MySQL Database for caTISSUE Suite Application ..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${dbupgrade.sql.dir}/MySql/DBUpgrade_Suite_1.0_to_1.1.sql" />
			<!--
			<transaction src="${dbupgrade.sql.dir}/MySql/query_Suite1.0_to_Suite1.1.sql" />
			-->

			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<antcall target="temp_update_metadata_for_clob_support_mysql" />
		<antcall target="upgrade_db_demodel_mysql" />

	</target>

	<target name="upgrade_db_mysql">
		<antcall target="upgrade_from_Suite1.0_to_1.1" />
		<antcall target="update_metadata_for_model_changes" />
	</target>
	
	
	<!--Oracle Database Upgradation -->
	<target name="upgrade_oracle_from_Suite1.0_to_1.1">
		<echo message="Upgrading Oracle Database for caTISSUE Suite Application ..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${dbupgrade.sql.dir}/Oracle/DBUpgrade_Suite_1.0_to_1.1.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<antcall target="upgrade_db_demodel_oracle" />

	</target>


	<target name="upgrade_db_oracle">
		<antcall target="upgrade_from_Suite1.0_to_1.1" />
		<antcall target="update_metadata_for_model_changes" />
	</target>
	

	<!-- DE Metadata Upgradation -->
	<target name="update_metadata_for_model_changes">
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
		<delete file="${temp.dir}/catissuecore/WEB-INF/lib/mmtxProject.jar" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="update_metadata_for_model_changes_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="update_metadata_for_model_changes_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<delete dir="${temp.dir}" />
	</target>
	
	<target name="update_metadata_for_model_changes_mysql">
		<echo message="Updating DE Metadata for model changes (mysql)....." />
		<java classname="edu.wustl.catissuecore.querysuite.metadata.UpdateMetadata"  fork="true" maxmemory="512m">
			<classpath location="${temp.dir}/catissuecore/WEB-INF/classes" />
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${mysql.driver.string}"/>
		</java>
	</target>
		
	<target name="update_metadata_for_model_changes_oracle">
		<echo message="Updating DE Metadata for model changes (oracle)....." />
		<java classname="edu.wustl.catissuecore.querysuite.metadata.UpdateMetadata"  fork="true" maxmemory="512m">
			<classpath location="${temp.dir}/catissuecore/WEB-INF/classes" />
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${oracle.driver.string}"/>
		</java>
	</target>
	
	<!--Data import for CAModel -->
	<target name="CAModel_import_data">
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
		<delete file="${temp.dir}/catissuecore/WEB-INF/lib/mmtxProject.jar" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="CAModel_import_data_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="CAModel_import_data_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<delete dir="${temp.dir}" />
	</target>
	
	<target name="CAModel_import_data_mysql">
		<echo message="Importing CA models data for caTISSUE Suite Application to MySQL Database ..." />
		<java classname="edu.wustl.common.util.global.AutomateImport"  fork="true" maxmemory="512m">
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${mysql.driver.string}"/>
			<arg value="import"/>
			<arg value="${dbupgrade.sql.dir}/Common/dumpFileColumnInfo.txt"/>
			<arg value="${basedir}/SQL/DBUpgrade/Common/CAModelCSVs/"/>
		</java>
	</target>
	
	<target name="CAModel_import_data_oracle">
		<echo message="Importing CA models data for caTISSUE Suite Application to Oracle Database ..." />
		<java classname="edu.wustl.common.util.global.AutomateImport"  fork="true" >
			
			<classpath refid="temp.classpath" />
			
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${oracle.driver.string}"/>
			<arg value="import"/>
			<arg value="${dbupgrade.sql.dir}/Common/dumpFileColumnInfo.txt"/>
			<arg value="${basedir}/SQL/DBUpgrade/Common/CAModelCSVs/"/>
			<arg value="${basedir}/SQL/DBUpgrade/Oracle/CAModelCTLs/"/>
			<arg value="${oracle.tns.name}"/>
		</java>
	</target>
		
	<!--Data export for CAModel -->
	<target name="CAModel_export_data">
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
		<delete file="${temp.dir}/catissuecore/WEB-INF/lib/mmtxProject.jar" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="CAModel_export_data_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="CAModel_export_data_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<delete dir="${temp.dir}" />
	</target>
	
	<target name="CAModel_export_data_mysql">
		<echo message="Exporting data of CA models for MySQL Database..." />
		<java classname="edu.wustl.common.util.global.AutomateImport" fork="true">
			<classpath refid="temp.classpath" />
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${mysql.driver.string}"/>
			<arg value="export"/>
			<arg value="${dbupgrade.sql.dir}/Common/dumpFileColumnInfo.txt"/>
			<arg value="${basedir}/SQL/DBUpgrade/Common/CAModelCSVs/"/>
		</java>
		<delete dir="${temp.dir}" />
	</target>
	
	<target name="metadata_cleanup" description="To remove the corrupted path from the database.">
			<echo message="Cleaning up Corrupted paths...." />
			<delete dir="${temp.dir}" failonerror="false"/>
	 		<mkdir dir="${temp.dir}" />
			<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
			<delete file="${temp.dir}/catissuecore/WEB-INF/lib/mmtxProject.jar" />
			<if>
				<equals arg1="mysql" arg2="${database.type}" />
				<then>
					<java classname="edu.wustl.common.util.global.QueryMetadataCleanup" fork="true">
						<classpath refid="temp.classpath" />
						<arg value="${database.username}"/>
						<arg value="${database.password}"/>
						<arg value="${mysql.driver.string}"/>
						<arg value="jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
					</java>
				</then>
				<elseif>
					<equals arg1="oracle" arg2="${database.type}" />
					<then>
						<java classname="edu.wustl.common.util.global.QueryMetadataCleanup" fork="true">
							<classpath refid="temp.classpath" />
							<arg value="${database.username}"/>
							<arg value="${database.password}"/>
							<arg value="${oracle.driver.string}"/>
							<arg value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
						</java>
					</then>
				</elseif>
				<else>
					<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
				</else>
			</if>
			<delete dir="${temp.dir}" />
	</target>
	<target name="CAModel_export_data_oracle">
		<echo message="Exporting data of CA models for Oracle Database..." />
		<java classname="edu.wustl.common.util.global.AutomateImport" fork="false">
			<classpath refid="temp.classpath" />
			<arg value="${database.host}"/>
			<arg value="${database.port}"/>
			<arg value="${database.type}"/>
			<arg value="${database.name}"/>
			<arg value="${database.username}"/>
			<arg value="${database.password}"/>
			<arg value="${oracle.driver.string}"/>
			<arg value="export"/>
			<arg value="${dbupgrade.sql.dir}/Common/dumpFileColumnInfo.txt"/>
			<arg value="${basedir}/SQL/DBUpgrade/Common/CAModelCSVs/"/>
			<arg value="${basedir}/SQL/DBUpgrade/Oracle/CAModelCTLs/"/>
			<arg value="${oracle.tns.name}"/>
		</java>
	</target>
	
	<!--Send mail to user-->
	<target name="send_mail">
		<echo message="Sending mail to: ${email.administrative.emailAddress}" />
		<echo message="Sending mail from: ${email.sendEmailFrom.emailAddress}" />
		<mail mailhost="${email.mailServer}" subject="caTissueSuite v1.1 Successfully Deployed" encoding="plain" failonerror="false">
			<from address="${email.sendEmailFrom.emailAddress}" />
			<to address="${email.administrative.emailAddress}" />
			<message>
Dear caTissueSuite Administrator,
	
	This is to validate that caTissueSuite application has been installed at 
the following location: ${jboss.home.dir}		
    
	To complete the deployment, you have to now perform the post installation 
steps described in section "Post Installation Configuration" in the deployment 
guide (caTissueSuite v1.1 Deployment Guide.doc). 

	Once you have completed deployment, you should be able to login with the following 
details:			
URL: http://localhost:${jboss.server.port}/catissuecore 
Username:${first.admin.emailAddress}
Password:${first.admin.password}

Thanking You,
-caTissue Suite				
			</message>
		</mail>
		<echo>
			Please check the Email of ${first.admin.emailAddress}.
			If the Deployment mail is not received please check your 
			email.administrative.emailAddress and email.sendEmailFrom.emailAddress 
			properties in caTissueInstall.properties and Re-deploy the Application.
		</echo>
	</target>

	<!--First User Creation. Mandar : 02-May-2006 -->
	<path id="temp.classpath">
		<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="firstUser">
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>		
			<then>
				<antcall target="firstUser_mysql"/>
			</then>
			<elseif>	
				<equals arg1="oracle" arg2="${database.type}"/>		
				<then>
					<antcall target="firstUser_oracle"/>
				</then>
			</elseif>
		</if>
	</target>
	
	<target name="firstUser_oracle">
		<echo message="Encoding Password..."/>
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
	
		<java classname="edu.wustl.common.util.global.PasswordManager" fork="true">
			
			<classpath refid="temp.classpath" />
			
			<arg value="${base.dir}/catissuetmp.txt"/>
			<arg value="${first.admin.password}"/>
		</java>
		
		<property file="${base.dir}/catissuetmp.txt"/>
			<echo>
					Encoded Password ${first.admin.encodedPassword}
			</echo>

		<echo message="Modifying caTISSUECore SQL file for user information..."/>
			<copy file="${oracle.sql.dir}/createUser.sql" todir="${temp.dir}" overwrite="true"/>

			<replace dir="${temp.dir}" propertyfile="caTissueInstall.properties"> 
				<include name="createUser.sql"/>
				<replacefilter token="@@first.admin.department@@" value="${first.admin.department}"/>
				<replacefilter token="@@first.admin.institution@@" value="${first.admin.institution}"/>
				<replacefilter token="@@first.admin.cancerresearchgroup@@" value="${first.admin.cancerresearchgroup}"/>
				<replacefilter token="@@first.admin.emailAddress@@" value="${first.admin.emailAddress}"/>
				<replacefilter token="@@first.admin.encodedPassword@@" value="${first.admin.encodedPassword}"/>
			</replace>
			<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">					
					<transaction src="${temp.dir}/createUser.sql" />
					<transaction>commit;</transaction>
					<classpath>
						<fileset dir="${lib.dir}">
							<include name="*.jar" />
						</fileset>
					</classpath>
			</sql>		
		<delete dir="${temp.dir}"/>
	</target>
	
	<target name="firstUser_mysql">
		<echo message="Encoding Password..."/>
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore"/>
	
		<java classname="edu.wustl.common.util.global.PasswordManager" fork="true">
			
			<classpath refid="temp.classpath" />
			
			<arg value="${base.dir}/catissuetmp.txt"/>
			<arg value="${first.admin.password}"/>
		</java>
		
		<property file="${base.dir}/catissuetmp.txt"/>
			<echo>
					Encoded Password ${first.admin.encodedPassword}
			</echo>

		<echo message="Modifying caTISSUECore SQL file for user information..."/>
		<copy file="${mysql.sql.dir}/createUser.sql" todir="${temp.dir}" overwrite="true"/>

			<replace dir="${temp.dir}" propertyfile="caTissueInstall.properties"> 
				<include name="createUser.sql"/>
				<replacefilter token="@@first.admin.department@@" value="${first.admin.department}"/>
				<replacefilter token="@@first.admin.institution@@" value="${first.admin.institution}"/>
				<replacefilter token="@@first.admin.cancerresearchgroup@@" value="${first.admin.cancerresearchgroup}"/>
				<replacefilter token="@@first.admin.emailAddress@@" value="${first.admin.emailAddress}"/>
				<replacefilter token="@@first.admin.encodedPassword@@" value="${first.admin.encodedPassword}"/>
			</replace>
			<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
							<transaction src="${temp.dir}/createUser.sql" />
							<transaction>commit;</transaction>
							<classpath>
								<fileset dir="${lib.dir}">
									<include name="*.jar" />
								</fileset>
							</classpath>
			</sql>			
		<delete dir="${temp.dir}" />
	</target>

	<!-- Configure titli.properties according to properties in caTissueInstall.properties and other set properties -->
	<target name="configure_titli">
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
			<include name="titli.properties" />
			<replacefilter token="@@username@@" value="${database.username}" />
			<replacefilter token="@@password@@" value="${database.password}" />
			<replacefilter token="@@titliindexlocation@@" value="${jboss.server.url}/catissuecore-properties/titli-index" />
			<replacefilter token="@@databasename@@" value="${database.name}" />
			<replacefilter token="@@databasetype@@" value="${database.type}" />
		</replace>
		<!-- conditional configuration of database url and driver names -->
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name="titli.properties" />
					<replacefilter token="@@databasedriver@@" value="${mysql.driver.string}" />
					<replacefilter token="@@databaseurl@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
				<echo message="${database.type} ${database.name}" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes" propertyfile="caTissueInstall.properties">
						<include name="titli.properties" />
						<replacefilter token="@@databaseurl@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
						<replacefilter token="@@databasedriver@@" value="${oracle.driver.string}" />
					</replace>
					<echo message="${database.type} ${database.name}" />
				</then>
			</elseif>
		</if>
	</target>

	<property name="filename" value="" />
	<property name="hookentity" value="" />
	<property name="mainContainerList" value="" />
	<property name="condition" value="" />
	<property name="package" value="" />

	<target name="import_xmi">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />
			</fileset>
		</delete>

		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore" />

		<copy file="${base.dir}/DE_conf/hibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true" />
		<copy file="${base.dir}/DE_conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true" />

		<echo>Configuring logger ...</echo>
		<antcall target="configure_log4j" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}" />
					<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver" />
					<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}" />
						<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}" />
						<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
				</then>
			</elseif>
		</if>
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}" />
			<replacefilter token="@@DATABASE_PASSWORD@@" value="${database.password}" />
			<!--<replacefilter token="@@DATABASE_NAME@@" value="${database.name}"/>  -->
		</replace>

		<java classname="edu.wustl.catissuecore.annotations.xmi.ImportXmi" fork="true">
			<arg value="${filename}" />
			<arg value="${hookentity}" />
			<arg value="${mainContainerList}" />
			<arg value="${package}" />
			<arg value="${condition}" />
			
			<classpath>
				<pathelement location="${temp.dir}/catissuecore/WEB-INF/classes" />
				<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
						<include name="*.jar" />
				</fileset>
			</classpath>
		</java>

		<delete includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

<!-- XMI EXPORT-->
	<property name="groupname" value="" />
	<property name="version" value="" />
	<target name="export_xmi">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />
			</fileset>
		</delete>

		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore" />

		<copy file="${base.dir}/DE_conf/hibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true" />
		<copy file="${base.dir}/DE_conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true" />
		
		<echo>Configuring logger ...</echo>
		<antcall target="configure_log4j" />
		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}" />
					<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver" />
					<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}" />
						<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}" />
						<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
				</then>
			</elseif>
		</if>
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}" />
			<replacefilter token="${token.database.password}" value="${database.password}" />
			<!--<replacefilter token="@@DATABASE_NAME@@" value="${database.name}"/>  -->
		</replace>

		<java classname="edu.wustl.catissuecore.annotations.xmi.XMIExporter" fork="true" maxmemory="1024m">
			<arg value="${groupname}" />
			<arg value="${filename}" />
			<arg value="${version}" />
			<classpath>
				<pathelement location="${temp.dir}/catissuecore/WEB-INF/classes" />
				<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
					<exclude name="commons-lang-1.0.1.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>

		<delete includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>
	
	<target name="deploy_gate" depends="assertforgate">		
		<echo message="Deploying gate...." />
		<unzip src="gate.zip" dest="${jboss.server.url}/deploy/gate.war" /> 
		<if>
			<equals arg1="${jboss.container.secure}" arg2="yes" />
			<then>
				<replace file="${jboss.server.url}/deploy/gate.war/gate_3_1/application/plugins/caTIES/creole.xml">
					<replacefilter token="@@HOST:PORT@@" value="https://${jboss.server.host}:${jboss.server.port}" />
					<replacefilter token="@@MMTX_HOME@@" value="${caties.mmtx.home}" />
				</replace>
			</then>
			<else>
				<replace file="${jboss.server.url}/deploy/gate.war/gate_3_1/application/plugins/caTIES/creole.xml">
					<replacefilter token="@@HOST:PORT@@" value="http://${jboss.server.host}:${jboss.server.port}" />
					<replacefilter token="@@MMTX_HOME@@" value="${caties.mmtx.home}" />
				</replace>
			</else>
		</if>
	</target>
	
	<target name="assertforgate">
		<if>
			<equals arg1="" arg2="${caties.mmtx.home}" />
			<then>
				<fail message="The property 'caties.mmtx.home' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.home.dir}" />
			<then>
				<fail message="The property 'jboss.home.dir' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.server.host}" />
			<then>
				<fail message="The property 'jboss.server.host' can not be empty" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.server.port}" />
			<then>
				<fail message="The property 'jboss.server.port' can not be empty" />
			</then>
		</if>
	</target>
	<target name="upgrade_db_demodel" >
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_demodel_mysql" />
			</then>
		<elseif>
			<equals arg1="oracle" arg2="${database.type}" />
			<then>
				<antcall target="upgrade_db_demodel_oracle" />
			</then>
		</elseif>
		<else>
			<echo message="DATABASE UPGRADATION FOR DYNAMIC EXTENSIONS FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
		</else>
		</if>
	</target>
			<!--MySQL Database Upgradation -->
	<target name="upgrade_db_demodel_mysql">
		<echo message="Upgrading MySQL Database for DE model Application ..." />
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/dropdeconstraints.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/createnewtable.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/alterqueries.sql" /> 
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/MySql/addconstraints.sql" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	<!--Oracle Database Upgradation -->
	<target name="upgrade_db_demodel_oracle">
		<echo message="Upgrading Oracle Database for DE model Application ..." />
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/dropdeconstraints.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/createnewtable.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/alterqueries.sql" />
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/addconstraints.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<transaction src="${dbupgrade.sql.dir}/DEDBUpgrade/Oracle/addsequence.sql" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
			
	<target name="create_category">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />					
			</fileset>
		</delete>
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore" />				
		<unwar src="${base.dir}/dynamicExtensions.war" dest="${temp.dir}/catissuecore"/>		
			<copy file="${base.dir}/DE_conf/hibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true"/>
			<copy file="${base.dir}/DE_conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true"/>
		
			<echo>Configuring logger ...</echo>
			<antcall target="configure_log4j" />
			<if>
				<equals arg1="mysql" arg2="${database.type}"/>
				<then>
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}"/>
					<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver"/>
					<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
					</replace>
				</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}"/>
				<then>							
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}"/>
					<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}"/>
					<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
				</then>
			</elseif>
			</if>
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}"/>
			<replacefilter token="@@DATABASE_PASSWORD@@" value="${database.password}"/>
		</replace>
				
		<java classname="edu.wustl.catissuecore.annotations.xmi.CategoryIntegration" fork="true" maxmemory="1024M">		
			<arg value="${categoryDefinitionFilePath}"/>
				<classpath>
					<pathelement location="${temp.dir}/catissuecore/WEB-INF/classes"/> 
		            <fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
			          	<include name="*.jar"/>
			           		<exclude name="uml-1.3.jar"/>
			         </fileset>
					<fileset dir="${lib.dir}">
							<include name="*.jar" />
					</fileset>
			    </classpath> 			
		</java>		
				
		<delete includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />					
			</fileset>
		</delete>				
	</target>
				
	<target name="import_permissible_values">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />					
			</fileset>
		</delete>
					
		<unwar src="${base.dir}/dynamicExtensions.war" dest="${temp.dir}/catissuecore"/>		
		<copy file="${base.dir}/DE_conf/hibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true"/>
		<copy file="${base.dir}/DE_conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true"/>
		
		<echo>Configuring logger ...</echo>
		<antcall target="configure_log4j" />
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
				<include name="*.cfg.xml" />
				<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string}"/>
				<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver"/>
				<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}"/>
				<then>							
					<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string}"/>
					<replacefilter token="@@DRIVER@@" value="${oracle.driver.string}"/>
					<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
				</then>
			</elseif>
		</if>
		<replace dir="${temp.dir}/catissuecore/WEB-INF/classes">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}"/>
			<replacefilter token="@@DATABASE_PASSWORD@@" value="${database.password}"/>
		</replace>		
					
		<java classname="edu.common.dynamicextensions.util.parser.ImportPermissibleValues" fork="true" maxmemory="1024M">		
			<arg value="${permissibleValuesFile}"/>
			<classpath>
				<pathelement location="${temp.dir}/catissuecore/WEB-INF/classes"/> 
			       	<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib">
						<include name="*.jar"/>
			           		<exclude name="uml-1.3.jar"/>
			         </fileset>		
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
			</classpath> 			
		</java>		
					
		<delete includeemptydirs="true">
			<fileset dir="${temp.dir}/catissuecore">
				<include name="**/*" />					
			</fileset>
		</delete>
	</target>
	
	<!--  ShippingTracking - start -->
	<!-- Check user selected deploy.shippingtracking to true and shippingtracking.zip exists -->
	<target name="st_check_prerequisite">
		<!-- Check shippingtracking.zip file exists or not in base directory. -->
		<available file="${base.dir}/shippingtracking.zip" property="file.exists" value="false" />
		<if>
			<not>
			   <isset property="file.exists"/>
			</not>
			<then>
			   <!-- <fail message="ShippingTracking.zip file not found. It should be in base directory to deploy shippingtracking." />  -->
			   <echo message="ShippingTracking.zip file not found. It should be in base directory to deploy shippingtracking." level="error" />
			</then>
			<else>
			   <echo message="ShippingTracking is ready to use."/>
			</else>
		</if>
	</target>
	
	<!-- Integrating shipping tracking application with catissue -->
	<target name="st_integrate_app" depends="st_check_prerequisite" if="file.exists" >
		<echo message="Integrating shippingtracking app ...." />
		<unzip src="shippingtracking.zip" dest="${temp.dir}/shippingtracking" overwrite="true" /> 

		<!-- Inject db specific information to configuration files -->
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="st_mysql_config" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="st_oracle_config" />
				</then>
			</elseif>
		</if>
		
		<!-- 1) Copy shippingtracking.jar -> copy it to catissue/WEB-INF/Lib -->
		<copy file="${temp.dir}/shippingtracking/shippingtracking.jar" todir="${temp.dir}/catissuecore/WEB-INF/lib" overwrite="true" />
		
		<!-- 2) Copy *.properties, st*.cfg.xml, *.jsp, *.css, *.images, st*-struts-config.xml to respective folders -->		
		<copy todir="${temp.dir}/catissuecore/WEB-INF/classes" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking">
				<include name="ShippingTrackingApplicationResources.properties" />
				<include name="ShippingTrackingHibernate.cfg.xml" />
			</fileset>
		</copy>
		<copy todir="${temp.dir}/catissuecore/WEB-INF" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking">
				<include name="shippingtracking-struts-config.xml" />
				<include name="ShippingTracking-tiles-defs.xml" />
			</fileset>
		</copy>

		<copy todir="${temp.dir}/catissuecore/css" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking/css" />
		</copy>
		<copy todir="${temp.dir}/catissuecore/jss" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking/jss" />
		</copy>
		<copy todir="${temp.dir}/catissuecore/pages" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking/pages" />
		</copy>
		<copy todir="${temp.dir}/catissuecore/images" overwrite="true">
			<fileset dir="${temp.dir}/shippingtracking/images" />
		</copy>
		
		<!-- 3) Inject st-struts-config.xml entry in catisssue -> web.xml -->
		<replace file="${temp.dir}/catissuecore/WEB-INF/web.xml">
			<replacefilter token="/WEB-INF/${catissue.struts.config.file}" value="/WEB-INF/${catissue.struts.config.file}, /WEB-INF/shippingtracking-struts-config.xml" />
		</replace>
		
		<!-- 4) Inject db-util.properties entry in catissue -> db-util.properties -->
		<replace file="${temp.dir}/catissuecore/WEB-INF/classes/dbutil.properties">
			<replacefilter token="${catissue.hibernate.config.file}" value="${catissue.hibernate.config.file}, ShippingTrackingHibernate.cfg.xml" />
		</replace>
		
		<!-- 5) Inject "/WEB-INF/ShippingTracking-tiles-defs.xml" entry in catisssue -> struts-config.xml -->
		<replace file="${temp.dir}/catissuecore/WEB-INF/${catissue.struts.config.file}">
			<replacefilter token="/WEB-INF/${catissue.tiles.def.file}" value="/WEB-INF/${catissue.tiles.def.file}, /WEB-INF/ShippingTracking-tiles-defs.xml" />
		</replace>
		
	</target>
	
	<!-- Modify shippingtracking configuration For MySQL -->
	<target name="st_mysql_config">
		<replace file="${temp.dir}/shippingtracking/ShippingTrackingHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${mysql.dialect.string}" />
		</replace>
	</target>
	
	<!-- Modify shippingtracking configuration For ORACLE -->
	<target name="st_oracle_config">
		<replace file="${temp.dir}/shippingtracking/ShippingTrackingHibernate.cfg.xml">
			<replacefilter token="${mysql.dialect.string}" value="${oracle.dialect.string}" />
		</replace>
	</target>
	
	<!-- Deploying shippingtracking db -->
	<target name="st_deploy_db" depends="st_check_prerequisite" if="file.exists">
		<echo message="Deploying shippingtracking db ...." />
		<unzip src="shippingtracking.zip" dest="${temp.dir}/shippingtracking" overwrite="true" />
		
		<if>
			<equals arg1="mysql" arg2="${database.type}" />
			<then>
				<antcall target="st_deploy_db_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" />
				<then>
					<antcall target="st_deploy_db_oracle" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		
		<delete dir="${temp.dir}"/>
	</target>
	
	<!-- Deploying shippingtracking db for mysql -->
	<target name="st_deploy_db_mysql">
		<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${temp.dir}/shippingtracking/SQL/MYSQL/shippingtracking.sql" />
			
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<!-- Deploying shippingtracking db for oracle -->
	<target name="st_deploy_db_oracle">
		<sql driver="${oracle.driver.string}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${temp.dir}/shippingtracking/SQL/oracle/shippingtracking.sql" />
						
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>
	
	<!--  ShippingTracking - end -->
	
</project>