<project name="run-tools file" basedir="." default="runClient">
	<property name="service.url" value="https://catissuesvc.wustl.edu:443/wsrf/services/cagrid/Catissue_cacore" />
	<!--<property name="service.url" value="https://sbhost07-vm05.semanticbits.com:9443/wsrf/services/cagrid/Catissue_cacore" />-->
     <property name="decodegen.dir" value="${basedir}/../DECodeGen" />

    <condition property="isUnix" value="true"><or><os family="unix" /><os family="mac" /></or></condition>
    <condition property="isWindows" value="true"><os family="windows" /></condition>

    <path id="cp">
        <fileset dir="${basedir}/ext/dependencies/default/jars"><include name="*.jar"/></fileset>
        <fileset dir="${basedir}/de_codegen"><include name="*.jar" /></fileset>
    </path>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${basedir}/lib/ant-contrib.jar"/>
        </classpath>
    </taskdef>

	<target name="runClient" depends="checkContribTasksDefined, defineContribTasks,checkGlobus, defineClasspaths" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}" />
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
            <arg value="-url" />
            <arg value="${service.url}" />
        </java>
    </target>

    <target name="runQuery1" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
        <property name="runclasspath" refid="run.classpath"/>
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="./cqls/Query205.xml"/>
        </java>
    </target>

      <target name="runCountQuery1" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths"
            description="Run the sample Client">
        <property name="runclasspath" refid="run.classpath"/>
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient"
              classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="./cqls/CountQuery1.xml"/>
        </java>
    </target>

     <target name="runCountQuery2" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths"
            description="Run the sample Client">
        <property name="runclasspath" refid="run.classpath"/>
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient"
              classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="./cqls/CountQuery2.xml"/>
        </java>
    </target>



    <target name="runQuery1_1" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query1.xml" />
  </java>
</target>


<target name="runQuery2" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query2.xml" />
  </java>
</target>
<target name="runQuery3" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query3.xml" />
  </java>
</target>

<target name="runQuery4" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query4.xml" />
  </java>
</target>

<target name="runQuery5" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query5.xml" />
  </java>
</target>

<target name="runQuery205" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query205.xml" />
  </java>
</target>

<target name="runQuery206" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query206.xml" />
  </java>
</target>

<target name="runQuery207" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query207.xml" />
  </java>
</target>

<target name="runQuery208" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
    <property name="runclasspath" refid="run.classpath"/>
	<echo message="Connecting to service: ${service.url}" />
    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
		<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
        <arg value="-url" />
		<arg value="${service.url}" />
        <arg value="./cqls/Query208.xml" />
  </java>
</target>
	
	<target name="runQuery" depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run the sample Client">
	    <property name="runclasspath" refid="run.classpath"/>
		<echo message="Connecting to service: ${service.url}" />
		<echo message="${testFile}"/>
	    <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.Catissue_cacoreClient" classpathref="run.classpath" fork="yes">
	        <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
	        <arg value="-url" />
		    <arg value="${service.url}" />
	        <arg value="${testFile}" />
	  </java>
	</target>
		
	
    <target name="runAllQueries"  depends="checkContribTasksDefined, defineContribTasks, checkGlobus, defineClasspaths" description="Run queries against each caTissue Object" >
        <foreach delimiter="," param="testFile" target="runQuery" inheritall="true">
        	<path id="base.path">
        	      <fileset dir="./cqls" casesensitive="no">
        	        <include name="**/*.xml"/>
        	      </fileset>
        	</path>
         </foreach>
    </target>

    <!--START   Writable API targets-->

    <target name="CreateChemotherapy" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="CreateChemotherapy"/>
        </java>
    </target>

    <target name="CreateParticipant" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="CreateParticipant"/>
        </java>
    </target>

    <target name="CreateParticipantAndCPR" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="CreateParticipantAndCPR"/>
        </java>
    </target>

    <target name="CreateSpecimen" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="CreateSpecimen"/>
            <arg value="${CPE}"/>
            <arg value="${CPR}"/>
            <arg value="${SC}"/>
            <arg value="${SCHAR}"/>
        </java>
    </target>

    <target name="CreateOrder" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="CreateOrder"/>
            <arg value="${SPC}"/>
        </java>
    </target>

    <target name="UpdateOrder" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="UpdateOrder"/>
            <arg value="${SPC}"/>
            <arg value="${DP}"/>
            <arg value="${O}"/>
            <arg value="${OI}"/>
        </java>
    </target>

    <target name="DistributeOrder" depends="init" description="Run the sample Client">
        <echo message="Connecting to service: ${service.url}"/>
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.client.WritableAPIClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}"/>
            <arg value="-url"/>
            <arg value="${service.url}"/>
            <arg value="DistributeOrder"/>
            <arg value="${SPC}"/>
            <arg value="${DP}"/>
            <arg value="${O}"/>
            <arg value="${OI}"/>
            <arg value="${DI}"/>
        </java>
    </target>

    <!--END     Writable API targets-->

    <target name="-mergeORMFiles">
        <echo message="Updating ORM files..." />
        <property name="tempFolder" value="./temp/ormTemp/" />
        <property name="ormFile" value="./lib/catissue_cacore-orm.jar" />
        <mkdir dir="${tempFolder}" />
        <unzip src="./lib/catissue_cacore-orm.jar" dest="${tempFolder}" />
        <copy todir="${tempFolder}" overwrite="true" verbose="true">
            <fileset dir="./de_codegen/hbms">
                <include name="**/*.*" />
            </fileset>
        </copy>
        <jar basedir="${tempFolder}" destfile="${ormFile}" />
        <echo message="Updating ORM files...DONE." />
    </target>

    <!-- START Service rebuild -->
    <target name="updateService" depends="all">

        <tstamp><format property="install.time" pattern="yyyy-MM-dd_HH-mm"/></tstamp>
        <mkdir dir="./logs" />
        <record name="./logs/updateService-${install.time}.log" action="start" />

    	<delete dir="./temp" failonerror="false"/>
    	<mkdir dir="./temp" />

        <antcall target="-mergeORMFiles" />

        <!-- DOZER MERGE -->
        <foreach target="-processDozer" param="fullFileName" inheritall="true">
            <fileset dir="./de_codegen/artifacts" casesensitive="yes">
                <include name="**/*-dozer-files.jar"/>
            </fileset>
        </foreach>

        <!-- Compile DECodeGen and prepare artifacts -->
        <ant inheritAll="false" inheritRefs="false" antfile="${decodegen.dir}/build.xml" target="all" dir="${decodegen.dir}">
            <property name="basedir" value="${decodegen.dir}"/>
        </ant>

        <!-- XMIs MERGE-->
        <antcall target="-fixArtifacts">
            <param name="dir" value="${basedir}/de_codegen/xmi" />
        </antcall>

        <ant inheritAll="false" inheritRefs="false" antfile="../DECodeGen/build.xml" target="-doMergeXMIs" dir="../DECodeGen/">
            <property name="xmiFolder" value="${basedir}/de_codegen/xmi" />
            <property name="outputXMLFile" value="${basedir}/de_codegen/xmi/mergeResult.xml" />
            <property name="outputFixedXMLFile" value="${basedir}/de_codegen/xmi/fixedDomainModel.xml" />
        </ant>

        <!-- OVERWRITE ./etc/catissue_cacore_domainModel.xml -->
        <copy file="${basedir}/de_codegen/xmi/fixedDomainModel.xml" tofile="${basedir}/etc/catissue_cacore_domainModel.xml" />

        <!--COPY BEANS-->
<!--
        <copy todir="${basedir}/lib">
            <fileset dir="${basedir}/de_codegen/artifacts/">
                <include name="*-beans.jar" />
            </fileset>
        </copy>
-->

        <!-- MERGE CASTOR MAPPINGS -->
        <foreach target="-doMergeCastorMappingXMLs" param="fullJarFileName" inheritall="true">
            <fileset dir="./de_codegen/artifacts" casesensitive="yes">
                <include name="*-schema.jar"/>
            </fileset>
        </foreach>

        <!-- XSDs IMPORT -->
        <foreach target="-importXSDs" param="fullJarFileName" inheritall="false">
            <fileset dir="./de_codegen/artifacts" casesensitive="yes">
                <include name="*-schema.jar"/>
            </fileset>
        </foreach>

        <!-- CLEAN UP -->
        <delete>
            <fileset dir="./de_codegen/artifacts">
                <include name="*.jar" />
            </fileset>
            <fileset dir="./de_codegen/xmi">
                <exclude name="caTissueCore_v2.0.xmi" />
                <include name="*.xmi" />
                <include name="*.xml" />
            </fileset>
        </delete>

        
    </target>

	<target name="-fixArtifacts">		
    	<echo>Fixing inconsistent XMIs and other artifacts...</echo>

        <!-- CASTOR -->
    	<replace dir="${dir}" includes="**/*" summary="true" token="ParticipantRecordEntry_Participant" value="ParticipantRecordEntryCollection"/>
		<replace dir="${dir}" includes="**/*" summary="true" token="SCGRecordEntry_SpecimenCollectionGroup" value="ScgRecordEntryCollection"/>		
		<replace dir="${dir}" includes="**/*" summary="true" token="SpecimenRecordEntry_Specimen" value="SpecimenRecordEntryCollection"/>
		<replace dir="${dir}" includes="**/*" summary="true" token="name=&quot;SpecimenRecordEntryCollectionBaseSolidTissuePathologyAnnotation" value="name=&quot;SpecimenRecordEntry_SpecimenBaseSolidTissuePathologyAnnotation"/>

        <!-- DOZER -->
        <replace dir="${dir}" includes="**/*" summary="true" token="&lt;a&gt;SpecimenRecordEntryCollectionBaseSolidTissuePathologyAnnotation&lt;/a&gt;" value="&lt;a&gt;SpecimenRecordEntry_SpecimenBaseSolidTissuePathologyAnnotation&lt;/a&gt;"/>
        <replace dir="${dir}" includes="**/*" summary="true" token="&lt;b&gt;SpecimenRecordEntryCollectionBaseSolidTissuePathologyAnnotation.specimenRecordEntry&lt;/b&gt;" value="&lt;b&gt;specimenRecordEntry_SpecimenBaseSolidTissuePathologyAnnotation.specimenRecordEntry&lt;/b&gt;"/>

	</target>

<!--
    <target name="mergeCastor">
        <foreach target="-doMergeCastorMappingXMLs" param="fullJarFileName" inheritall="true">
            <fileset dir="./de_codegen/artifacts" casesensitive="yes">
                <include name="*-schema.jar"/>
            </fileset>
        </foreach>
    </target>
-->

    <target name="-doMergeCastorMappingXMLs">
        <basename property="jarfilename" file="${fullJarFileName}"/>
        <unjar src="${fullJarFileName}" dest="./temp/${jarfilename}" />

        <antcall target="-fixArtifacts">
            <param name="dir" value="./temp/${jarfilename}" />
        </antcall>

        <property name="fileOne" value="./temp/${jarfilename}/xml-mapping.xml" />
        <property name="fileTwo" value="./temp/${jarfilename}/unmarshaller-xml-mapping.xml" />

        <available file="${fileOne}" property="fileOne.exists" />
        <available file="${fileTwo}" property="fileTwo.exists" />

        <echo message="FILE1: ${fileOne}: ${fileOne.exists}" />
        <echo message="FILE2: ${fileTwo}: ${fileTwo.exists}" />

        <!--
            THE ORDER OF THE XML MAPPING FILES IS IMPORTANT, THAT's WHY ORIGINAL CASTOR FILE WILL GO FIRST
            SEE: edu.wustl.catissuecore.domain.util.CastorMappingMerger#doMerge
            SEE: https://bugzilla.wustl.edu/bugzilla/show_bug.cgi?id=22165
        -->
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.util.CastorMappingMerger" fork="yes" dir="${basedir}">
            <classpath>
                <fileset dir="./build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="./lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="./src/edu/wustl/catissuecore/domain/Catissue_cacore-xml-mapping.xml"/>
            <arg value="${fileOne}"/>
            <arg value="./src/edu/wustl/catissuecore/domain/Catissue_cacore-xml-mapping.xml"/>
        </java>

        <java failonerror="true" classname="edu.wustl.catissuecore.domain.util.CastorMappingMerger" fork="yes" dir="${basedir}">
            <classpath>
                <fileset dir="./build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="./lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="./src/edu/wustl/catissuecore/domain/Catissue_cacore-unmarshaller-xml-mapping.xml"/>
            <arg value="${fileTwo}"/>
            <arg value="./src/edu/wustl/catissuecore/domain/Catissue_cacore-unmarshaller-xml-mapping.xml"/>
        </java>

    </target>

    <target name="-importXSDs">
        <basename property="jarfilename" file="${fullJarFileName}"/>
        <echo message="Processing XSD folder: ${jarfilename} "/>
        <unjar src="${fullJarFileName}" dest="./temp/${jarfilename}" />
    	
       	<!-- Do various fixes to the schemas. -->
        <antcall target="-fixArtifacts">
            <param name="dir" value="./temp/${jarfilename}" />
        </antcall>   	
    	
    	<java failonerror="true" classname="edu.wustl.catissuecore.domain.util.XSDConflictsResolver" fork="yes">
            <classpath>
                <fileset dir="build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="./temp/${jarfilename}"/>
    	</java>
    	
    	
    	<!-- Import main XSD only. -->
        <property file="./temp/${jarfilename}/info.properties" />
        <echo message="DEBUG: Importing main XSD: ${packagename}" />
        <foreach target="-importXSD" param="fullFileName" inheritall="true">
            <fileset dir="./temp/${jarfilename}" casesensitive="yes">
                <include name="gov.nih.nci.dynext*.xsd"/>
                <!--<include name="${packagename}.xsd"/>-->
            </fileset>
        </foreach>

        <!--COPY Other files - DO NOT OVERWRITE -->
        <!--<copy overwrite="false" verbose="true">-->

    	<copy todir="./schema/Catissue_cacore" overwrite="true" verbose="true">
    		<fileset dir="./temp/${jarfilename}" casesensitive="yes">
            	<include name="SCGRecordEntry.xsd"/>
            	<include name="SpecimenRecordEntry.xsd"/>
            	<include name="ParticipantRecordEntry.xsd"/>			
            	<include name="ActionApplicationRecordEntry.xsd"/>
			</fileset>
    	</copy>
    	
    	<antcall target="all"/>
    	     	
    </target>

    <target name="-importXSD">
        <basename property="filename" file="${fullFileName}"/>
    	<echo message="Processing: ${filename} "/>
        <antcall target="doImportXSD">
            <param name="xsdFile" value="${fullFileName}" />
        </antcall>
    </target>

    <target name="-processDozer">
        <basename property="filename" file="${fullFileName}"/>
        <echo message="Processing: ${filename} "/>
        <mkdir dir="./temp/${filename}" />
        <unjar src="${fullFileName}" dest="./temp/${filename}" />

        <antcall target="-fixArtifacts">
            <param name="dir" value="./temp/${filename}" />
        </antcall>
    	
        <java failonerror="true" classname="edu.wustl.catissuecore.domain.util.DozerMerger" fork="yes">
            <classpath>
                <fileset dir="build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="mappings"/>
            <arg value="./src/dozerBeanMapping.xml"/>
            <arg value="./temp/${filename}/DozerBeanMapping.xml"/>
            <arg value="./src/dozerBeanMapping.xml"/>
        </java>

        <java failonerror="true" classname="edu.wustl.catissuecore.domain.util.DozerMerger" fork="yes">
            <classpath>
                <fileset dir="build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="properties"/>
            <arg value="./temp/${filename}/genericCustomConverterParentRef.properties"/>
            <arg value="./src/edu/wustl/catissuecore/domain/genericCustomConverterParentRef.properties"/>
            <arg value="./src/edu/wustl/catissuecore/domain/genericCustomConverterParentRef.properties"/>
        </java>

        <java failonerror="true" classname="edu.wustl.catissuecore.domain.util.DozerMerger" fork="yes">
            <classpath>
                <fileset dir="build/lib/"><include name="*.jar" /></fileset>
                <fileset dir="lib/"><include name="*.jar" /></fileset>
            </classpath>
            <arg value="properties"/>
            <arg value="./temp/${filename}/genericCustomConverterSets.properties"/>
            <arg value="./src/edu/wustl/catissuecore/domain/genericCustomConverterSets.properties"/>
            <arg value="./src/edu/wustl/catissuecore/domain/genericCustomConverterSets.properties"/>
        </java>

    </target>

    <target name="doImportXSD">
        <property name="xsdFile" value="${decodegen.dir}/src/test/resources/withIdentifier/clinical_annotation.xsd"/>
        <echo message="Importing XSD: ${xsdFile}" />
        <antcall target="ex">
            <param name="xsdFile" value="${xsdFile}" />
        </antcall>
    </target>

    <target name="exUnix" unless="isWindows">
        <exec dir="../DECodeGen/" executable="chmod">
            <arg value="755"/>
            <arg value="./execute.sh"/>
        </exec>
        <exec dir="../DECodeGen/" executable="./execute.sh">
            <arg value="os"/>
            <arg value="Unix"/>
            <arg value="${xsdFile}"/>
        </exec>
    </target>

    <target name="ex" unless="isUnix" depends="exUnix">
        <exec dir="../DECodeGen/" executable="cmd">
            <arg value="/c"/>
            <arg value="execute.bat"/>
            <arg value="os"/>
            <arg value="Windows"/>
            <arg value="${xsdFile}"/>
        </exec>
    </target>

    <target name="-testJ">
        <ant inheritAll="false" inheritRefs="false" antfile="../DECodeGen/build.xml" target="-doMergeXMIs" dir="../DECodeGen/">
            <property name="xmiFolder" value="/temp/xmi/" />
            <property name="outputXMLFile" value="/temp/xmi/result.xml" />
            <property name="outputFixedXMLFile" value="/temp/xmi/ZZZ.xml" />
        </ant>
    </target>

    <!-- END -->
</project>