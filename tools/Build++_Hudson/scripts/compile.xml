<!-- =================================================================== -->
        <!-- Build file                                                          -->
        <!-- =================================================================== -->

<project name="Compile" default="compile">

    <!-- =================================================================== -->
    <!-- Generic Stuff                                                       -->
    <!-- =================================================================== -->
    <import file="base.xml"/>

	<path id="onejar.classpath">
        <fileset dir="${onejar.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- =================================================================== -->
    <!-- Copy all resource to build folder                                   -->
    <!-- =================================================================== -->
    <target name="copy.resources"
            description="copy all the resources needed for run-time. eg. .properties and .gif files">
        <copy todir="${output.java.build.class.dir}">
            <fileset dir="${project.src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.bmp"/>
                <include name="**/*.txt"/>
                <include name="**/*.xml"/>
                <include name="**/*.csv"/>
                <include name="**/*.html"/>
                <include name="**/*.txt"/>
                <include name="**/*.xls"/>
                <include name="**/*.xsl"/>
                <include name="**/*.png"/>
                <include name="**/*.pdf"/>
            </fileset>
        </copy>
        <copy todir="${output.java.build.test.dir}">
            <fileset dir="${project.test.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.bmp"/>
                <include name="**/*.txt"/>
                <include name="**/*.xml"/>
                <include name="**/*.csv"/>
                <include name="**/*.html"/>
                <include name="**/*.txt"/>
                <include name="**/*.xls"/>
                <include name="**/*.xsl"/>
                <include name="**/*.png"/>
                <include name="**/*.pdf"/>
            </fileset>
            <fileset dir="${project.uat.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.bmp"/>
                <include name="**/*.txt"/>
                <include name="**/*.xml"/>
                <include name="**/*.csv"/>
                <include name="**/*.html"/>
                <include name="**/*.txt"/>
                <include name="**/*.xls"/>
                <include name="**/*.xsl"/>
                <include name="**/*.png"/>
                <include name="**/*.pdf"/>
            </fileset>
        </copy>
    </target>


    <!-- =================================================================== -->
    <!-- Compile                                                             -->
    <!-- =================================================================== -->
    <target name="compile" depends="copy.resources">
        <echo message="source dir: ${compile.src.dir}"/>
        <echo message="build dir : ${compile.build.dir}"/>

        <compile.macro
                classpathref="${compile.classpathref}"
                classpath="${compile.classpath}"
                srcdir="${compile.src.dir}"
                destdir="${compile.build.dir}"/>
    </target>


    <!-- =================================================================== -->
    <!-- Compile Macro                                                       -->
    <!-- =================================================================== -->
    <macrodef name="compile.macro">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <attribute name="classpathref" default=""/>
        <attribute name="classpath" default=""/>
        <sequential>
            <echo message="=== Compiling @{srcdir} into @{destdir}  "/>

            <javac failonerror="true"

                   destdir="@{destdir}"
                   classpath="@{classpath}"
                   classpathref="@{classpathref}"
                   debug="${compiler.debug}"
                   deprecation="${compiler.deprecation}"
                   optimize="${compiler.optimize}"
                   target="${compiler.target}"
                   source="${compiler.source}"
                   fork="${compiler.fork}"
                   nowarn="${compiler.nowarn}"
                   memoryInitialSize="${compiler.ms}"
                   memoryMaximumSize="${compiler.mx}">
           

            <src path="@{srcdir}"/>

            
        </javac>

    </sequential>
</macrodef>


        <!-- =================================================================== -->
        <!-- Compile  into jar                                                           -->
        <!-- =================================================================== -->


<target name="compileintojar" depends="copy.resources">
    <echo message="source dir: ${compile.src.dir}"/>
    <echo message="build dir : ${compile.build.dir}"/>
	
    <!--
    	Now add this property in base.xml file
    	<property name="prj.base.dir" value="E:/SLR-Build++/src/content-search" />
    -->	
	
    <!-- =================================================================== -->
    <!-- New Compile target                                                  -->
    <!-- =================================================================== -->
    <ant dir="${prj.base.dir}" target="compile" inheritAll="false" />  	
   
 <!--   <compile.jar.macro
            classpathref="${compile.classpathref}"
            classpath="${compile.classpath}"
            srcdir="${compile.src.dir}"
            destdir="${compile.build.dir}"
            jardir="${output.java.build.jar.dir}"
            jarname="${output.java.build.jar.name}"
            /> -->
</target>


<macrodef name="compile.jar.macro">
    <attribute name="jardir"/>
    <attribute name="jarname"/>
    <attribute name="srcdir"/>
    <attribute name="destdir"/>
    <attribute name="classpathref" default=""/>
    <attribute name="classpath" default=""/>
    <attribute name="failonerror" default="true"/>
    <attribute name="debug" default="true"/>
    <attribute name="deprecation" default="off"/>
    <attribute name="optimize" default="off"/>
    <attribute name="target" default="1.4"/>
    <attribute name="fork" default="no"/>
    <attribute name="nowwarn" default="off"/>
    <attribute name="memoryInitialSize" default="64m"/>
    <attribute name="memoryMaximumSize" default="256m"/>
    <sequential>
        <echo message="=== Compiling @{srcdir} into @{jardir}/@{jarname}.jar ==="/>
        <delete>
            <fileset dir="@{destdir}" includes="**/*.*"/>
        </delete>
        <compile.macro
                classpathref="@{classpathref}"
                classpath="@{classpath}"
                srcdir="@{srcdir}"
                destdir="@{destdir}"/>
        <copy todir="@{destdir}">
            <fileset dir="@{srcdir}" excludes="**/*.java"/>
        </copy>
        <ant antfile="manifest.xml"/>

		<if>
            <equals arg1="${package.third.party.jar}" arg2="true"/>
            <then>
				 <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" classpathref="onejar.classpath"/>

				 <one-jar destfile="@{jardir}/@{jarname}.jar">
						<main manifest="@{jardir}/MANIFEST.MF">
							<!-- Construct main.jar from classes and source code -->
							<fileset dir="@{destdir}"/>
						</main>
						<lib>
							<fileset file="${project.lib.dir}/*.jar"/>
						</lib>
					</one-jar>

            </then>
            <else>
                 <jar jarfile="@{jardir}/@{jarname}.jar"
					 manifest="@{jardir}/MANIFEST.MF">
					<fileset dir="@{destdir}" includes="**/*.*"/>
				</jar>
            </else>
        </if>

        <delete file="@{jardir}/MANIFEST.MF"/>
      
    </sequential>
</macrodef>

        </project>